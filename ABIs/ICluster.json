{
  "abi": [
    {
      "inputs": [],
      "name": "Cluster__InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Cluster__Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IGovernor",
          "name": "governor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IGovernor",
          "name": "governor",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IVotes",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "selfDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "castVote(address,uint256,uint8)": "c0ab2cc6",
    "deposit(address,uint256)": "47e7ef24",
    "maxCapacity()": "59b6a0c9",
    "propose(address,address[],uint256[],bytes[],string)": "c50adadf",
    "selfDelegate(address)": "82b5e889",
    "tokenBalances(address)": "523fba7f",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Cluster__InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Cluster__Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernor\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVotes\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"selfDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Specifies the interface that the Cluster contract should adhere to\",\"kind\":\"dev\",\"methods\":{\"castVote(address,uint256,uint8)\":{\"details\":\"Cast a vote on a governance proposal\",\"params\":{\"governor\":\"The governance contract handling the proposal\",\"proposalId\":\"The ID of the proposal to vote on\",\"support\":\"The type of support (e.g., for, against)\"}},\"deposit(address,uint256)\":{\"details\":\"Deposit a given amount of a specific token into the Cluster\",\"params\":{\"amount\":\"The amount of tokens to deposit\",\"token\":\"The ERC20 token to deposit\"}},\"maxCapacity()\":{\"details\":\"Retrieve the maximum allowable balance of this Cluster\",\"returns\":{\"_0\":\"The maximum balance this Cluster can hold\"}},\"propose(address,address[],uint256[],bytes[],string)\":{\"details\":\"Propose a new governance action\",\"params\":{\"calldatas\":\"Array of calldata for the proposal actions\",\"description\":\"A text description of the proposal\",\"governor\":\"The governance contract where the proposal is made\",\"targets\":\"Array of target addresses for the proposal actions\",\"values\":\"Array of values for the proposal actions\"},\"returns\":{\"_0\":\"The ID of the new proposal\"}},\"selfDelegate(address)\":{\"details\":\"Delegate the contract's voting power to itself\",\"params\":{\"token\":\"The token with which to perform self-delegation\"}},\"tokenBalances(address)\":{\"details\":\"Retrieve the balance of a specific token in this Cluster\",\"params\":{\"token\":\"The ERC20 token whose balance needs to be fetched\"},\"returns\":{\"_0\":\"The balance of the specified token within this Cluster\"}},\"withdraw(address,address,uint256)\":{\"details\":\"Withdraw a given amount of a specific token to a destination address\",\"params\":{\"amount\":\"The amount of tokens to withdraw\",\"to\":\"The recipient address\",\"token\":\"The ERC20 token to withdraw\"}}},\"title\":\"ICluster Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdraw(address,address,uint256)\":{\"notice\":\"Can only be called by the Cluster's admin\"}},\"notice\":\"Clusters serve as containers for tokens and are managed by an admin\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICluster.sol\":\"ICluster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c\",\"dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "Cluster__InsufficientLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Cluster__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract IGovernor",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxCapacity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IGovernor",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IVotes",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfDelegate"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenBalances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "castVote(address,uint256,uint8)": {
            "details": "Cast a vote on a governance proposal",
            "params": {
              "governor": "The governance contract handling the proposal",
              "proposalId": "The ID of the proposal to vote on",
              "support": "The type of support (e.g., for, against)"
            }
          },
          "deposit(address,uint256)": {
            "details": "Deposit a given amount of a specific token into the Cluster",
            "params": {
              "amount": "The amount of tokens to deposit",
              "token": "The ERC20 token to deposit"
            }
          },
          "maxCapacity()": {
            "details": "Retrieve the maximum allowable balance of this Cluster",
            "returns": {
              "_0": "The maximum balance this Cluster can hold"
            }
          },
          "propose(address,address[],uint256[],bytes[],string)": {
            "details": "Propose a new governance action",
            "params": {
              "calldatas": "Array of calldata for the proposal actions",
              "description": "A text description of the proposal",
              "governor": "The governance contract where the proposal is made",
              "targets": "Array of target addresses for the proposal actions",
              "values": "Array of values for the proposal actions"
            },
            "returns": {
              "_0": "The ID of the new proposal"
            }
          },
          "selfDelegate(address)": {
            "details": "Delegate the contract's voting power to itself",
            "params": {
              "token": "The token with which to perform self-delegation"
            }
          },
          "tokenBalances(address)": {
            "details": "Retrieve the balance of a specific token in this Cluster",
            "params": {
              "token": "The ERC20 token whose balance needs to be fetched"
            },
            "returns": {
              "_0": "The balance of the specified token within this Cluster"
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "Withdraw a given amount of a specific token to a destination address",
            "params": {
              "amount": "The amount of tokens to withdraw",
              "to": "The recipient address",
              "token": "The ERC20 token to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "withdraw(address,address,uint256)": {
            "notice": "Can only be called by the Cluster's admin"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/ICluster.sol": "ICluster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7",
        "urls": [
          "bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d",
          "dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb",
        "urls": [
          "bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96",
          "dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9",
        "urls": [
          "bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6",
          "dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc",
        "urls": [
          "bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c",
          "dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/ICluster.sol",
    "id": 62000,
    "exportedSymbols": {
      "ICluster": [
        61999
      ],
      "IERC165": [
        52787
      ],
      "IERC20": [
        48295
      ],
      "IERC6372": [
        47524
      ],
      "IGovernor": [
        45314
      ],
      "IVotes": [
        47472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:2900:77",
    "nodes": [
      {
        "id": 61917,
        "nodeType": "PragmaDirective",
        "src": "36:24:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 61918,
        "nodeType": "ImportDirective",
        "src": "95:56:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62000,
        "sourceUnit": 48296,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61919,
        "nodeType": "ImportDirective",
        "src": "152:58:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "file": "@openzeppelin/contracts/governance/IGovernor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62000,
        "sourceUnit": 45315,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61920,
        "nodeType": "ImportDirective",
        "src": "211:61:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "file": "@openzeppelin/contracts/governance/utils/IVotes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62000,
        "sourceUnit": 47473,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61999,
        "nodeType": "ContractDefinition",
        "src": "465:2470:77",
        "nodes": [
          {
            "id": 61923,
            "nodeType": "ErrorDefinition",
            "src": "511:39:77",
            "nodes": [],
            "errorSelector": "3fe8fd1d",
            "name": "Cluster__InsufficientLiquidity",
            "nameLocation": "517:30:77",
            "parameters": {
              "id": 61922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:2:77"
            }
          },
          {
            "id": 61925,
            "nodeType": "ErrorDefinition",
            "src": "555:30:77",
            "nodes": [],
            "errorSelector": "2976566b",
            "name": "Cluster__Unauthorized",
            "nameLocation": "561:21:77",
            "parameters": {
              "id": 61924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:2:77"
            }
          },
          {
            "id": 61934,
            "nodeType": "FunctionDefinition",
            "src": "816:69:77",
            "nodes": [],
            "documentation": {
              "id": 61926,
              "nodeType": "StructuredDocumentation",
              "src": "591:220:77",
              "text": " @dev Retrieve the balance of a specific token in this Cluster\n @param token The ERC20 token whose balance needs to be fetched\n @return The balance of the specified token within this Cluster"
            },
            "functionSelector": "523fba7f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenBalances",
            "nameLocation": "825:13:77",
            "parameters": {
              "id": 61930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61929,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "846:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61934,
                  "src": "839:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 61928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61927,
                      "name": "IERC20",
                      "nameLocations": [
                        "839:6:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "839:6:77"
                    },
                    "referencedDeclaration": 48295,
                    "src": "839:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:14:77"
            },
            "returnParameters": {
              "id": 61933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61934,
                  "src": "876:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "875:9:77"
            },
            "scope": 61999,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61943,
            "nodeType": "FunctionDefinition",
            "src": "1079:56:77",
            "nodes": [],
            "documentation": {
              "id": 61935,
              "nodeType": "StructuredDocumentation",
              "src": "891:183:77",
              "text": " @dev Deposit a given amount of a specific token into the Cluster\n @param token The ERC20 token to deposit\n @param amount The amount of tokens to deposit"
            },
            "functionSelector": "47e7ef24",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1088:7:77",
            "parameters": {
              "id": 61941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61938,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1103:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61943,
                  "src": "1096:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 61937,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61936,
                      "name": "IERC20",
                      "nameLocations": [
                        "1096:6:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1096:6:77"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1096:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61940,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1118:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61943,
                  "src": "1110:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1095:30:77"
            },
            "returnParameters": {
              "id": 61942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:77"
            },
            "scope": 61999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61954,
            "nodeType": "FunctionDefinition",
            "src": "1436:69:77",
            "nodes": [],
            "documentation": {
              "id": 61944,
              "nodeType": "StructuredDocumentation",
              "src": "1141:290:77",
              "text": " @dev Withdraw a given amount of a specific token to a destination address\n @param token The ERC20 token to withdraw\n @param to The recipient address\n @param amount The amount of tokens to withdraw\n @notice Can only be called by the Cluster's admin"
            },
            "functionSelector": "d9caed12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1445:8:77",
            "parameters": {
              "id": 61952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61947,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1461:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61954,
                  "src": "1454:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 61946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61945,
                      "name": "IERC20",
                      "nameLocations": [
                        "1454:6:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1454:6:77"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1454:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61949,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1476:2:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61954,
                  "src": "1468:10:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61951,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1488:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61954,
                  "src": "1480:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1453:42:77"
            },
            "returnParameters": {
              "id": 61953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:77"
            },
            "scope": 61999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61960,
            "nodeType": "FunctionDefinition",
            "src": "1651:55:77",
            "nodes": [],
            "documentation": {
              "id": 61955,
              "nodeType": "StructuredDocumentation",
              "src": "1511:135:77",
              "text": " @dev Retrieve the maximum allowable balance of this Cluster\n @return The maximum balance this Cluster can hold"
            },
            "functionSelector": "59b6a0c9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxCapacity",
            "nameLocation": "1660:11:77",
            "parameters": {
              "id": 61956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1671:2:77"
            },
            "returnParameters": {
              "id": 61959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61960,
                  "src": "1697:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:9:77"
            },
            "scope": 61999,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61971,
            "nodeType": "FunctionDefinition",
            "src": "1968:112:77",
            "nodes": [],
            "documentation": {
              "id": 61961,
              "nodeType": "StructuredDocumentation",
              "src": "1712:251:77",
              "text": " @dev Cast a vote on a governance proposal\n @param governor The governance contract handling the proposal\n @param proposalId The ID of the proposal to vote on\n @param support The type of support (e.g., for, against)"
            },
            "functionSelector": "c0ab2cc6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "castVote",
            "nameLocation": "1977:8:77",
            "parameters": {
              "id": 61969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61964,
                  "mutability": "mutable",
                  "name": "governor",
                  "nameLocation": "2005:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61971,
                  "src": "1995:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGovernor_$45314",
                    "typeString": "contract IGovernor"
                  },
                  "typeName": {
                    "id": 61963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61962,
                      "name": "IGovernor",
                      "nameLocations": [
                        "1995:9:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45314,
                      "src": "1995:9:77"
                    },
                    "referencedDeclaration": 45314,
                    "src": "1995:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGovernor_$45314",
                      "typeString": "contract IGovernor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61966,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nameLocation": "2031:10:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61971,
                  "src": "2023:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61968,
                  "mutability": "mutable",
                  "name": "support",
                  "nameLocation": "2057:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61971,
                  "src": "2051:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 61967,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:5:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:85:77"
            },
            "returnParameters": {
              "id": 61970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2079:0:77"
            },
            "scope": 61999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61991,
            "nodeType": "FunctionDefinition",
            "src": "2525:214:77",
            "nodes": [],
            "documentation": {
              "id": 61972,
              "nodeType": "StructuredDocumentation",
              "src": "2086:434:77",
              "text": " @dev Propose a new governance action\n @param governor The governance contract where the proposal is made\n @param targets Array of target addresses for the proposal actions\n @param values Array of values for the proposal actions\n @param calldatas Array of calldata for the proposal actions\n @param description A text description of the proposal\n @return The ID of the new proposal"
            },
            "functionSelector": "c50adadf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "propose",
            "nameLocation": "2534:7:77",
            "parameters": {
              "id": 61987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61975,
                  "mutability": "mutable",
                  "name": "governor",
                  "nameLocation": "2561:8:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61991,
                  "src": "2551:18:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGovernor_$45314",
                    "typeString": "contract IGovernor"
                  },
                  "typeName": {
                    "id": 61974,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61973,
                      "name": "IGovernor",
                      "nameLocations": [
                        "2551:9:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45314,
                      "src": "2551:9:77"
                    },
                    "referencedDeclaration": 45314,
                    "src": "2551:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGovernor_$45314",
                      "typeString": "contract IGovernor"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61978,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "2596:7:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61991,
                  "src": "2579:24:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61976,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2579:7:77",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 61977,
                    "nodeType": "ArrayTypeName",
                    "src": "2579:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61981,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "2630:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61991,
                  "src": "2613:23:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61979,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2613:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 61980,
                    "nodeType": "ArrayTypeName",
                    "src": "2613:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61984,
                  "mutability": "mutable",
                  "name": "calldatas",
                  "nameLocation": "2661:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61991,
                  "src": "2646:24:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 61982,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "2646:5:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 61983,
                    "nodeType": "ArrayTypeName",
                    "src": "2646:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61986,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "2694:11:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61991,
                  "src": "2680:25:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61985,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2541:170:77"
            },
            "returnParameters": {
              "id": 61990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61991,
                  "src": "2730:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2730:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2729:9:77"
            },
            "scope": 61999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61998,
            "nodeType": "FunctionDefinition",
            "src": "2888:45:77",
            "nodes": [],
            "documentation": {
              "id": 61992,
              "nodeType": "StructuredDocumentation",
              "src": "2745:138:77",
              "text": " @dev Delegate the contract's voting power to itself\n @param token The token with which to perform self-delegation"
            },
            "functionSelector": "82b5e889",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfDelegate",
            "nameLocation": "2897:12:77",
            "parameters": {
              "id": 61996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61995,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2917:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 61998,
                  "src": "2910:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotes_$47472",
                    "typeString": "contract IVotes"
                  },
                  "typeName": {
                    "id": 61994,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61993,
                      "name": "IVotes",
                      "nameLocations": [
                        "2910:6:77"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47472,
                      "src": "2910:6:77"
                    },
                    "referencedDeclaration": 47472,
                    "src": "2910:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotes_$47472",
                      "typeString": "contract IVotes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2909:14:77"
            },
            "returnParameters": {
              "id": 61997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2932:0:77"
            },
            "scope": 61999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICluster",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 61921,
          "nodeType": "StructuredDocumentation",
          "src": "274:190:77",
          "text": " @title ICluster Interface\n @dev Specifies the interface that the Cluster contract should adhere to\n @notice Clusters serve as containers for tokens and are managed by an admin"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          61999
        ],
        "name": "ICluster",
        "nameLocation": "475:8:77",
        "scope": 62000,
        "usedErrors": [
          61923,
          61925
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 77
}