{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "contract StairwayDAO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daotoken",
      "outputs": [
        {
          "internalType": "contract DAOToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fBTC",
      "outputs": [
        {
          "internalType": "contract FakeBTC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fUSD",
      "outputs": [
        {
          "internalType": "contract FakeUSD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocol_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRecoverStuckTokensWithDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRecoverStuckTokensWithoutDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeemLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract StairwayTimelock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b5062016ca5806200002f6000396000f3fe60806040523480156200001157600080fd5b5060043610620001215760003560e01c80636694c06c11620000af578063c45a0155116200007a578063c45a0155146200020a578063d33219b4146200021e578063f2475ed01462000232578063f9c6b5681462000246578063fa7626d4146200025057600080fd5b80636694c06c14620001bd57806374a9f16514620001d1578063b9d35e7814620001db578063ba414fa614620001ef57600080fd5b806329e8d78811620000f057806329e8d788146200018157806331c42ca6146200018b5780634162169f14620001955780634755abbb14620001a957600080fd5b8063094e23f914620001265780630a9254e414620001575780630b586cc8146200016357806316f0115b146200016d575b600080fd5b6016546200013a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620001616200025e565b005b6200016162001001565b6013546200013a906001600160a01b031681565b6200016162001546565b62000161620020a6565b6017546200013a906001600160a01b031681565b601b546200013a906001600160a01b031681565b601a546200013a906001600160a01b031681565b62000161620025e9565b6015546200013a906001600160a01b031681565b620001f962002a31565b60405190151581526020016200014e565b6014546200013a906001600160a01b031681565b6018546200013a906001600160a01b031681565b6019546200013a906001600160a01b031681565b6200016162002b5c565b600054620001f99060ff1681565b68056bc75e2d631000006040516200027690620034e7565b908152602001604051809103906000f08015801562000299573d6000803e3d6000fd5b50601980546001600160a01b0319166001600160a01b039290921691821790556040516370a0823160e01b81523060048201526200034991906370a0823190602401602060405180830381865afa158015620002f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031f919062003557565b68056bc75e2d6310000060405180606001604052806021815260200162016b9b6021913962003267565b60006040516200035990620034f5565b604051809103906000f08015801562000376573d6000803e3d6000fd5b5090506000604051620003899062003503565b604051809103906000f080158015620003a6573d6000803e3d6000fd5b5090506000604051620003b99062003511565b604051809103906000f080158015620003d6573d6000803e3d6000fd5b50905030838383604051620003eb906200351f565b620003fa949392919062003571565b604051809103906000f08015801562000417573d6000803e3d6000fd5b50601880546001600160a01b0319166001600160a01b039283169081179091556019546040519216916200044b906200352d565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200047f573d6000803e3d6000fd5b50601780546001600160a01b0319166001600160a01b03928316908117909155601854604051632f2ff15d60e01b81527fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc16004820152602481019290925290911690632f2ff15d90604401600060405180830381600087803b1580156200050557600080fd5b505af11580156200051a573d6000803e3d6000fd5b5050601854601754604051632f2ff15d60e01b81527fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6360048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b1580156200058e57600080fd5b505af1158015620005a3573d6000803e3d6000fd5b50505050601860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006219190620035b5565b601480546001600160a01b03199081166001600160a01b0393841617909155601854601a8054919093169116179055604051683635c9adc5dea00000906012906200066c906200353b565b91825260ff166020820152604001604051809103906000f08015801562000697573d6000803e3d6000fd5b50601660006101000a8154816001600160a01b0302191690836001600160a01b03160217905550683635c9adc5dea000006012604051620006d89062003549565b91825260ff166020820152604001604051809103906000f08015801562000703573d6000803e3d6000fd5b50601580546001600160a01b0319166001600160a01b0392831690811790915560145460165460405163e343361560e01b8152908416600482015260248101929092529091169063e3433615906044016020604051808303816000875af115801562000773573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007999190620035b5565b601380546001600160a01b0319166001600160a01b0392909216919091179055604051630618f58760e51b815263ced6e79560e01b6004820152600080516020620168a98339815191529063c31eb0e090602401600060405180830381600087803b1580156200080857600080fd5b505af11580156200081d573d6000803e3d6000fd5b505060135460405163e3412e3d60e01b81523060048201526001600160a01b03909116925063e3412e3d9150602401600060405180830381600087803b1580156200086757600080fd5b505af11580156200087c573d6000803e3d6000fd5b505050506200098d601360009054906101000a90046001600160a01b03166001600160a01b0316635fcbd2856040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008fe9190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096b919062003557565b600060405180606001604052806025815260200162016c236025913962003267565b60135460408051635fcbd28560e01b8152905162000a92926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a009190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000a4a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a70919062003557565b600060405180606001604052806028815260200162016c486028913962003267565b6016546040516370a0823160e01b815230600482015262000b2e916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000ade573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b04919062003557565b683635c9adc5dea000006040518060600160405280602f815260200162016aae602f913962003267565b6015546040516370a0823160e01b815230600482015262000bca916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000b7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ba0919062003557565b683635c9adc5dea000006040518060600160405280602f815260200162016b10602f913962003267565b60165460135460405163a9059cbb60e01b81526001600160a01b0391821660048201526825f273933db5700000602482015291169063a9059cbb906044016020604051808303816000875af115801562000c28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4e9190620035dc565b5060155460135460405163a9059cbb60e01b81526001600160a01b0391821660048201526825f273933db5700000602482015291169063a9059cbb906044016020604051808303816000875af115801562000cad573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cd39190620035dc565b5060135460405163e3412e3d60e01b81523060048201526001600160a01b039091169063e3412e3d90602401600060405180830381600087803b15801562000d1a57600080fd5b505af115801562000d2f573d6000803e3d6000fd5b50506016546040516370a0823160e01b815230600482015262000dd193506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000d81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000da7919062003557565b681043561a882930000060405180606001604052806033815260200162016add6033913962003267565b6015546040516370a0823160e01b815230600482015262000e6d916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000e1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e43919062003557565b681043561a882930000060405180606001604052806033815260200162016b686033913962003267565b60135460408051635fcbd28560e01b8152905162000ffc926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa15801562000eba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ee09190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000f27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f4d919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fa1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fc7919062003557565b62000fdc906825f273933db570000062003616565b604051806060016040528060318152602001620169cf6031913962003267565b505050565b60155460135460405163a9059cbb60e01b81526001600160a01b039182166004820152678d84be94335fd002602482015291169063a9059cbb906044016020604051808303816000875af11580156200105e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010849190620035dc565b5060005b600a8110156200110657601354604051623438dd60e41b81523060048201526001600160a01b03909116906303438dd090602401600060405180830381600087803b158015620010d757600080fd5b505af1158015620010ec573d6000803e3d6000fd5b505050508080620010fd9062003632565b91505062001088565b5060135460155460405163712b772f60e01b81526001600160a01b03918216600482015230602482015291169063712b772f90604401600060405180830381600087803b1580156200115757600080fd5b505af11580156200116c573d6000803e3d6000fd5b50506016546040516370a0823160e01b81523060048201526200120e93506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620011be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011e4919062003557565b6810ce1d3d8cb31800006040518060600160405280602881526020016201684c6028913962003267565b6015546040516370a0823160e01b8152306004820152620012aa916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001280919062003557565b680fb5d15bf3f5d02ffe6040518060600160405280602881526020016201697e6028913962003267565b60135460408051635fcbd28560e01b8152905162001439926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620012f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200131d9190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562001364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200138a919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa158015620013de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001404919062003557565b62001419906825f273933db570000062003616565b6040518060600160405280602d815260200162016951602d913962003267565b60135460408051635fcbd28560e01b8152905162001544926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa15801562001486573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014ac9190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015620014f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200151c919062003557565b660933cc26d05bb26040518060600160405280602c815260200162016a00602c913962003267565b565b6019546040516370a0823160e01b8152306004820152620015fe916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001592573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015b8919062003557565b68056bc75e2d631000006040518060400160405280601f81526020017f57726f6e6720616d6f756e74206f6620746f6b656e732072656365697665640081525062003267565b436000036200166a576040516301f7b4f360e41b8152600a6004820152600080516020620168a983398151915290631f7b4f3090602401600060405180830381600087803b1580156200165057600080fd5b505af115801562001665573d6000803e3d6000fd5b505050505b60405130602482015260009060440160408051808303601f1901815291815260208201805163215b9af360e11b6001600160e01b039091161790528051600180825281830190925291925060009190816020016020820280368337505060408051600180825281830190925292935060009291506020808301908036833750506040805160018082528183019092529293506000929150602082015b60608152602001906001900390816200170657505060145484519192506001600160a01b03169084906000906200174157620017416200364e565b60200260200101906001600160a01b031690816001600160a01b0316815250506000826000815181106200177957620017796200364e565b60200260200101818152505083816000815181106200179c576200179c6200364e565b60209081029190910101526019546040516317066a5760e21b81523060048201526001600160a01b0390911690635c19a95c90602401600060405180830381600087803b158015620017ed57600080fd5b505af115801562001802573d6000803e3d6000fd5b50506040516301f7b4f360e41b8152600a6004820152600080516020620168a98339815191529250631f7b4f309150602401600060405180830381600087803b1580156200184f57600080fd5b505af115801562001864573d6000803e3d6000fd5b5050601754604051633eaf40f160e11b8152600093506001600160a01b039091169150637d5e81e290620018a19087908790879060040162003789565b6020604051808303816000875af1158015620018c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018e7919062003557565b601754604051631f27a4f360e11b8152600481018390529192506200197b916001600160a01b0390911690633e4f49e690602401602060405180830381865afa15801562001939573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200195f919062003819565b60078111156200197357620019736200383c565b6000620032af565b601754604051632d63f69360e01b815260048101839052600080516020620168a983398151915291631f7b4f30916001600160a01b0390911690632d63f69390602401602060405180830381865afa158015620019dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a02919062003557565b62001a0f90600a62003852565b6040518263ffffffff1660e01b815260040162001a2e91815260200190565b600060405180830381600087803b15801562001a4957600080fd5b505af115801562001a5e573d6000803e3d6000fd5b5050601754604051631f27a4f360e11b81526004810185905262001af393506001600160a01b039091169150633e4f49e690602401602060405180830381865afa15801562001ab1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad7919062003819565b600781111562001aeb5762001aeb6200383c565b6001620032af565b601754604051630acf027160e31b815260048101839052600160248201526001600160a01b03909116906356781388906044016020604051808303816000875af115801562001b46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b6c919062003557565b506040516301f7b4f360e41b81526207a1206004820152600080516020620168a983398151915290631f7b4f3090602401600060405180830381600087803b15801562001bb857600080fd5b505af115801562001bcd573d6000803e3d6000fd5b5050601754604051631f27a4f360e11b81526004810185905262001c6293506001600160a01b039091169150633e4f49e690602401602060405180830381865afa15801562001c20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c46919062003819565b600781111562001c5a5762001c5a6200383c565b6004620032af565b60175460405163160cbed760e01b81526001600160a01b039091169063160cbed79062001cba908790879087907fe343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec9060040162003868565b6020604051808303816000875af115801562001cda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d00919062003557565b50601754604051631f27a4f360e11b81526004810183905262001d90916001600160a01b031690633e4f49e690602401602060405180830381865afa15801562001d4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d74919062003819565b600781111562001d885762001d886200383c565b6005620032af565b6040516372eb5f8160e11b81526213d6206004820152600080516020620168a98339815191529063e5d6bf0290602401600060405180830381600087803b15801562001ddb57600080fd5b505af115801562001df0573d6000803e3d6000fd5b5050601754604051632656227d60e01b81526001600160a01b039091169250632656227d915062001e4c908790879087907fe343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec9060040162003868565b6020604051808303816000875af115801562001e6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e92919062003557565b50601754604051631f27a4f360e11b81526004810183905262001f22916001600160a01b031690633e4f49e690602401602060405180830381865afa15801562001ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f06919062003819565b600781111562001f1a5762001f1a6200383c565b6007620032af565b6040516372eb5f8160e11b815262155cc06004820152600080516020620168a98339815191529063e5d6bf0290602401600060405180830381600087803b15801562001f6d57600080fd5b505af115801562001f82573d6000803e3d6000fd5b50506014546016546015546019546040516344a7b4c960e01b81526001600160a01b0394851696506344a7b4c9955062001fcd94938416939283169290911690309060040162003571565b600060405180830381600087803b15801562001fe857600080fd5b505af115801562001ffd573d6000803e3d6000fd5b50506019546040516370a0823160e01b81523060048201526200209f93506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200204f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002075919062003557565b68056bc75e2d6310000060405180606001604052806022815260200162016a2c6022913962003267565b5050505050565b60165460135460405163a9059cbb60e01b81526001600160a01b039182166004820152678d84be94335fd002602482015291169063a9059cbb906044016020604051808303816000875af115801562002103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021299190620035dc565b5060005b6009811015620021ab57601354604051623438dd60e41b81523060048201526001600160a01b03909116906303438dd090602401600060405180830381600087803b1580156200217c57600080fd5b505af115801562002191573d6000803e3d6000fd5b505050508080620021a29062003632565b9150506200212d565b5060135460165460405163712b772f60e01b81526001600160a01b03918216600482015230602482015291169063712b772f90604401600060405180830381600087803b158015620021fc57600080fd5b505af115801562002211573d6000803e3d6000fd5b50506016546040516370a0823160e01b8152306004820152620022b393506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562002263573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002289919062003557565b680fb5d15bf3f5d02ffe604051806060016040528060298152602001620169a66029913962003267565b6015546040516370a0823160e01b81523060048201526200234f916001600160a01b0316906370a0823190602401602060405180830381865afa158015620022ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002325919062003557565b6810ce1d3d8cb318000060405180606001604052806029815260200162016b3f6029913962003267565b60135460408051635fcbd28560e01b81529051620024de926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa1580156200239c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c29190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562002409573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200242f919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002483573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024a9919062003557565b620024be906825f273933db570000062003616565b6040518060600160405280602e815260200162016923602e913962003267565b60135460408051635fcbd28560e01b8152905162001544926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa1580156200252b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025519190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156200259b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025c1919062003557565b660933cc26d05bb26040518060600160405280602d815260200162016bbc602d913962003267565b60195460135460405163a9059cbb60e01b81526001600160a01b0391821660048201526802b5e3af16b1880000602482015291169063a9059cbb906044016020604051808303816000875af115801562002647573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200266d9190620035dc565b506019546040516370a0823160e01b81523060048201526200270a916001600160a01b0316906370a0823190602401602060405180830381865afa158015620026ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026e0919062003557565b6802b5e3af16b188000060405180606001604052806027815260200162016a4e6027913962003267565b60405163f28dceb360e01b815260206004820152609460248201527f416363657373436f6e74726f6c3a206163636f756e742030783766613933383560448201527f626531303261633365616332393734383364643632333364363262336531343960648201527f36206973206d697373696e6720726f6c6520307836626536323639666365303860848201527f653734623066666165666262303739376531633965623032643466323235326460a482015273039373432306530616538376639396132346663360641b60c4820152600080516020620168a98339815191529063f28dceb39060e401600060405180830381600087803b1580156200280f57600080fd5b505af115801562002824573d6000803e3d6000fd5b50506014546016546015546019546040516344a7b4c960e01b81526001600160a01b0394851696506344a7b4c995506200286f94938416939283169290911690309060040162003571565b600060405180830381600087803b1580156200288a57600080fd5b505af11580156200289f573d6000803e3d6000fd5b50506019546040516370a0823160e01b81523060048201526200294193506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620028f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002917919062003557565b6802b5e3af16b1880000604051806060016040528060258152602001620168fe6025913962003267565b60405163f28dceb360e01b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152600080516020620168a98339815191529063f28dceb390606401600060405180830381600087803b158015620029b757600080fd5b505af1158015620029cc573d6000803e3d6000fd5b505060145460405163215b9af360e11b81523060048201526001600160a01b0390911692506342b735e69150602401600060405180830381600087803b15801562002a1657600080fd5b505af115801562002a2b573d6000803e3d6000fd5b50505050565b60008054610100900460ff161562002a525750600054610100900460ff1690565b6000600080516020620168a98339815191523b1562002b575760408051600080516020620168a9833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162002ad9917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620038b9565b60408051601f198184030181529082905262002af591620038ec565b6000604051808303816000865af19150503d806000811462002b34576040519150601f19603f3d011682016040523d82523d6000602084013e62002b39565b606091505b509150508080602001905181019062002b539190620035dc565b9150505b919050565b604051630618f58760e51b815263ced6e79560e01b6004820152600080516020620168a98339815191529063c31eb0e090602401600060405180830381600087803b15801562002bab57600080fd5b505af115801562002bc0573d6000803e3d6000fd5b5050601354604051627d0bab60e91b81523060048201526001600160a01b03909116925063fa175600915060240160408051808303816000875af115801562002c0d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c3391906200390a565b5050601360009054906101000a90046001600160a01b03166001600160a01b0316635fcbd2856040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002c89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002caf9190620035b5565b601354604080516321b77d6360e01b815290516001600160a01b039384169363a9059cbb93169182916321b77d63916004808201926020929091908290030181865afa15801562002d04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d2a919062003557565b62002d3f906825f273933db570000062003616565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801562002d8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002db19190620035dc565b50601354604051627d0bab60e91b81523060048201526001600160a01b039091169063fa1756009060240160408051808303816000875af115801562002dfb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e2191906200390a565b50506016546040516370a0823160e01b815230600482015262002f44916001600160a01b0316906370a0823190602401602060405180830381865afa15801562002e6f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e95919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002ee9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f0f919062003557565b62002f2490683635c9adc5dea0000062003616565b604051806060016040528060358152602001620168746035913962003267565b6015546040516370a0823160e01b815230600482015262003065916001600160a01b0316906370a0823190602401602060405180830381865afa15801562002f90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fb6919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200300a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003030919062003557565b6200304590683635c9adc5dea0000062003616565b604051806060016040528060358152602001620168c96035913962003267565b60135460408051635fcbd28560e01b8152905162003167926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620030b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030d89190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200311f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003145919062003557565b60006040518060600160405280603a815260200162016be9603a913962003267565b60135460408051635fcbd28560e01b8152905162001544926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620031b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031da9190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562003224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200324a919062003557565b600060405180606001604052806039815260200162016a75603991395b81831462000ffc577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620032a091906200392f565b60405180910390a162000ffc83835b808214620033da577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620033229060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620033da620033de565b5050565b600080516020620168a98339815191523b15620034d65760408051600080516020620168a9833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620034719291602001620038b9565b60408051601f19818403018152908290526200348d91620038ec565b6000604051808303816000865af19150503d8060008114620034cc576040519150601f19603f3d011682016040523d82523d6000602084013e620034d1565b606091505b505050505b6000805461ff001916610100179055565b61293b806200396183390190565b6155be806200629c83390190565b611032806200b85a83390190565b610420806200c88c83390190565b613987806200ccac83390190565b614a63806201063383390190565b610bdb806201509683390190565b610bdb8062015c7183390190565b6000602082840312156200356a57600080fd5b5051919050565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6001600160a01b0381168114620035b257600080fd5b50565b600060208284031215620035c857600080fd5b8151620035d5816200359c565b9392505050565b600060208284031215620035ef57600080fd5b81518015158114620035d557600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156200362c576200362c62003600565b92915050565b60006001820162003647576200364762003600565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156200369f5781516001600160a01b03168752958201959082019060010162003678565b509495945050505050565b600081518084526020808501945080840160005b838110156200369f57815187529582019590820190600101620036be565b60005b83811015620036f9578181015183820152602001620036df565b50506000910152565b600081518084526200371c816020860160208601620036dc565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156200377c5782840389526200376984835162003702565b988501989350908401906001016200374e565b5091979650505050505050565b6080815260006200379e608083018662003664565b8281036020840152620037b28186620036aa565b90508281036040840152620037c8818562003730565b838103606094850152602881527f4772616e742070726976696c6567657320746f207265636f76657220737475636020820152676b20746f6b656e7360c01b60408201529290920195945050505050565b6000602082840312156200382c57600080fd5b815160088110620035d557600080fd5b634e487b7160e01b600052602160045260246000fd5b808201808211156200362c576200362c62003600565b6080815260006200387d608083018762003664565b8281036020840152620038918187620036aa565b90508281036040840152620038a7818662003730565b91505082606083015295945050505050565b6001600160e01b0319831681528151600090620038de816004850160208701620036dc565b919091016004019392505050565b6000825162003900818460208701620036dc565b9190910192915050565b600080604083850312156200391e57600080fd5b505080516020909101519092909150565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620035d560808301846200370256fe6101406040523480156200001257600080fd5b506040516200293b3803806200293b83398101604081905262000035916200088e565b6040518060400160405280600e81526020016d29ba30b4b92bb0bc902a37b5b2b760911b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600e81526020016d29ba30b4b92bb0bc902a37b5b2b760911b8152506040518060400160405280600381526020016229aa2960e91b8152508160039081620000cb91906200094c565b506004620000da82826200094c565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200017a90503382620002d0565b5042600b55604080516060808201835269021e19e0c9bab2400000808352600a6020808501828152600086880181815273f39fd6e51aad88f6f4ce6ab8827279cfffb92266825284845296517f3eaabfacbcd0b91fc8b2264267784effa152bcd0ae18c28a9924d0385d593b0c5590517f3eaabfacbcd0b91fc8b2264267784effa152bcd0ae18c28a9924d0385d593b0d5594517f3eaabfacbcd0b91fc8b2264267784effa152bcd0ae18c28a9924d0385d593b0e5585519384018652918352828201818152948301848152737fa9385be102ac3eac297483dd6233d62b3e14969094529052517f2d54905f2886c13936added7edccb32207862f31b1e49ad77f933216b98487225590517f2d54905f2886c13936added7edccb32207862f31b1e49ad77f933216b984872355517f2d54905f2886c13936added7edccb32207862f31b1e49ad77f933216b98487245562000a5a565b620002e78282620002eb60201b62000baf1760201c565b5050565b620003028282620003a260201b62000c3f1760201c565b6001600160e01b03620003166200046f8216565b1115620003835760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b6200039c600962000d0a6200047560201b17836200048c565b50505050565b6001600160a01b038216620003fa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200037a565b80600260008282546200040e919062000a2e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620002e76000838362000623565b60025490565b600062000483828462000a2e565b90505b92915050565b82546000908190818115620004ec57620004bb87620004ad60018562000a44565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015262000501565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506200051f84868860201c565b9250600082118015620005385750805163ffffffff1643145b156200058f5762000554836200063b60201b62000d161760201c565b6200056688620004ad60018662000a44565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905562000614565b866040518060400160405280620005b143620006aa60201b62000d831760201c565b63ffffffff168152602001620005d2866200063b60201b62000d161760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b6200061e8383836200071160201b62000de81760201c565b60006001600160e01b03821115620006a65760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016200037a565b5090565b600063ffffffff821115620006a65760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016200037a565b620007298383836200061e60201b620008611760201c565b6001600160a01b038381166000908152600760205260408082205485841683529120546200061e92918216911683818314801590620007685750600081115b156200061e576001600160a01b03831615620007f5576001600160a01b038316600090815260086020908152604082208291620007b2919062000880901b62000e1a17856200048c565b91509150846001600160a01b03166000805160206200291b8339815191528383604051620007ea929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156200061e576001600160a01b03821660009081526008602090815260408220829162000839919062000475901b62000d0a17856200048c565b91509150836001600160a01b03166000805160206200291b833981519152838360405162000871929190918252602082015260400190565b60405180910390a25050505050565b600062000483828462000a44565b600060208284031215620008a157600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620008d357607f821691505b602082108103620008f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200061e57600081815260208120601f850160051c81016020861015620009235750805b601f850160051c820191505b8181101562000944578281556001016200092f565b505050505050565b81516001600160401b03811115620009685762000968620008a8565b6200098081620009798454620008be565b84620008fa565b602080601f831160018114620009b857600084156200099f5750858301515b600019600386901b1c1916600185901b17855562000944565b600085815260208120601f198616915b82811015620009e957888601518255948401946001909101908401620009c8565b508582101562000a085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111562000486576200048662000a18565b8181038181111562000486576200048662000a18565b60805160a05160c05160e0516101005161012051611e7162000aaa60003960006111f2015260006112410152600061121c015260006111750152600061119f015260006111c90152611e716000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063a9059cbb11610097578063c3cda52011610071578063c3cda52014610387578063d505accf1461039a578063dd62ed3e146103ad578063f1127ed8146103c057600080fd5b8063a9059cbb14610363578063be040fb014610376578063bfc12c051461037e57600080fd5b806370a08231146102e65780637ecebe001461030f5780638e539e8c1461032257806395d89b41146103355780639ab24eb01461033d578063a457c2d71461035057600080fd5b8063395093511161013057806339509351146101f55780633a46b1a81461020857806351f60c841461021b578063587cde1e146102655780635c19a95c146102a95780636fcfff45146102be57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b6101806103fd565b60405161018d9190611afe565b60405180910390f35b6101a96101a4366004611b68565b61048f565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004611b92565b6104a9565b6040516012815260200161018d565b6101bd6104cd565b6101a9610203366004611b68565b6104dc565b6101bd610216366004611b68565b6104fe565b61024a610229366004611bce565b600a6020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161018d565b610291610273366004611bce565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b03909116815260200161018d565b6102bc6102b7366004611bce565b61057d565b005b6102d16102cc366004611bce565b61058a565b60405163ffffffff909116815260200161018d565b6101bd6102f4366004611bce565b6001600160a01b031660009081526020819052604090205490565b6101bd61031d366004611bce565b6105ac565b6101bd610330366004611be9565b6105ca565b610180610626565b6101bd61034b366004611bce565b610635565b6101a961035e366004611b68565b6106bc565b6101a9610371366004611b68565b610737565b6102bc610745565b6101bd600b5481565b6102bc610395366004611c13565b610866565b6102bc6103a8366004611c6b565b61099c565b6101bd6103bb366004611cd5565b610b00565b6103d36103ce366004611d08565b610b2b565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161018d565b60606003805461040c90611d48565b80601f016020809104026020016040519081016040528092919081815260200182805461043890611d48565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b60003361049d818585610e26565b60019150505b92915050565b6000336104b7858285610f4a565b6104c2858585610fbe565b506001949350505050565b60006104d7611168565b905090565b60003361049d8185856104ef8383610b00565b6104f99190611d92565b610e26565b60004382106105545760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610576908361128f565b9392505050565b6105873382611386565b50565b6001600160a01b0381166000908152600860205260408120546104a390610d83565b6001600160a01b0381166000908152600560205260408120546104a3565b600043821061061b5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161054b565b6104a360098361128f565b60606004805461040c90611d48565b6001600160a01b03811660009081526008602052604081205480156106a9576001600160a01b0383166000908152600860205260409020610677600183611da5565b8154811061068757610687611db8565b60009182526020909120015464010000000090046001600160e01b03166106ac565b60005b6001600160e01b03169392505050565b600033816106ca8286610b00565b90508381101561072a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161054b565b6104c28286868403610e26565b60003361049d818585610fbe565b336000908152600a6020526040902080546107a25760405162461bcd60e51b815260206004820152601860248201527f4e6f7420617574686f72697a656420746f2072656465656d0000000000000000604482015260640161054b565b60006107b24283600101546113ff565b905060008260020154600b5484600101546107cd9190611da5565b8454600b546107dc9086611da5565b6107e69190611dce565b6107f09190611e03565b6107fa9190611da5565b9050600081116108425760405162461bcd60e51b81526020600482015260136024820152724e6f20746f6b656e7320746f2072656465656d60681b604482015260640161054b565b8083600201546108529190611d92565b60028401556108613382611415565b505050565b834211156108b65760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161054b565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610930906109289060a0016040516020818303038152906040528051906020012061141f565b85858561146d565b905061093b81611495565b86146109895760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161054b565b6109938188611386565b50505050505050565b834211156109ec5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161054b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610a1b8c611495565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a768261141f565b90506000610a868287878761146d565b9050896001600160a01b0316816001600160a01b031614610ae95760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161054b565b610af48a8a8a610e26565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610b6f57610b6f611db8565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610bb98282610c3f565b6002546001600160e01b031015610c2b5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161054b565b610c396009610d0a836114bd565b50505050565b6001600160a01b038216610c955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161054b565b8060026000828254610ca79190611d92565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d0660008383611611565b5050565b60006105768284611d92565b60006001600160e01b03821115610d7f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161054b565b5090565b600063ffffffff821115610d7f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161054b565b6001600160a01b038381166000908152600760205260408082205485841683529120546108619291821691168361161c565b60006105768284611da5565b6001600160a01b038316610e885760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161054b565b6001600160a01b038216610ee95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161054b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f568484610b00565b90506000198114610c395781811015610fb15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161054b565b610c398484848403610e26565b6001600160a01b0383166110225760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161054b565b6001600160a01b0382166110845760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161054b565b6001600160a01b038316600090815260208190526040902054818110156110fc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161054b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c39848484611611565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111c157507f000000000000000000000000000000000000000000000000000000000000000046145b156111eb57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156112e95760006112aa84611759565b6112b49085611da5565b600088815260209020909150869082015463ffffffff1611156112d9578091506112e7565b6112e4816001611d92565b92505b505b808210156113365760006112fd8383611841565b600088815260209020909150869082015463ffffffff16111561132257809150611330565b61132d816001611d92565b92505b506112e9565b8015611370576113598661134b600184611da5565b600091825260209091200190565b5464010000000090046001600160e01b0316611373565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610c3982848361161c565b600081831061140e5781610576565b5090919050565b610d068282610baf565b60006104a361142c611168565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061147e8787878761185c565b9150915061148b81611920565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b8254600090819081811561150a576114da8761134b600185611da5565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015261151f565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061153f84868863ffffffff16565b92506000821180156115575750805163ffffffff1643145b1561159c5761156583610d16565b6115748861134b600186611da5565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055611607565b8660405180604001604052806115b143610d83565b63ffffffff1681526020016115c586610d16565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b610861838383610de8565b816001600160a01b0316836001600160a01b03161415801561163e5750600081115b15610861576001600160a01b038316156116cc576001600160a01b0383166000908152600860205260408120819061167990610e1a856114bd565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516116c1929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610861576001600160a01b0382166000908152600860205260408120819061170290610d0a856114bd565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161174a929190918252602082015260400190565b60405180910390a25050505050565b60008160000361176b57506000919050565b6000600161177884611a6a565b901c6001901b9050600181848161179157611791611ded565b048201901c905060018184816117a9576117a9611ded565b048201901c905060018184816117c1576117c1611ded565b048201901c905060018184816117d9576117d9611ded565b048201901c905060018184816117f1576117f1611ded565b048201901c9050600181848161180957611809611ded565b048201901c9050600181848161182157611821611ded565b048201901c90506105768182858161183b5761183b611ded565b046113ff565b60006118506002848418611e03565b61057690848416611d92565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118935750600090506003611917565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156118e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661191057600060019250925050611917565b9150600090505b94509492505050565b600081600481111561193457611934611e25565b0361193c5750565b600181600481111561195057611950611e25565b0361199d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161054b565b60028160048111156119b1576119b1611e25565b036119fe5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161054b565b6003816004811115611a1257611a12611e25565b036105875760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161054b565b600080608083901c15611a7f57608092831c92015b604083901c15611a9157604092831c92015b602083901c15611aa357602092831c92015b601083901c15611ab557601092831c92015b600883901c15611ac757600892831c92015b600483901c15611ad957600492831c92015b600283901c15611aeb57600292831c92015b600183901c156104a35760010192915050565b600060208083528351808285015260005b81811015611b2b57858101830151858201604001528201611b0f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611b6357600080fd5b919050565b60008060408385031215611b7b57600080fd5b611b8483611b4c565b946020939093013593505050565b600080600060608486031215611ba757600080fd5b611bb084611b4c565b9250611bbe60208501611b4c565b9150604084013590509250925092565b600060208284031215611be057600080fd5b61057682611b4c565b600060208284031215611bfb57600080fd5b5035919050565b803560ff81168114611b6357600080fd5b60008060008060008060c08789031215611c2c57600080fd5b611c3587611b4c565b95506020870135945060408701359350611c5160608801611c02565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611c8657600080fd5b611c8f88611b4c565b9650611c9d60208901611b4c565b95506040880135945060608801359350611cb960808901611c02565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611ce857600080fd5b611cf183611b4c565b9150611cff60208401611b4c565b90509250929050565b60008060408385031215611d1b57600080fd5b611d2483611b4c565b9150602083013563ffffffff81168114611d3d57600080fd5b809150509250929050565b600181811c90821680611d5c57607f821691505b6020821081036114b757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104a3576104a3611d7c565b818103818111156104a3576104a3611d7c565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611de857611de8611d7c565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611e2057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205d547c5eca2ffa1b6afc8700fc68620c42686d4cae56c34b15e59666de84a90964736f6c63430008100033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724608060405234801561001057600080fd5b506001600055615599806100256000396000f3fe60806040523480156200001157600080fd5b5060043610620001395760003560e01c8063712b772f11620000bb578063c45a0155116200007a578063c45a0155146200024d578063ce7f0cc31462000261578063e3412e3d146200026b578063efaa89231462000282578063fa175600146200029657600080fd5b8063712b772f146200020157806375f4f18e146200021857806378b4103a1462000222578063c0c53b8b146200022c578063c451463b146200024357600080fd5b8063244addfe1162000108578063244addfe146200019557806327f3a72a146200019f5780635fcbd28514620001a95780636b76484e14620001d65780636e8378a714620001ed57600080fd5b806303438dd0146200013e578063056097ac1462000157578063112ed88e146200016e57806321b77d63146200018b575b600080fd5b620001556200014f36600462002e35565b620002c3565b005b620001556200016836600462002e55565b62000360565b6200017860035481565b6040519081526020015b60405180910390f35b620001786103e881565b6200017860045481565b620001786200057a565b600254620001bd906001600160a01b031681565b6040516001600160a01b03909116815260200162000182565b62000155620001e736600462002e55565b620005f0565b600654620001bd906001600160a01b031681565b620001556200021236600462002e55565b62000615565b620001bd62000758565b62000178620007c9565b620001556200023d36600462002e93565b62000814565b620001bd620009bc565b600154620001bd906001600160a01b031681565b6200017862000a07565b620001556200027c36600462002e35565b62000a1f565b600554620001bd906001600160a01b031681565b620002ad620002a736600462002e35565b62001424565b6040805192835260208301919091520162000182565b620002cd620018be565b6200035281600160009054906101000a90046001600160a01b03166001600160a01b031663b88fd16e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000326573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034c919062002ee5565b6200191d565b6200035d6001600055565b50565b6001546001600160a01b031633146200038c57604051633035e8b560e01b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000406919062002ee5565b6001600160a01b0316826001600160a01b03161480620004b05750600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200049b919062002ee5565b6001600160a01b0316826001600160a01b0316145b80620004c957506002546001600160a01b038381169116145b15620004e85760405163d0a066eb60e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801562000530573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000556919062002f05565b905080156200057557620005756001600160a01b0384168383620028ac565b505050565b6005546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa158015620005c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005eb919062002f05565b905090565b620005fa620018be565b6200060682826200191d565b620006116001600055565b5050565b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000669573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200068f919062002ee5565b6001600160a01b0316826001600160a01b031614158015620004c95750600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000726919062002ee5565b6001600160a01b0316826001600160a01b031614620004e85760405163d0a066eb60e01b815260040160405180910390fd5b60025460408051633afa78c760e11b815290516000926001600160a01b0316916375f4f18e9160048083019260209291908290030181865afa158015620007a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005eb919062002ee5565b6006546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa158015620005c5573d6000803e3d6000fd5b60085460ff16156200083957604051630d2bb64560e01b815260040160405180910390fd5b80600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200089f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c5919062002ee5565b826001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092a919062002ee5565b604051620009389062002e11565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200096c573d6000803e3d6000fd5b50600280546001600160a01b03199081166001600160a01b03938416179091556005805482169583169590951790945560068054909416921691909117909155506008805460ff19166001179055565b6002546040805163c451463b60e01b815290516000926001600160a01b03169163c451463b9160048083019260209291908290030181865afa158015620007a3573d6000803e3d6000fd5b62000a1c6064670de0b6b3a764000062002f4b565b81565b62000a29620018be565b60025460408051633afa78c760e11b815290516000926001600160a01b0316916375f4f18e9160048083019260209291908290030181865afa15801562000a74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9a919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000ae1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b07919062002f05565b90508060000362000b2b5760405163ced6e79560e01b815260040160405180910390fd5b6002546040805163c451463b60e01b815290516000926001600160a01b03169163c451463b9160048083019260209291908290030181865afa15801562000b76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b9c919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000be3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c09919062002f05565b90508060000362000c2d5760405163ced6e79560e01b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca7919062002ee5565b60055460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262000cdc92911690869060040162002f6e565b6020604051808303816000875af115801562000cfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d22919062002f87565b50600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d9d919062002ee5565b60065460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262000dd292911690859060040162002f6e565b6020604051808303816000875af115801562000df2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e18919062002f87565b5060055460405163b6b55f2560e01b8152600481018490526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801562000e6057600080fd5b505af115801562000e75573d6000803e3d6000fd5b505060065460405163b6b55f2560e01b8152600481018590526001600160a01b03909116925063b6b55f259150602401600060405180830381600087803b15801562000ec057600080fd5b505af115801562000ed5573d6000803e3d6000fd5b5050505062000fe3600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f57919062002f05565b600560009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fd1919062002f05565b62000fdd919062002fab565b62002906565b600755600254604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd916004808201926020929091908290030181865afa15801562001031573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001057919062002f05565b600003620011885760006200107162000fdd838562002fab565b90506103e8811162001096576040516377eb3b4f60e11b815260040160405180910390fd5b620010a2838362002a12565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990620010d89083906103e89060040162002f6e565b600060405180830381600087803b158015620010f357600080fd5b505af115801562001108573d6000803e3d6000fd5b50506002546001600160a01b031691506340c10f199050856200112e6103e88562002fcd565b6040518363ffffffff1660e01b81526004016200114d92919062002f6e565b600060405180830381600087803b1580156200116857600080fd5b505af11580156200117d573d6000803e3d6000fd5b5050505050620013d5565b6005546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa158015620011d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011f9919062002f05565b6200120d670de0b6b3a76400008562002fab565b62001219919062002f4b565b90506000600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001297919062002f05565b620012ab670de0b6b3a76400008562002fab565b620012b7919062002f4b565b90506000620012c7838362002a75565b90506000670de0b6b3a764000082600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001329573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200134f919062002f05565b6200135b919062002fab565b62001367919062002f4b565b6002546040516340c10f1960e01b81529192506001600160a01b0316906340c10f19906200139c908a90859060040162002f6e565b600060405180830381600087803b158015620013b757600080fd5b505af1158015620013cc573d6000803e3d6000fd5b50505050505050505b60408051838152602081018390526000818301819052606082015290516001600160a01b0385169160008051602062005544833981519152919081900360800190a250506200035d6001600055565b60008062001431620018be565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200147b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014a1919062002f05565b905080600003620014c55760405163ced6e79560e01b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001519573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200153f919062002f05565b600560009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001593573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015b9919062002f05565b620015c5908362002fab565b620015d1919062002f4b565b9250600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001627573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200164d919062002f05565b600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620016a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016c7919062002f05565b620016d3908362002fab565b620016df919062002f4b565b600254604051630852cd8d60e31b8152600481018490529193506001600160a01b0316906342966c6890602401600060405180830381600087803b1580156200172757600080fd5b505af11580156200173c573d6000803e3d6000fd5b505060055460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a3915062001774908790879060040162002f6e565b600060405180830381600087803b1580156200178f57600080fd5b505af1158015620017a4573d6000803e3d6000fd5b505060065460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a39150620017dc908790869060040162002f6e565b600060405180830381600087803b158015620017f757600080fd5b505af11580156200180c573d6000803e3d6000fd5b5050505062001868600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f31573d6000803e3d6000fd5b6007556040805160008082526020820152908101849052606081018390526001600160a01b03851690600080516020620055448339815191529060800160405180910390a250620018b96001600055565b915091565b600260005403620019165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b6005546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa15801562001968573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200198e919062002f05565b90506000600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620019e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a0c919062002f05565b6004805460035460025460408051633afa78c760e11b81529051959650929491936000936001600160a01b03909216926375f4f18e9280830192602092918290030181865afa15801562001a64573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8a919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562001ad1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001af7919062002f05565b905080156200216a57600062001b0f85878662002a91565b9050600062001b3f828662001b2d670de0b6b3a76400008762002fab565b62001b39919062002f4b565b62002a75565b905062001b7a670de0b6b3a764000062001b5a878462002fab565b62001b66919062002f4b565b62001b7390600162002fe3565b8462002a75565b925062001b88838862002fe3565b965062001b96818762002fcd565b955081810362001bb25762001bac878762002a12565b62001bf0565b62001bd28462001bcc6064670de0b6b3a764000062002f4b565b62002b10565b9350600062001be388888762002a91565b111562001bf05760038490555b600062001c0262000fdd888a62002fab565b905060006007548262001c16919062002fcd565b600160009054906101000a90046001600160a01b03166001600160a01b031663c614368e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001c6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c90919062002f05565b62001c9c919062002fab565b905060008162001cb5670de0b6b3a76400008562002fab565b62001cc1919062002fcd565b600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001d15573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d3b919062002f05565b62001d47908462002fab565b62001d53919062002f4b565b60078490559050801562001f5c57600154604080516302f1ce0160e01b815290516000926001600160a01b0316916302f1ce019160048083019260209291908290030181865afa15801562001dac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dd2919062002f05565b9050801562001e8b576000670de0b6b3a764000062001df2838562002fab565b62001dfe919062002f4b565b9050600260009054906101000a90046001600160a01b03166001600160a01b03166340c10f198e836040518363ffffffff1660e01b815260040162001e4592919062002f6e565b600060405180830381600087803b15801562001e6057600080fd5b505af115801562001e75573d6000803e3d6000fd5b50505050808362001e87919062002fcd565b9250505b60025460015460408051635c47e8b760e11b815290516001600160a01b03938416936340c10f1993169163b88fd16e9160048083019260209291908290030181865afa15801562001ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f06919062002ee5565b846040518363ffffffff1660e01b815260040162001f2692919062002f6e565b600060405180830381600087803b15801562001f4157600080fd5b505af115801562001f56573d6000803e3d6000fd5b50505050505b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001fb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fd6919062002ee5565b60055460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200200b929116908a9060040162002f6e565b6020604051808303816000875af11580156200202b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002051919062002f87565b5060055460405163b6b55f2560e01b8152600481018890526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b1580156200209957600080fd5b505af1158015620020ae573d6000803e3d6000fd5b505060065460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a39150620020e6908f90889060040162002f6e565b600060405180830381600087803b1580156200210157600080fd5b505af115801562002116573d6000803e3d6000fd5b50506040805189815260006020820181905291810191909152606081018790526001600160a01b038f16925060008051602062005544833981519152915060800160405180910390a25050505050620028a3565b6002546040805163c451463b60e01b815290516000926001600160a01b03169163c451463b9160048083019260209291908290030181865afa158015620021b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021db919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562002222573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002248919062002f05565b90508015620028995760006200226087878662002a91565b905060006200227e828662001b2d670de0b6b3a76400008762002fab565b905062002299670de0b6b3a764000062001b5a878462002fab565b9250620022a7818962002fcd565b9750620022b5838862002fe3565b9650818103620022d157620022cb888862002a12565b62002309565b620022eb8662001bcc6064670de0b6b3a764000062002f4b565b95506000620022fc888a8962002a91565b1115620023095760048690555b60006200231b62000fdd898b62002fab565b90506000600754826200232f919062002fcd565b600160009054906101000a90046001600160a01b03166001600160a01b031663c614368e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002383573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023a9919062002f05565b620023b5919062002fab565b9050600081620023ce670de0b6b3a76400008562002fab565b620023da919062002fcd565b600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200242e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002454919062002f05565b62002460908462002fab565b6200246c919062002f4b565b6007849055905080156200267557600154604080516302f1ce0160e01b815290516000926001600160a01b0316916302f1ce019160048083019260209291908290030181865afa158015620024c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024eb919062002f05565b90508015620025a4576000670de0b6b3a76400006200250b838562002fab565b62002517919062002f4b565b9050600260009054906101000a90046001600160a01b03166001600160a01b03166340c10f198f836040518363ffffffff1660e01b81526004016200255e92919062002f6e565b600060405180830381600087803b1580156200257957600080fd5b505af11580156200258e573d6000803e3d6000fd5b505050508083620025a0919062002fcd565b9250505b60025460015460408051635c47e8b760e11b815290516001600160a01b03938416936340c10f1993169163b88fd16e9160048083019260209291908290030181865afa158015620025f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200261f919062002ee5565b846040518363ffffffff1660e01b81526004016200263f92919062002f6e565b600060405180830381600087803b1580156200265a57600080fd5b505af11580156200266f573d6000803e3d6000fd5b50505050505b600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620026c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026ef919062002ee5565b60065460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262002724929116908a9060040162002f6e565b6020604051808303816000875af115801562002744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200276a919062002f87565b5060065460405163b6b55f2560e01b8152600481018890526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015620027b257600080fd5b505af1158015620027c7573d6000803e3d6000fd5b50505050600560009054906101000a90046001600160a01b03166001600160a01b031663f3fef3a38e866040518363ffffffff1660e01b81526004016200281092919062002f6e565b600060405180830381600087803b1580156200282b57600080fd5b505af115801562002840573d6000803e3d6000fd5b505050508c6001600160a01b0316600080516020620055448339815191526000888760006040516200288b949392919093845260208401929092526040830152606082015260800190565b60405180910390a250505050505b5050505050505050565b50505050505050565b620005758363a9059cbb60e01b8484604051602401620028ce92919062002f6e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262002b46565b6000816000036200291957506000919050565b60006001620029288462002c1f565b901c6001901b9050600181848162002944576200294462002f1f565b048201901c905060018184816200295f576200295f62002f1f565b048201901c905060018184816200297a576200297a62002f1f565b048201901c9050600181848162002995576200299562002f1f565b048201901c90506001818481620029b057620029b062002f1f565b048201901c90506001818481620029cb57620029cb62002f1f565b048201901c90506001818481620029e657620029e662002f1f565b048201901c905062002a0b8182858162002a045762002a0462002f1f565b0462002a75565b9392505050565b62002a528262002a2b670de0b6b3a76400008462002fab565b62002a37919062002f4b565b62002a4c6064670de0b6b3a764000062002f4b565b62002cbb565b60035562002a6e8162002a2b670de0b6b3a76400008562002fab565b6004555050565b600081831062002a86578162002a88565b825b90505b92915050565b600062002a9f848362002fab565b62002ab384670de0b6b3a764000062002fab565b1062002ac25750600062002a0b565b62002acf82600262002fab565b62002ae3670de0b6b3a76400008562002fab565b62002aef919062002f4b565b62002afc60028662002f4b565b62002b08919062002fcd565b949350505050565b600062002b2682670de0b6b3a764000062002fe3565b62002b3a670de0b6b3a76400008562002fab565b62002a88919062002f4b565b600062002b9d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662002cde9092919063ffffffff16565b80519091501562000575578080602001905181019062002bbe919062002f87565b620005755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200190d565b600080608083901c1562002c3557608092831c92015b604083901c1562002c4857604092831c92015b602083901c1562002c5b57602092831c92015b601083901c1562002c6e57601092831c92015b600883901c1562002c8157600892831c92015b600483901c1562002c9457600492831c92015b600283901c1562002ca757600292831c92015b600183901c1562002a8b5760010192915050565b6000670de0b6b3a764000062002cd2838262002fe3565b62002b3a908562002fab565b606062002b08848460008585600080866001600160a01b0316858760405162002d0891906200301f565b60006040518083038185875af1925050503d806000811462002d47576040519150601f19603f3d011682016040523d82523d6000602084013e62002d4c565b606091505b509150915062002d5f8783838762002d6a565b979650505050505050565b6060831562002dde57825160000362002dd6576001600160a01b0385163b62002dd65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200190d565b508162002b08565b62002b08838381511562002df55781518083602001fd5b8060405162461bcd60e51b81526004016200190d91906200303d565b6124d1806200307383390190565b6001600160a01b03811681146200035d57600080fd5b60006020828403121562002e4857600080fd5b813562002a0b8162002e1f565b6000806040838503121562002e6957600080fd5b823562002e768162002e1f565b9150602083013562002e888162002e1f565b809150509250929050565b60008060006060848603121562002ea957600080fd5b833562002eb68162002e1f565b9250602084013562002ec88162002e1f565b9150604084013562002eda8162002e1f565b809150509250925092565b60006020828403121562002ef857600080fd5b815162002a0b8162002e1f565b60006020828403121562002f1857600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008262002f6957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b60006020828403121562002f9a57600080fd5b8151801515811462002a0b57600080fd5b600081600019048311821515161562002fc85762002fc862002f35565b500290565b8181038181111562002a8b5762002a8b62002f35565b8082018082111562002a8b5762002a8b62002f35565b60005b838110156200301657818101518382015260200162002ffc565b50506000910152565b600082516200303381846020870162002ff9565b9190910192915050565b60208152600082518060208401526200305e81604085016020870162002ff9565b601f01601f1916919091016040019291505056fe6101806040523480156200001257600080fd5b50604051620024d1380380620024d183398101604081905262000035916200020b565b6040518060400160405280601181526020017029ba30b4b92bb0bc902628102a37b5b2b760791b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601181526020017029ba30b4b92bb0bc902628102a37b5b2b760791b8152506040518060400160405280600681526020016505357592d4c560d41b8152508160039081620000d49190620002e8565b506004620000e38282620002e8565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909601209052929092526101205250620001829050336200019c565b6001600160a01b03918216610140521661016052620003b4565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200020657600080fd5b919050565b600080604083850312156200021f57600080fd5b6200022a83620001ee565b91506200023a60208401620001ee565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026e57607f821691505b6020821081036200028f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e357600081815260208120601f850160051c81016020861015620002be5750805b601f850160051c820191505b81811015620002df57828155600101620002ca565b5050505b505050565b81516001600160401b0381111562000304576200030462000243565b6200031c8162000315845462000259565b8462000295565b602080601f8311600181146200035457600084156200033b5750858301515b600019600386901b1c1916600185901b178555620002df565b600085815260208120601f198616915b82811015620003855788860151825594840194600190910190840162000364565b5085821015620003a45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051610160516120b76200041a60003960006104240152600061035f01526000610fde0152600061102d0152600061100801526000610f6101526000610f8b01526000610fb501526120b76000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806375f4f18e11610104578063a457c2d7116100a2578063d505accf11610071578063d505accf14610446578063dd62ed3e14610459578063f1127ed81461046c578063f2fde38b146104a957600080fd5b8063a457c2d7146103e6578063a9059cbb146103f9578063c3cda5201461040c578063c451463b1461041f57600080fd5b80638da5cb5b116100de5780638da5cb5b146103a75780638e539e8c146103b857806395d89b41146103cb5780639ab24eb0146103d357600080fd5b806375f4f18e1461035a57806379cc6790146103815780637ecebe001461039457600080fd5b80633a46b1a81161017c5780635c19a95c1161014b5780635c19a95c146102ee5780636fcfff451461030157806370a0823114610329578063715018a61461035257600080fd5b80633a46b1a81461026f57806340c10f191461028257806342966c6814610297578063587cde1e146102aa57600080fd5b806323b872dd116101b857806323b872dd14610232578063313ce567146102455780633644e51514610254578063395093511461025c57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e76104bc565b6040516101f49190611d63565b60405180910390f35b61021061020b366004611dcd565b61054e565b60405190151581526020016101f4565b6002545b6040519081526020016101f4565b610210610240366004611df7565b610568565b604051601281526020016101f4565b61022461058c565b61021061026a366004611dcd565b61059b565b61022461027d366004611dcd565b6105bd565b610295610290366004611dcd565b61063c565b005b6102956102a5366004611e33565b610652565b6102d66102b8366004611e4c565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b0390911681526020016101f4565b6102956102fc366004611e4c565b61065f565b61031461030f366004611e4c565b610669565b60405163ffffffff90911681526020016101f4565b610224610337366004611e4c565b6001600160a01b031660009081526020819052604090205490565b61029561068b565b6102d67f000000000000000000000000000000000000000000000000000000000000000081565b61029561038f366004611dcd565b61069f565b6102246103a2366004611e4c565b6106b4565b600a546001600160a01b03166102d6565b6102246103c6366004611e33565b6106d2565b6101e761072e565b6102246103e1366004611e4c565b61073d565b6102106103f4366004611dcd565b6107c4565b610210610407366004611dcd565b61083f565b61029561041a366004611e78565b61084d565b6102d67f000000000000000000000000000000000000000000000000000000000000000081565b610295610454366004611ed0565b610983565b610224610467366004611f3a565b610ae7565b61047f61047a366004611f6d565b610b12565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101f4565b6102956104b7366004611e4c565b610b96565b6060600380546104cb90611fad565b80601f01602080910402602001604051908101604052809291908181526020018280546104f790611fad565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b60003361055c818585610c0c565b60019150505b92915050565b600033610576858285610d30565b610581858585610daa565b506001949350505050565b6000610596610f54565b905090565b60003361055c8185856105ae8383610ae7565b6105b89190611ff7565b610c0c565b60004382106106135760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610635908361107b565b9392505050565b610644611172565b61064e82826111cc565b5050565b61065c33826111d6565b50565b61065c33826111e0565b6001600160a01b03811660009081526008602052604081205461056290611259565b610693611172565b61069d60006112c2565b565b6106aa823383610d30565b61064e82826111d6565b6001600160a01b038116600090815260056020526040812054610562565b60004382106107235760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161060a565b61056260098361107b565b6060600480546104cb90611fad565b6001600160a01b03811660009081526008602052604081205480156107b1576001600160a01b038316600090815260086020526040902061077f60018361200a565b8154811061078f5761078f61201d565b60009182526020909120015464010000000090046001600160e01b03166107b4565b60005b6001600160e01b03169392505050565b600033816107d28286610ae7565b9050838110156108325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161060a565b6105818286868403610c0c565b60003361055c818585610daa565b8342111561089d5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161060a565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906109179061090f9060a00160405160208183030381529060405280519060200120611314565b858585611362565b90506109228161138a565b86146109705760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161060a565b61097a81886111e0565b50505050505050565b834211156109d35760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161060a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610a028c61138a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a5d82611314565b90506000610a6d82878787611362565b9050896001600160a01b0316816001600160a01b031614610ad05760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161060a565b610adb8a8a8a610c0c565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610b5657610b5661201d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610b9e611172565b6001600160a01b038116610c035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060a565b61065c816112c2565b6001600160a01b038316610c6e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161060a565b6001600160a01b038216610ccf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161060a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d3c8484610ae7565b90506000198114610da45781811015610d975760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161060a565b610da48484848403610c0c565b50505050565b6001600160a01b038316610e0e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161060a565b6001600160a01b038216610e705760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161060a565b6001600160a01b03831660009081526020819052604090205481811015610ee85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161060a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610da48484846113b7565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610fad57507f000000000000000000000000000000000000000000000000000000000000000046145b15610fd757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156110d5576000611096846113c2565b6110a0908561200a565b600088815260209020909150869082015463ffffffff1611156110c5578091506110d3565b6110d0816001611ff7565b92505b505b808210156111225760006110e983836114aa565b600088815260209020909150869082015463ffffffff16111561110e5780915061111c565b611119816001611ff7565b92505b506110d5565b801561115c576111458661113760018461200a565b600091825260209091200190565b5464010000000090046001600160e01b031661115f565b60005b6001600160e01b03169695505050505050565b600a546001600160a01b0316331461069d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060a565b61064e82826114c5565b61064e828261154f565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610da4828483611567565b600063ffffffff8211156112be5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161060a565b5090565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610562611321610f54565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611373878787876116a4565b9150915061138081611768565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b505050565b6113b28383836118b2565b6000816000036113d457506000919050565b600060016113e1846118e4565b901c6001901b905060018184816113fa576113fa612033565b048201901c9050600181848161141257611412612033565b048201901c9050600181848161142a5761142a612033565b048201901c9050600181848161144257611442612033565b048201901c9050600181848161145a5761145a612033565b048201901c9050600181848161147257611472612033565b048201901c9050600181848161148a5761148a612033565b048201901c9050610635818285816114a4576114a4612033565b04611978565b60006114b96002848418612049565b61063590848416611ff7565b6114cf828261198e565b6002546001600160e01b0310156115415760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161060a565b610da46009611a5583611a61565b6115598282611bb5565b610da46009611cee83611a61565b816001600160a01b0316836001600160a01b0316141580156115895750600081115b156113b2576001600160a01b03831615611617576001600160a01b038316600090815260086020526040812081906115c490611cee85611a61565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161160c929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156113b2576001600160a01b0382166000908152600860205260408120819061164d90611a5585611a61565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611695929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116db575060009050600361175f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561172f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117585760006001925092505061175f565b9150600090505b94509492505050565b600081600481111561177c5761177c61206b565b036117845750565b60018160048111156117985761179861206b565b036117e55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161060a565b60028160048111156117f9576117f961206b565b036118465760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161060a565b600381600481111561185a5761185a61206b565b0361065c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161060a565b6001600160a01b038381166000908152600760205260408082205485841683529120546113b292918216911683611567565b600080608083901c156118f957608092831c92015b604083901c1561190b57604092831c92015b602083901c1561191d57602092831c92015b601083901c1561192f57601092831c92015b600883901c1561194157600892831c92015b600483901c1561195357600492831c92015b600283901c1561196557600292831c92015b600183901c156105625760010192915050565b60008183106119875781610635565b5090919050565b6001600160a01b0382166119e45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161060a565b80600260008282546119f69190611ff7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361064e600083836113b7565b60006106358284611ff7565b82546000908190818115611aae57611a7e8761113760018561200a565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611ac3565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611ae384868863ffffffff16565b9250600082118015611afb5750805163ffffffff1643145b15611b4057611b0983611cfa565b611b188861113760018661200a565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055611bab565b866040518060400160405280611b5543611259565b63ffffffff168152602001611b6986611cfa565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b038216611c155760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161060a565b6001600160a01b03821660009081526020819052604090205481811015611c895760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161060a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113b2836000846113b7565b6000610635828461200a565b60006001600160e01b038211156112be5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161060a565b600060208083528351808285015260005b81811015611d9057858101830151858201604001528201611d74565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611dc857600080fd5b919050565b60008060408385031215611de057600080fd5b611de983611db1565b946020939093013593505050565b600080600060608486031215611e0c57600080fd5b611e1584611db1565b9250611e2360208501611db1565b9150604084013590509250925092565b600060208284031215611e4557600080fd5b5035919050565b600060208284031215611e5e57600080fd5b61063582611db1565b803560ff81168114611dc857600080fd5b60008060008060008060c08789031215611e9157600080fd5b611e9a87611db1565b95506020870135945060408701359350611eb660608801611e67565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611eeb57600080fd5b611ef488611db1565b9650611f0260208901611db1565b95506040880135945060608801359350611f1e60808901611e67565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f4d57600080fd5b611f5683611db1565b9150611f6460208401611db1565b90509250929050565b60008060408385031215611f8057600080fd5b611f8983611db1565b9150602083013563ffffffff81168114611fa257600080fd5b809150509250929050565b600181811c90821680611fc157607f821691505b6020821081036113ac57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561056257610562611fe1565b8181038181111561056257610562611fe1565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261206657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c6ddb5643dc25ca3d8dff3d3de845c28f69434ed2aaba30dc02e8d9b5e4bd00764736f6c63430008100033b81d4b68d3effcc6fba59d3ddaab0fb2b5ce4ce5e23a1280e98aa079b6261f3da26469706673582212205efc96aa3646c7df07daba3a02495c86ec55a04c52a0c71de3a3743917adfaec64736f6c63430008100033608060405234801561001057600080fd5b50611012806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b281c47811610066578063b281c47814610151578063b6b55f251461015f578063f3fef3a314610172578063f5389d4a14610185578063fc0c546a1461019857600080fd5b8063485cc955146100a35780639155ccc8146100b85780639c68c504146100eb5780639e0c5f2a14610107578063ad7a672f14610148575b600080fd5b6100b66100b1366004610dba565b6101b1565b005b6100d86100c6366004610df3565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100f461030081565b60405161ffff90911681526020016100e2565b610130610115366004610e17565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b6100d860025481565b6001546100f49061ffff1681565b6100b661016d366004610e3b565b610233565b6100b6610180366004610e54565b610240565b600454610130906001600160a01b031681565b600154610130906201000090046001600160a01b031681565b6001546201000090046001600160a01b0316156101e1576040516307aff13f60e41b815260040160405180910390fd5b600180546001600160b01b031916620100006001600160a01b038581169190910261ffff191691909117909155600480546001600160a01b03191691831691909117905561022f600061027a565b5050565b61023d33826103a4565b50565b33600090815260036020526040902054811115610270576040516303571d3f60e41b815260040160405180910390fd5b61022f82826107b2565b61ffff81166000908152602081905260409020546001600160a01b0316156102b5576040516301b55a3f60e21b815260040160405180910390fd5b6004546000906102cd906001600160a01b0316610a3f565b9050600061030061ffff8416106102e6576000196102fa565b6102f1600384610e96565b61ffff166001901b5b60015460405163c350a1b560e01b81526001600160a01b0362010000909204821660048201526024810183905230604482015291925083169063c350a1b590606401600060405180830381600087803b15801561035657600080fd5b505af115801561036a573d6000803e3d6000fd5b5050505061ffff92909216600090815260208190526040902080546001600160a01b0319166001600160a01b039290921691909117905550565b801561022f5760015461ffff16600090815260208181526040918290205482516339d6a34560e11b815292516001600160a01b03909116926373ad468a9260048083019391928290030181865afa158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190610ec5565b60015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190610ec5565b106104dc576001805481906000906104c190839061ffff16610ede565b92506101000a81548161ffff021916908361ffff1602179055505b60015461ffff166000908152602081905260409020546001600160a01b031661050f5760015461050f9061ffff1661027a565b60015461ffff166000908152602081815260408083205481516316d3df1560e31b8152915185936001600160a01b039092169263b69ef8a89260048083019391928290030181865afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190610ec5565b6105979190610f00565b60015461ffff16600090815260208181526040918290205482516339d6a34560e11b815292516001600160a01b03909116926373ad468a9260048083019391928290030181865afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106149190610ec5565b116107225760015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106969190610ec5565b60015461ffff16600090815260208181526040918290205482516339d6a34560e11b815292516001600160a01b03909116926373ad468a9260048083019391928290030181865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610ec5565b61071d9190610f19565b610724565b815b90506107308183610f19565b915080600260008282546107449190610f00565b90915550506001600160a01b03831660009081526003602052604081208054839290610771908490610f00565b909155505060015461ffff81166000908152602081905260409020546107ac916201000090046001600160a01b039081169186911684610ade565b506103a4565b801561022f5760015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190610ec5565b60000361086f5760018054819060009061085490839061ffff16610f2c565b92506101000a81548161ffff021916908361ffff1602179055505b60015461ffff166000908152602081815260408083205481516316d3df1560e31b8152915185936001600160a01b039092169263b69ef8a89260048083019391928290030181865afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190610ec5565b116109745760015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190610ec5565b610976565b815b90506109828183610f19565b915080600260008282546109969190610f19565b909155505033600090815260036020526040812080548392906109ba908490610f19565b909155505060015461ffff166000908152602081905260409081902054905163f3fef3a360e01b81526001600160a01b038581166004830152602482018490529091169063f3fef3a390604401600060405180830381600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b50505050506107b2565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610ad95760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064015b60405180910390fd5b919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610b38908590610b3e565b50505050565b6000610b93826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c159092919063ffffffff16565b805190915015610c105780806020019051810190610bb19190610f47565b610c105760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ad0565b505050565b6060610c248484600085610c2c565b949350505050565b606082471015610c8d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ad0565b600080866001600160a01b03168587604051610ca99190610f8d565b60006040518083038185875af1925050503d8060008114610ce6576040519150601f19603f3d011682016040523d82523d6000602084013e610ceb565b606091505b5091509150610cfc87838387610d07565b979650505050505050565b60608315610d76578251600003610d6f576001600160a01b0385163b610d6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ad0565b5081610c24565b610c248383815115610d8b5781518083602001fd5b8060405162461bcd60e51b8152600401610ad09190610fa9565b6001600160a01b038116811461023d57600080fd5b60008060408385031215610dcd57600080fd5b8235610dd881610da5565b91506020830135610de881610da5565b809150509250929050565b600060208284031215610e0557600080fd5b8135610e1081610da5565b9392505050565b600060208284031215610e2957600080fd5b813561ffff81168114610e1057600080fd5b600060208284031215610e4d57600080fd5b5035919050565b60008060408385031215610e6757600080fd5b8235610e7281610da5565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff80841680610eb957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060208284031215610ed757600080fd5b5051919050565b61ffff818116838216019080821115610ef957610ef9610e80565b5092915050565b80820180821115610f1357610f13610e80565b92915050565b81810381811115610f1357610f13610e80565b61ffff828116828216039080821115610ef957610ef9610e80565b600060208284031215610f5957600080fd5b81518015158114610e1057600080fd5b60005b83811015610f84578181015183820152602001610f6c565b50506000910152565b60008251610f9f818460208701610f69565b9190910192915050565b6020815260008251806020840152610fc8816040850160208701610f69565b601f01601f1916919091016040019291505056fea2646970667358221220210f026bbd4dd9933bb543317284f06db2c07f6a93bf411d5984305d14b023cb64736f6c63430008100033608060405234801561001057600080fd5b50610400806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806373ad468a14610067578063b69ef8a814610083578063c350a1b51461008b578063f3fef3a3146100a0578063f851a440146100b3578063fc0c546a146100de575b600080fd5b61007060015481565b6040519081526020015b60405180910390f35b6100706100f1565b61009e61009936600461031a565b610163565b005b61009e6100ae36600461035c565b6101cf565b6002546100c6906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b6000546100c6906001600160a01b031681565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610388565b905090565b600254600160a01b900460ff161561018e5760405163da800ac560e01b815260040160405180910390fd5b600080546001600160a01b039485166001600160a01b0319909116179055600191909155600280546001600160a81b0319169190921617600160a01b179055565b6002546001600160a01b031633146101fa57604051630f0590d360e41b815260040160405180910390fd5b6000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610388565b81111561028657604051633fe8fd1d60e01b815260040160405180910390fd5b60005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd91906103a1565b505050565b6001600160a01b038116811461031757600080fd5b50565b60008060006060848603121561032f57600080fd5b833561033a81610302565b925060208401359150604084013561035181610302565b809150509250925092565b6000806040838503121561036f57600080fd5b823561037a81610302565b946020939093013593505050565b60006020828403121561039a57600080fd5b5051919050565b6000602082840312156103b357600080fd5b815180151581146103c357600080fd5b939250505056fea2646970667358221220d77439e852689c54a429d4dd4335880ce54a86822a9d86a16320ff56aff7273564736f6c6343000810003360806040523480156200001157600080fd5b5060405162003987380380620039878339810160408190526200003491620003e3565b604080516000808252602082019081528183019092526212750091866200006b6000805160206200390783398151915280620002bd565b620000956000805160206200392783398151915260008051602062003907833981519152620002bd565b620000bf6000805160206200394783398151915260008051602062003907833981519152620002bd565b620000e96000805160206200396783398151915260008051602062003907833981519152620002bd565b62000104600080516020620039078339815191523062000308565b6001600160a01b038116156200012f576200012f600080516020620039078339815191528262000308565b60005b8351811015620001b557620001796000805160206200392783398151915285838151811062000165576200016562000440565b60200260200101516200030860201b60201c565b620001a26000805160206200396783398151915285838151811062000165576200016562000440565b620001ad8162000456565b905062000132565b5060005b8251811015620001ff57620001ec6000805160206200394783398151915284838151811062000165576200016562000440565b620001f78162000456565b9050620001b9565b5060028490556040805160008152602081018690527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1505050508282826040516200025490620003b8565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000291573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506200047e92505050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b62000314828262000318565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000314576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620003743390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61168b806200227c83390190565b80516001600160a01b0381168114620003de57600080fd5b919050565b60008060008060808587031215620003fa57600080fd5b6200040585620003c6565b93506200041560208601620003c6565b92506200042560408601620003c6565b91506200043560608601620003c6565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b6000600182016200047757634e487b7160e01b600052601160045260246000fd5b5060010190565b611dee806200048e6000396000f3fe6080604052600436106101c65760003560e01c80638065657f116100f7578063bc197c8111610095578063d547741f11610064578063d547741f146105c5578063e38335e5146105e5578063f23a6e61146105f8578063f27a0c921461062457600080fd5b8063bc197c8114610514578063c45a015514610540578063c4d252f514610578578063d45c44351461059857600080fd5b806391d14854116100d157806391d148541461048b578063a217fddf146104ab578063b08e51c0146104c0578063b1c5f427146104f457600080fd5b80638065657f146104175780638f2a0bb0146104375780638f61f4f51461045757600080fd5b8063248a9ca31161016457806331d507501161013e57806331d507501461039757806336568abe146103b7578063584b153e146103d757806364d62353146103f757600080fd5b8063248a9ca3146103165780632ab0f529146103465780632f2ff15d1461037757600080fd5b80630d3cf6fc116101a05780630d3cf6fc1461026b578063134008d31461029f57806313bc9f20146102b2578063150b7a02146102d257600080fd5b806301d5062a146101d257806301ffc9a7146101f457806307bd02651461022957600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004611403565b610639565b005b34801561020057600080fd5b5061021461020f366004611477565b6106ce565b60405190151581526020015b60405180910390f35b34801561023557600080fd5b5061025d7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6381565b604051908152602001610220565b34801561027757600080fd5b5061025d7f5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca581565b6101f26102ad3660046114a1565b6106f9565b3480156102be57600080fd5b506102146102cd36600461150c565b6107ae565b3480156102de57600080fd5b506102fd6102ed3660046115da565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610220565b34801561032257600080fd5b5061025d61033136600461150c565b60009081526020819052604090206001015490565b34801561035257600080fd5b5061021461036136600461150c565b6000908152600160208190526040909120541490565b34801561038357600080fd5b506101f2610392366004611641565b6107d4565b3480156103a357600080fd5b506102146103b236600461150c565b6107fe565b3480156103c357600080fd5b506101f26103d2366004611641565b610817565b3480156103e357600080fd5b506102146103f236600461150c565b61089a565b34801561040357600080fd5b506101f261041236600461150c565b6108b0565b34801561042357600080fd5b5061025d6104323660046114a1565b610954565b34801561044357600080fd5b506101f26104523660046116b1565b610993565b34801561046357600080fd5b5061025d7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc181565b34801561049757600080fd5b506102146104a6366004611641565b610ae5565b3480156104b757600080fd5b5061025d600081565b3480156104cc57600080fd5b5061025d7ffd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f78381565b34801561050057600080fd5b5061025d61050f366004611762565b610b0e565b34801561052057600080fd5b506102fd61052f366004611889565b63bc197c8160e01b95945050505050565b34801561054c57600080fd5b50600354610560906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561058457600080fd5b506101f261059336600461150c565b610b53565b3480156105a457600080fd5b5061025d6105b336600461150c565b60009081526001602052604090205490565b3480156105d157600080fd5b506101f26105e0366004611641565b610c28565b6101f26105f3366004611762565b610c4d565b34801561060457600080fd5b506102fd610613366004611932565b63f23a6e6160e01b95945050505050565b34801561063057600080fd5b5060025461025d565b7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc161066381610dd7565b6000610673898989898989610954565b905061067f8184610de4565b6000817f4cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca8b8b8b8b8b8a6040516106bb969594939291906119bf565b60405180910390a3505050505050505050565b60006001600160e01b03198216630271189760e51b14806106f357506106f382610ed3565b92915050565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63610725816000610ae5565b610733576107338133610f08565b6000610743888888888888610954565b905061074f8185610f61565b61075b88888888610ffd565b6000817fc2617efa69bab66782fa219543714338489c4e9e178271560a91b82c3f612b588a8a8a8a60405161079394939291906119fc565b60405180910390a36107a4816110d0565b5050505050505050565b6000818152600160205260408120546001811180156107cd5750428111155b9392505050565b6000828152602081905260409020600101546107ef81610dd7565b6107f98383611109565b505050565b60008181526001602052604081205481905b1192915050565b6001600160a01b038116331461088c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610896828261118d565b5050565b6000818152600160208190526040822054610810565b3330146109135760405162461bcd60e51b815260206004820152602b60248201527f54696d656c6f636b436f6e74726f6c6c65723a2063616c6c6572206d7573742060448201526a62652074696d656c6f636b60a81b6064820152608401610883565b60025460408051918252602082018390527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1600255565b6000868686868686604051602001610971969594939291906119bf565b6040516020818303038152906040528051906020012090509695505050505050565b7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc16109bd81610dd7565b8887146109dc5760405162461bcd60e51b815260040161088390611a2e565b8885146109fb5760405162461bcd60e51b815260040161088390611a2e565b6000610a0d8b8b8b8b8b8b8b8b610b0e565b9050610a198184610de4565b60005b8a811015610ad75780827f4cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca8e8e85818110610a5957610a59611a71565b9050602002016020810190610a6e9190611a87565b8d8d86818110610a8057610a80611a71565b905060200201358c8c87818110610a9957610a99611a71565b9050602002810190610aab9190611aa2565b8c8b604051610abf969594939291906119bf565b60405180910390a3610ad081611afe565b9050610a1c565b505050505050505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008888888888888888604051602001610b2f989796959493929190611ba8565b60405160208183030381529060405280519060200120905098975050505050505050565b7ffd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783610b7d81610dd7565b610b868261089a565b610bec5760405162461bcd60e51b815260206004820152603160248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e2063616044820152701b9b9bdd0818994818d85b98d95b1b1959607a1b6064820152608401610883565b6000828152600160205260408082208290555183917fbaa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb7091a25050565b600082815260208190526040902060010154610c4381610dd7565b6107f9838361118d565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63610c79816000610ae5565b610c8757610c878133610f08565b878614610ca65760405162461bcd60e51b815260040161088390611a2e565b878414610cc55760405162461bcd60e51b815260040161088390611a2e565b6000610cd78a8a8a8a8a8a8a8a610b0e565b9050610ce38185610f61565b60005b89811015610dc15760008b8b83818110610d0257610d02611a71565b9050602002016020810190610d179190611a87565b905060008a8a84818110610d2d57610d2d611a71565b9050602002013590503660008a8a86818110610d4b57610d4b611a71565b9050602002810190610d5d9190611aa2565b91509150610d6d84848484610ffd565b84867fc2617efa69bab66782fa219543714338489c4e9e178271560a91b82c3f612b5886868686604051610da494939291906119fc565b60405180910390a35050505080610dba90611afe565b9050610ce6565b50610dcb816110d0565b50505050505050505050565b610de18133610f08565b50565b610ded826107fe565b15610e525760405162461bcd60e51b815260206004820152602f60248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e20616c60448201526e1c9958591e481cd8da19591d5b1959608a1b6064820152608401610883565b600254811015610eb35760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e746044820152652064656c617960d01b6064820152608401610883565b610ebd8142611c49565b6000928352600160205260409092209190915550565b60006001600160e01b03198216637965db0b60e01b14806106f357506301ffc9a760e01b6001600160e01b03198316146106f3565b610f128282610ae5565b61089657610f1f816111f2565b610f2a836020611204565b604051602001610f3b929190611c80565b60408051601f198184030181529082905262461bcd60e51b825261088391600401611cf5565b610f6a826107ae565b610f865760405162461bcd60e51b815260040161088390611d28565b801580610fa25750600081815260016020819052604090912054145b6108965760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a206d697373696e6720646570656044820152656e64656e637960d01b6064820152608401610883565b6000846001600160a01b031684848460405161101a929190611d72565b60006040518083038185875af1925050503d8060008114611057576040519150601f19603f3d011682016040523d82523d6000602084013e61105c565b606091505b50509050806110c95760405162461bcd60e51b815260206004820152603360248201527f54696d656c6f636b436f6e74726f6c6c65723a20756e6465726c79696e6720746044820152721c985b9cd858dd1a5bdb881c995d995c9d1959606a1b6064820152608401610883565b5050505050565b6110d9816107ae565b6110f55760405162461bcd60e51b815260040161088390611d28565b600090815260016020819052604090912055565b6111138282610ae5565b610896576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556111493390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6111978282610ae5565b15610896576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60606106f36001600160a01b03831660145b60606000611213836002611d82565b61121e906002611c49565b6001600160401b0381111561123557611235611525565b6040519080825280601f01601f19166020018201604052801561125f576020820181803683370190505b509050600360fc1b8160008151811061127a5761127a611a71565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106112a9576112a9611a71565b60200101906001600160f81b031916908160001a90535060006112cd846002611d82565b6112d8906001611c49565b90505b6001811115611350576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061130c5761130c611a71565b1a60f81b82828151811061132257611322611a71565b60200101906001600160f81b031916908160001a90535060049490941c9361134981611da1565b90506112db565b5083156107cd5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610883565b80356001600160a01b03811681146113b657600080fd5b919050565b60008083601f8401126113cd57600080fd5b5081356001600160401b038111156113e457600080fd5b6020830191508360208285010111156113fc57600080fd5b9250929050565b600080600080600080600060c0888a03121561141e57600080fd5b6114278861139f565b96506020880135955060408801356001600160401b0381111561144957600080fd5b6114558a828b016113bb565b989b979a50986060810135976080820135975060a09091013595509350505050565b60006020828403121561148957600080fd5b81356001600160e01b0319811681146107cd57600080fd5b60008060008060008060a087890312156114ba57600080fd5b6114c38761139f565b95506020870135945060408701356001600160401b038111156114e557600080fd5b6114f189828a016113bb565b979a9699509760608101359660809091013595509350505050565b60006020828403121561151e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561156357611563611525565b604052919050565b600082601f83011261157c57600080fd5b81356001600160401b0381111561159557611595611525565b6115a8601f8201601f191660200161153b565b8181528460208386010111156115bd57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156115f057600080fd5b6115f98561139f565b93506116076020860161139f565b92506040850135915060608501356001600160401b0381111561162957600080fd5b6116358782880161156b565b91505092959194509250565b6000806040838503121561165457600080fd5b823591506116646020840161139f565b90509250929050565b60008083601f84011261167f57600080fd5b5081356001600160401b0381111561169657600080fd5b6020830191508360208260051b85010111156113fc57600080fd5b600080600080600080600080600060c08a8c0312156116cf57600080fd5b89356001600160401b03808211156116e657600080fd5b6116f28d838e0161166d565b909b50995060208c013591508082111561170b57600080fd5b6117178d838e0161166d565b909950975060408c013591508082111561173057600080fd5b5061173d8c828d0161166d565b9a9d999c50979a969997986060880135976080810135975060a0013595509350505050565b60008060008060008060008060a0898b03121561177e57600080fd5b88356001600160401b038082111561179557600080fd5b6117a18c838d0161166d565b909a50985060208b01359150808211156117ba57600080fd5b6117c68c838d0161166d565b909850965060408b01359150808211156117df57600080fd5b506117ec8b828c0161166d565b999c989b509699959896976060870135966080013595509350505050565b600082601f83011261181b57600080fd5b813560206001600160401b0382111561183657611836611525565b8160051b61184582820161153b565b928352848101820192828101908785111561185f57600080fd5b83870192505b8483101561187e57823582529183019190830190611865565b979650505050505050565b600080600080600060a086880312156118a157600080fd5b6118aa8661139f565b94506118b86020870161139f565b935060408601356001600160401b03808211156118d457600080fd5b6118e089838a0161180a565b945060608801359150808211156118f657600080fd5b61190289838a0161180a565b9350608088013591508082111561191857600080fd5b506119258882890161156b565b9150509295509295909350565b600080600080600060a0868803121561194a57600080fd5b6119538661139f565b94506119616020870161139f565b9350604086013592506060860135915060808601356001600160401b0381111561198a57600080fd5b6119258882890161156b565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038716815285602082015260a0604082015260006119e760a083018688611996565b60608301949094525060800152949350505050565b60018060a01b0385168152836020820152606060408201526000611a24606083018486611996565b9695505050505050565b60208082526023908201527f54696d656c6f636b436f6e74726f6c6c65723a206c656e677468206d69736d616040820152620e8c6d60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a9957600080fd5b6107cd8261139f565b6000808335601e19843603018112611ab957600080fd5b8301803591506001600160401b03821115611ad357600080fd5b6020019150368190038213156113fc57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b1057611b10611ae8565b5060010190565b81835260006020808501808196508560051b810191508460005b87811015611b9b5782840389528135601e19883603018112611b5257600080fd5b870185810190356001600160401b03811115611b6d57600080fd5b803603821315611b7c57600080fd5b611b87868284611996565b9a87019a9550505090840190600101611b31565b5091979650505050505050565b60a0808252810188905260008960c08301825b8b811015611be9576001600160a01b03611bd48461139f565b16825260209283019290910190600101611bbb565b5083810360208501528881526001600160fb1b03891115611c0957600080fd5b8860051b9150818a60208301370182810360209081016040850152611c319082018789611b17565b60608401959095525050608001529695505050505050565b808201808211156106f3576106f3611ae8565b60005b83811015611c77578181015183820152602001611c5f565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611cb8816017850160208801611c5c565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611ce9816028840160208801611c5c565b01602801949350505050565b6020815260008251806020840152611d14816040850160208701611c5c565b601f01601f19169190910160400192915050565b6020808252602a908201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e206973604082015269206e6f7420726561647960b01b606082015260800190565b8183823760009101908152919050565b6000816000190483118215151615611d9c57611d9c611ae8565b500290565b600081611db057611db0611ae8565b50600019019056fea2646970667358221220b86a8c6d3978623bedb41d450f28dd69d463d1085cf173b9a0fdf9ade32262b064736f6c6343000810003360e060405260646200001b670de0b6b3a7640000600a620001f0565b6200002791906200021e565b6003556200003f6002670de0b6b3a76400006200021e565b6004553480156200004f57600080fd5b506040516200168b3803806200168b83398101604081905262000072916200025e565b6200007d3362000108565b6001600160a01b0383811660805282811660a052811660c052600280546001600160a01b031916331790557f6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc060005260016020527faa1c8b08dbb9bd22207628d19d6b99db3f22a1475a05809121f154277abd52d854620000ff903362000158565b505050620002a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000164828262000168565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001645760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008160001904831182151516156200021957634e487b7160e01b600052601160045260246000fd5b500290565b6000826200023c57634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b03811681146200025957600080fd5b919050565b6000806000606084860312156200027457600080fd5b6200027f8462000241565b92506200028f6020850162000241565b91506200029f6040850162000241565b90509250925092565b60805160a05160c051611397620002f4600039600081816104120152818161090501526109f8015260008181610381015281816108c201526109b50152600061086801526113976000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806391d14854116100f9578063c614368e11610097578063d88ff1f411610071578063d88ff1f4146103d2578063e3433615146103e7578063f2fde38b146103fa578063f5389d4a1461040d57600080fd5b8063c614368e146103a3578063d0e34b9f146103ac578063d547741f146103bf57600080fd5b8063b2461417116100d3578063b246141714610343578063b88fd16e14610356578063ba7b5fd014610369578063c45b0fca1461037c57600080fd5b806391d148541461031357806393fb8f7614610326578063a217fddf1461033b57600080fd5b806342b735e611610166578063531aa03e11610140578063531aa03e146102b35780636fe99db2146102e7578063715018a6146102fa5780638da5cb5b1461030257600080fd5b806342b735e61461026457806344a7b4c9146102775780634f925dc81461028a57600080fd5b806301ffc9a7146101ae57806302f1ce01146101d6578063248a9ca3146101ed5780632f2ff15d1461021157806336568abe1461022657806341d1de9714610239575b600080fd5b6101c16101bc36600461106e565b610434565b60405190151581526020015b60405180910390f35b6101df60045481565b6040519081526020016101cd565b6101df6101fb366004611098565b6000908152600160208190526040909120015490565b61022461021f3660046110c6565b61046b565b005b6102246102343660046110c6565b610496565b61024c610247366004611098565b610519565b6040516001600160a01b0390911681526020016101cd565b6102246102723660046110f6565b610543565b610224610285366004611113565b610566565b61024c6102983660046110f6565b6006602052600090815260409020546001600160a01b031681565b61024c6102c136600461116f565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b6102246102f53660046110f6565b61062f565b61022461064f565b6000546001600160a01b031661024c565b6101c16103213660046110c6565b610663565b6101df60008051602061134283398151915281565b6101df600081565b6102246103513660046110f6565b61068e565b60025461024c906001600160a01b031681565b610224610377366004611098565b6106b8565b61024c7f000000000000000000000000000000000000000000000000000000000000000081565b6101df60035481565b6102246103ba366004611098565b6106ee565b6102246103cd3660046110c6565b610724565b6103da61074a565b6040516101cd919061119d565b61024c6103f536600461116f565b6107ac565b6102246104083660046110f6565b610bca565b61024c7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b148061046557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152600160208190526040909120015461048781610c40565b6104918383610c4a565b505050565b6001600160a01b038116331461050b5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105158282610cb5565b5050565b6007818154811061052957600080fd5b6000918252602090912001546001600160a01b0316905081565b61054b610d1c565b6105636000805160206113428339815191528261046b565b50565b60008051602061134283398151915261057e81610c40565b6001600160a01b038086166000908152600560209081526040808320888516845290915290205416806105c45760405163a7fff15b60e01b815260040160405180910390fd5b60405163015825eb60e21b81526001600160a01b038581166004830152848116602483015282169063056097ac90604401600060405180830381600087803b15801561060f57600080fd5b505af1158015610623573d6000803e3d6000fd5b50505050505050505050565b610637610d1c565b61056360008051602061134283398151915282610724565b610657610d1c565b6106616000610d76565b565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610696610d1c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6106c0610d1c565b670de0b6b3a76400008111156106e957604051630a953df960e31b815260040160405180910390fd5b600355565b6106f6610d1c565b670de0b6b3a764000081111561071f57604051630a953df960e31b815260040160405180910390fd5b600455565b6000828152600160208190526040909120015461074081610c40565b6104918383610cb5565b606060078054806020026020016040519081016040528092919081815260200182805480156107a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610784575b5050505050905090565b6000816001600160a01b0316836001600160a01b0316036107e05760405163c06cd3c360e01b815260040160405180910390fd5b6001600160a01b03831615806107fd57506001600160a01b038216155b1561081b57604051634b46d9cd60e11b815260040160405180910390fd5b6001600160a01b03838116600090815260056020908152604080832086851684529091529020541615610861576040516312e0598f60e01b815260040160405180910390fd5b600061088c7f0000000000000000000000000000000000000000000000000000000000000000610dc6565b6001600160a01b0380861660009081526006602052604080822054878416835291205492935081169116816109a05760006108e67f0000000000000000000000000000000000000000000000000000000000000000610dc6565b60405163485cc95560e01b81526001600160a01b0389811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301529194508492509082169063485cc95590604401600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b505050506001600160a01b03878116600090815260066020526040902080546001600160a01b031916918516919091179055505b6001600160a01b038116610a935760006109d97f0000000000000000000000000000000000000000000000000000000000000000610dc6565b60405163485cc95560e01b81526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301529193508392509082169063485cc95590604401600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505050506001600160a01b03868116600090815260066020526040902080546001600160a01b031916918416919091179055505b60405163c0c53b8b60e01b81526001600160a01b0383811660048301528281166024830152306044830152939450849384169063c0c53b8b90606401600060405180830381600087803b158015610ae957600080fd5b505af1158015610afd573d6000803e3d6000fd5b505050506001600160a01b0386811660008181526005602081815260408084208b87168086529083528185208054978c166001600160a01b03199889168117909155938352818520868652835281852080548816851790556007805460018101825595527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890940180549096168317909555935190815290927f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b910160405180910390a350505092915050565b610bd2610d1c565b6001600160a01b038116610c375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610502565b61056381610d76565b6105638133610e60565b610c548282610663565b6105155760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610cbf8282610663565b156105155760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000546001600160a01b031633146106615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610502565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610e5b5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610502565b919050565b610e6a8282610663565b61051557610e7781610eb9565b610e82836020610ecb565b604051602001610e9392919061120e565b60408051601f198184030181529082905262461bcd60e51b825261050291600401611283565b60606104656001600160a01b03831660145b60606000610eda8360026112cc565b610ee59060026112eb565b67ffffffffffffffff811115610efd57610efd6112fe565b6040519080825280601f01601f191660200182016040528015610f27576020820181803683370190505b509050600360fc1b81600081518110610f4257610f42611314565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610f7157610f71611314565b60200101906001600160f81b031916908160001a9053506000610f958460026112cc565b610fa09060016112eb565b90505b6001811115611018576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610fd457610fd4611314565b1a60f81b828281518110610fea57610fea611314565b60200101906001600160f81b031916908160001a90535060049490941c936110118161132a565b9050610fa3565b5083156110675760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610502565b9392505050565b60006020828403121561108057600080fd5b81356001600160e01b03198116811461106757600080fd5b6000602082840312156110aa57600080fd5b5035919050565b6001600160a01b038116811461056357600080fd5b600080604083850312156110d957600080fd5b8235915060208301356110eb816110b1565b809150509250929050565b60006020828403121561110857600080fd5b8135611067816110b1565b6000806000806080858703121561112957600080fd5b8435611134816110b1565b93506020850135611144816110b1565b92506040850135611154816110b1565b91506060850135611164816110b1565b939692955090935050565b6000806040838503121561118257600080fd5b823561118d816110b1565b915060208301356110eb816110b1565b6020808252825182820181905260009190848201906040850190845b818110156111de5783516001600160a01b0316835292840192918401916001016111b9565b50909695505050505050565b60005b838110156112055781810151838201526020016111ed565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516112468160178501602088016111ea565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516112778160288401602088016111ea565b01602801949350505050565b60208152600082518060208401526112a28160408501602087016111ea565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156112e6576112e66112b6565b500290565b80820180821115610465576104656112b6565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081611339576113396112b6565b50600019019056fe6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc0a2646970667358221220f89af9147d951c2fe23ccd034ca3555841dc1bb69de3aff929cd5446672c9df864736f6c634300081000335f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5b09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63fd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f7836101606040523480156200001257600080fd5b5060405162004a6338038062004a6383398101604081905262000035916200080b565b80600483600161c4e068056bc75e2d6310000060405180604001604052806008815260200167537461697277617960c01b815250806200007a6200016b60201b60201c565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120526000620001178282620008ef565b506200012590508362000186565b6200013082620001c7565b6200013b816200026e565b5050506001600160a01b0316610140526200015681620002af565b50620001628162000427565b505050620009e3565b6040805180820190915260018152603160f81b602082015290565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b600081116200022d5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b6064811115620003345760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40162000224565b60006200034062000490565b90508015801590620003525750600a54155b15620003cd57600a6000016040518060400160405280600063ffffffff1681526020016200038b84620004c860201b6200151b1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b620003e882600a6200053760201b620015881790919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b600b54604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600a5460009015620004c157620004b3600a6200058a60201b620015be1760201c565b6001600160e01b0316905090565b5060095490565b60006001600160e01b03821115620005335760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000224565b5090565b60008062000574846000016200055843620005d860201b620015fc1760201c565b6200056e86620004c860201b6200151b1760201c565b6200063f565b6001600160e01b03918216969116945092505050565b80546000908015620005ce57620005b683620005a8600184620009bb565b600091825260209091200190565b5464010000000090046001600160e01b0316620005d1565b60005b9392505050565b600063ffffffff821115620005335760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000224565b825460009081908015620007945760006200066187620005a8600185620009bb565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015620006e55760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b6579000000000000000000604482015260640162000224565b805163ffffffff8088169116036200073357846200070a88620005a8600186620009bb565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905562000783565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150620007ea9050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b6001600160a01b03811681146200080857600080fd5b50565b600080604083850312156200081f57600080fd5b82516200082c81620007f2565b60208401519092506200083f81620007f2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200087557607f821691505b6020821081036200089657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620008ea57600081815260208120601f850160051c81016020861015620008c55750805b601f850160051c820191505b81811015620008e657828155600101620008d1565b5050505b505050565b81516001600160401b038111156200090b576200090b6200084a565b62000923816200091c845462000860565b846200089c565b602080601f8311600181146200095b5760008415620009425750858301515b600019600386901b1c1916600185901b178555620008e6565b600085815260208120601f198616915b828110156200098c578886015182559484019460019091019084016200096b565b5085821015620009ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115620009dd57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e05161010051610120516101405161401762000a4c600039600081816108be0152818161204d015261224101526000612560015260006125af0152600061258a015260006124e30152600061250d0152600061253701526140176000f3fe6080604052600436106102555760003560e01c80637b3c71d311610139578063c28bc2fa116100b6578063ea0217cf1161007a578063ea0217cf14610800578063eb9019d414610820578063ece40cc114610840578063f23a6e6114610860578063f8ce560a1461088c578063fc0c546a146108ac57600080fd5b8063c28bc2fa14610752578063c59057e414610765578063d33219b414610785578063dd4e2ba5146107b7578063deaaa7cc146107cc57600080fd5b8063a890c910116100fd578063a890c910146106b1578063ab58fb8e146106d1578063b58131b0146106f1578063bc197c8114610706578063c01f9e371461073257600080fd5b80637b3c71d3146106285780637d5e81e21461064857806397c3d334146106685780639a802a6d1461067c578063a7713a701461069c57600080fd5b8063342cfab6116101d2578063544ffc9c11610196578063544ffc9c1461051657806354fd4d501461057e57806356781388146105a85780635f398a14146105c857806360c4247f146105e857806370b0f6601461060857600080fd5b8063342cfab6146104025780633932abb1146104665780633bccf4fd1461047b5780633e4f49e61461049b57806343859632146104c857600080fd5b8063150b7a0211610219578063150b7a0214610337578063160cbed71461037b5780632656227d1461039b5780632d63f693146103ae5780632fe3e261146103ce57600080fd5b806301ffc9a71461027d57806302a251a3146102b257806303420181146102d557806306f3f9e6146102f557806306fdde031461031557600080fd5b3661027857306102636108e0565b6001600160a01b03161461027657600080fd5b005b600080fd5b34801561028957600080fd5b5061029d6102983660046130be565b6108f9565b60405190151581526020015b60405180910390f35b3480156102be57600080fd5b506102c761090a565b6040519081526020016102a9565b3480156102e157600080fd5b506102c76102f03660046131fc565b610915565b34801561030157600080fd5b506102766103103660046132a2565b610a0d565b34801561032157600080fd5b5061032a610aa0565b6040516102a99190613301565b34801561034357600080fd5b50610362610352366004613329565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016102a9565b34801561038757600080fd5b506102c7610396366004613505565b610b32565b6102c76103a9366004613505565b610d32565b3480156103ba57600080fd5b506102c76103c93660046132a2565b610e1f565b3480156103da57600080fd5b506102c77fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561040e57600080fd5b5061044e61041d366004613594565b60009182526008602090815260408084206001600160a01b039390931684529190529020546001600160801b031690565b6040516001600160801b0390911681526020016102a9565b34801561047257600080fd5b506102c7610e56565b34801561048757600080fd5b506102c76104963660046135c4565b610e61565b3480156104a757600080fd5b506104bb6104b63660046132a2565b610ed7565b6040516102a99190613628565b3480156104d457600080fd5b5061029d6104e3366004613594565b60009182526008602090815260408084206001600160a01b039390931684529190529020546001600160801b0316151590565b34801561052257600080fd5b506105636105313660046132a2565b600090815260076020526040902080546001909101546001600160801b0380831693600160801b909304811692911690565b604080519384526020840192909252908201526060016102a9565b34801561058a57600080fd5b506040805180820190915260018152603160f81b602082015261032a565b3480156105b457600080fd5b506102c76105c3366004613650565b610ee2565b3480156105d457600080fd5b506102c76105e336600461367c565b610f0b565b3480156105f457600080fd5b506102c76106033660046132a2565b610f55565b34801561061457600080fd5b506102766106233660046132a2565b610fec565b34801561063457600080fd5b506102c76106433660046136ff565b611073565b34801561065457600080fd5b506102c7610663366004613758565b6110c5565b34801561067457600080fd5b5060646102c7565b34801561068857600080fd5b506102c761069736600461380c565b6110dc565b3480156106a857600080fd5b506102c76110f3565b3480156106bd57600080fd5b506102766106cc366004613864565b61111d565b3480156106dd57600080fd5b506102c76106ec3660046132a2565b6111a4565b3480156106fd57600080fd5b506102c761123e565b34801561071257600080fd5b50610362610721366004613881565b63bc197c8160e01b95945050505050565b34801561073e57600080fd5b506102c761074d3660046132a2565b611249565b610276610760366004613914565b611278565b34801561077157600080fd5b506102c7610780366004613505565b611387565b34801561079157600080fd5b50600b546001600160a01b03165b6040516001600160a01b0390911681526020016102a9565b3480156107c357600080fd5b5061032a6113c1565b3480156107d857600080fd5b506102c77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561080c57600080fd5b5061027661081b3660046132a2565b6113e1565b34801561082c57600080fd5b506102c761083b366004613957565b611468565b34801561084c57600080fd5b5061027661085b3660046132a2565b611489565b34801561086c57600080fd5b5061036261087b366004613983565b63f23a6e6160e01b95945050505050565b34801561089857600080fd5b506102c76108a73660046132a2565b611510565b3480156108b857600080fd5b5061079f7f000000000000000000000000000000000000000000000000000000000000000081565b60006108f4600b546001600160a01b031690565b905090565b600061090482611661565b92915050565b60006108f460055490565b6000806109b96109b17fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c6040516109519291906139eb565b60405180910390208b80519060200120604051602001610996959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b60405160208183030381529060405280519060200120611686565b8686866116d4565b90506109ff8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92506116f2915050565b9a9950505050505050505050565b610a156108e0565b6001600160a01b0316336001600160a01b031614610a4e5760405162461bcd60e51b8152600401610a45906139fb565b60405180910390fd5b30610a576108e0565b6001600160a01b031614610a945760008036604051610a779291906139eb565b604051809103902090505b80610a8d6002611857565b03610a8257505b610a9d816118cd565b50565b606060008054610aaf90613a32565b80601f0160208091040260200160405190810160405280929190818152602001828054610adb90613a32565b8015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b5050505050905090565b600080610b4186868686611387565b90506004610b4e82610ed7565b6007811115610b5f57610b5f613612565b14610b7c5760405162461bcd60e51b8152600401610a4590613a6c565b600b546040805163793d064960e11b815290516000926001600160a01b03169163f27a0c929160048083019260209291908290030181865afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea9190613aad565b600b5460405163b1c5f42760e01b81529192506001600160a01b03169063b1c5f42790610c24908a908a908a906000908b90600401613b8f565b602060405180830381865afa158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c659190613aad565b6000838152600c602052604080822092909255600b5491516308f2a0bb60e41b81526001600160a01b0390921691638f2a0bb091610cb0918b918b918b91908b908990600401613bdd565b600060405180830381600087803b158015610cca57600080fd5b505af1158015610cde573d6000803e3d6000fd5b505050507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892828242610d109190613c4b565b6040805192835260208301919091520160405180910390a15095945050505050565b600080610d4186868686611387565b90506000610d4e82610ed7565b90506004816007811115610d6457610d64613612565b1480610d8157506005816007811115610d7f57610d7f613612565b145b610d9d5760405162461bcd60e51b8152600401610a4590613a6c565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610dfb8288888888611a19565b610e088288888888611abb565b610e158288888888611ac8565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60006108f460045490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610eaf906109b190608001610996565b9050610ecc87828860405180602001604052806000815250611b01565b979650505050505050565b600061090482611b24565b600080339050610f0384828560405180602001604052806000815250611b01565b949350505050565b600080339050610ecc87828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506116f2915050565b600a54600090808203610f6c575050600954919050565b6000600a610f7b600184613c5e565b81548110610f8b57610f8b613c71565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b03169282019290925291508410610fe157602001516001600160e01b03169392505050565b610f03600a85611c6e565b610ff46108e0565b6001600160a01b0316336001600160a01b0316146110245760405162461bcd60e51b8152600401610a45906139fb565b3061102d6108e0565b6001600160a01b03161461106a576000803660405161104d9291906139eb565b604051809103902090505b806110636002611857565b0361105857505b610a9d81611d20565b6000803390506110bb86828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b0192505050565b9695505050505050565b60006110d385858585611d61565b95945050505050565b60006110e9848484612024565b90505b9392505050565b600a546000901561111657611108600a6115be565b6001600160e01b0316905090565b5060095490565b6111256108e0565b6001600160a01b0316336001600160a01b0316146111555760405162461bcd60e51b8152600401610a45906139fb565b3061115e6108e0565b6001600160a01b03161461119b576000803660405161117e9291906139eb565b604051809103902090505b806111946002611857565b0361118957505b610a9d816120ba565b600b546000828152600c602052604080822054905163d45c443560e01b81526004810191909152909182916001600160a01b039091169063d45c443590602401602060405180830381865afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112259190613aad565b90508060011461123557806110ec565b60009392505050565b60006108f460065490565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610e47565b6112806108e0565b6001600160a01b0316336001600160a01b0316146112b05760405162461bcd60e51b8152600401610a45906139fb565b306112b96108e0565b6001600160a01b0316146112f657600080366040516112d99291906139eb565b604051809103902090505b806112ef6002611857565b036112e457505b600080856001600160a01b03168585856040516113149291906139eb565b60006040518083038185875af1925050503d8060008114611351576040519150601f19603f3d011682016040523d82523d6000602084013e611356565b606091505b509150915061137e8282604051806060016040528060288152602001613f8860289139612123565b50505050505050565b6000848484846040516020016113a09493929190613c87565b60408051601f19818403018152919052805160209091012095945050505050565b6060604051806060016040528060328152602001613fb060329139905090565b6113e96108e0565b6001600160a01b0316336001600160a01b0316146114195760405162461bcd60e51b8152600401610a45906139fb565b306114226108e0565b6001600160a01b03161461145f57600080366040516114429291906139eb565b604051809103902090505b806114586002611857565b0361144d57505b610a9d8161213c565b60006110ec838361148460408051602081019091526000815290565b612024565b6114916108e0565b6001600160a01b0316336001600160a01b0316146114c15760405162461bcd60e51b8152600401610a45906139fb565b306114ca6108e0565b6001600160a01b03161461150757600080366040516114ea9291906139eb565b604051809103902090505b806115006002611857565b036114f557505b610a9d816121dd565b60006109048261221e565b60006001600160e01b038211156115845760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610a45565b5090565b6000806115a684611598436115fc565b6115a18661151b565b6122c8565b6001600160e01b0391821693501690505b9250929050565b80546000908015611235576115e6836115d8600184613c5e565b600091825260209091200190565b54600160201b90046001600160e01b03166110ec565b600063ffffffff8211156115845760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610a45565b60006001600160e01b03198216636e665ced60e01b148061090457506109048261246b565b60006109046116936124d6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006116e5878787876125fd565b91509150610e15816126c1565b600085815260016020819052604082209061170c88610ed7565b600781111561171d5761171d613612565b146117765760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610a45565b604080516020810190915281546001600160401b03169081905260009061179f90889086612024565b90506117ae888888848861280b565b835160000361180357866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4898884896040516117f69493929190613cd2565b60405180910390a2610ecc565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611844959493929190613cfa565b60405180910390a2979650505050505050565b60006118728254600f81810b600160801b909204900b131590565b1561189057604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546001600160801b03191692016001600160801b03169190911790915590565b60648111156119505760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610a45565b600061195a6110f3565b9050801580159061196b5750600a54155b156119cf576040805180820190915260008152600a906020810161198e8461151b565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b6119da600a83611588565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b30611a226108e0565b6001600160a01b031614611ab45760005b8451811015611ab257306001600160a01b0316858281518110611a5857611a58613c71565b60200260200101516001600160a01b031603611aa257611aa2838281518110611a8357611a83613c71565b602002602001015180519060200120600261292a90919063ffffffff16565b611aab81613d40565b9050611a33565b505b5050505050565b611ab48585858585612966565b30611ad16108e0565b6001600160a01b031614611ab457600254600f81810b600160801b909204900b1315611ab4576000600255611ab4565b60006110d385858585611b1f60408051602081019091526000815290565b6116f2565b600080611b30836129da565b90506004816007811115611b4657611b46613612565b14611b515792915050565b6000838152600c602052604090205480611b6c575092915050565b600b54604051632ab0f52960e01b8152600481018390526001600160a01b0390911690632ab0f52990602401602060405180830381865afa158015611bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd99190613d59565b15611be8575060079392505050565b600b54604051632c258a9f60e11b8152600481018390526001600160a01b039091169063584b153e90602401602060405180830381865afa158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c559190613d59565b15611c64575060059392505050565b5060029392505050565b6000438210611cbf5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610a45565b6000611cca836115fc565b84549091506000611cdd86848385612af6565b90508015611d0a57611cf4866115d8600184613c5e565b54600160201b90046001600160e01b0316611d0d565b60005b6001600160e01b03169695505050505050565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b6000611d6b61123e565b611d7a3361083b600143613c5e565b1015611de25760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610a45565b6000611df78686868680519060200120611387565b90508451865114611e1a5760405162461bcd60e51b8152600401610a4590613d7b565b8351865114611e3b5760405162461bcd60e51b8152600401610a4590613d7b565b6000865111611e8c5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610a45565b600081815260016020908152604091829020825191820190925281546001600160401b03169081905215611f0c5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610a45565b6000611f1e611f19610e56565b612b54565b611f2743612b54565b611f319190613dbc565b90506000611f40611f1961090a565b611f4a9083613dbc565b835467ffffffffffffffff19166001600160401b038416178455905060018301805467ffffffffffffffff19166001600160401b0383161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b03811115611fc257611fc261313f565b604051908082528060200260200182016040528015611ff557816020015b6060815260200190600190039081611fe05790505b508c88888e60405161200f99989796959493929190613de3565b60405180910390a15091979650505050505050565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a890604401602060405180830381865afa158015612096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e99190613aad565b600b54604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600b80546001600160a01b0319166001600160a01b0392909216919091179055565b606083156121325750816110ec565b6110ec8383612bbc565b6000811161219c5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610a45565b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b6000606461222b83610f55565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c90602401602060405180830381865afa158015612290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b49190613aad565b6122be9190613ed2565b6109049190613ef1565b82546000908190801561240e5760006122e6876115d8600185613c5e565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090871610156123675760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b65790000000000000000006044820152606401610a45565b805163ffffffff8088169116036123af5784612388886115d8600186613c5e565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790556123fe565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506124639050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050815b935093915050565b60006001600160e01b0319821663bf26d89760e01b148061249c57506001600160e01b031982166379dd796f60e01b145b806124b757506001600160e01b03198216630271189760e51b145b8061090457506301ffc9a760e01b6001600160e01b0319831614610904565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561252f57507f000000000000000000000000000000000000000000000000000000000000000046145b1561255957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561263457506000905060036126b8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612688573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126b1576000600192509250506126b8565b9150600090505b94509492505050565b60008160048111156126d5576126d5613612565b036126dd5750565b60018160048111156126f1576126f1613612565b0361273e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a45565b600281600481111561275257612752613612565b0361279f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a45565b60038160048111156127b3576127b3613612565b03610a9d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a45565b600082116128695760405162461bcd60e51b815260206004820152602560248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a206e6f2077604482015264195a59da1d60da1b6064820152608401610a45565b60008581526008602090815260408083206001600160a01b03881684529091529020546001600160801b031682116128f75760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20616c6c2060448201526a1dd95a59da1d0818d85cdd60aa1b6064820152608401610a45565b600061290283612be6565b9050815160000361291e5761291986868387612c4f565b611ab2565b611ab286868385612e2f565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b600b5460405163e38335e560e01b81526001600160a01b039091169063e38335e59034906129a1908890889088906000908990600401613b8f565b6000604051808303818588803b1580156129ba57600080fd5b505af11580156129ce573d6000803e3d6000fd5b50505050505050505050565b6000818152600160205260408120600281015460ff16156129fe5750600792915050565b6002810154610100900460ff1615612a195750600292915050565b6000612a2484610e1f565b905080600003612a765760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610a45565b438110612a87575060009392505050565b6000612a9285611249565b9050438110612aa657506001949350505050565b612aaf85613053565b8015612adb57506000858152600760205260409020546001600160801b03808216600160801b90920416115b15612aeb57506004949350505050565b506003949350505050565b60005b81831015612b4c576000612b0d84846130a3565b60008781526020902090915063ffffffff86169082015463ffffffff161115612b3857809250612b46565b612b43816001613c4b565b93505b50612af9565b509392505050565b60006001600160401b038211156115845760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610a45565b815115612bcc5781518083602001fd5b8060405162461bcd60e51b8152600401610a459190613301565b60006001600160801b038211156115845760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610a45565b60008481526008602090815260408083206001600160a01b03871684529091529020546001600160801b031615612c985760405162461bcd60e51b8152600401610a4590613f13565b60008481526008602090815260408083206001600160a01b0387168452909152902080546001600160801b0319166001600160801b03841617905560ff8116612d2b5760008481526007602052604081208054849290612d029084906001600160801b0316613f67565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612e29565b60001960ff821601612d685760008481526007602052604090208054839190601090612d02908490600160801b90046001600160801b0316613f67565b60011960ff821601612d9e5760008481526007602052604081206001018054849290612d029084906001600160801b0316613f67565b60405162461bcd60e51b815260206004820152605460248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20696e766160448201527f6c696420737570706f72742076616c75652c206d75737420626520696e636c7560648201527364656420696e20566f74655479706520656e756d60601b608482015260a401610a45565b50505050565b8051603014612e955760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20696e766160448201526b6c696420766f74654461746160a01b6064820152608401610a45565b6020818101516040808401516000888152600885528281206001600160a01b038916825290945290832054608083811c946001600160801b03948516949390911c92909116908183612ee78688613c4b565b612ef19190613c4b565b612efb9190613c4b565b9050866001600160801b0316811115612f265760405162461bcd60e51b8152600401610a4590613f13565b60008981526008602090815260408083206001600160a01b038c168452825280832080546001600160801b0319166001600160801b03868116919091179091558c8452600783529281902081516060808201845282548087168352600160801b900486169482019490945260019190910154909316838201528051918201905281518190612fb5908990613f67565b6001600160801b03168152602001868360200151612fd39190613f67565b6001600160801b03168152602001858360400151612ff19190613f67565b6001600160801b0390811690915260009b8c526007602090815260409c8d90208351918401518316600160801b0291831691909117815591909b01516001909101805491909b166001600160801b031990911617909955505050505050505050565b600081815260076020526040812060018101548154613085916001600160801b0390811691600160801b900416613f67565b6001600160801b031661309a6108a785610e1f565b11159392505050565b60006130b26002848418613ef1565b6110ec90848416613c4b565b6000602082840312156130d057600080fd5b81356001600160e01b0319811681146110ec57600080fd5b803560ff811681146130f957600080fd5b919050565b60008083601f84011261311057600080fd5b5081356001600160401b0381111561312757600080fd5b6020830191508360208285010111156115b757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561317d5761317d61313f565b604052919050565b60006001600160401b0383111561319e5761319e61313f565b6131b1601f8401601f1916602001613155565b90508281528383830111156131c557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126131ed57600080fd5b6110ec83833560208501613185565b60008060008060008060008060e0898b03121561321857600080fd5b8835975061322860208a016130e8565b965060408901356001600160401b038082111561324457600080fd5b6132508c838d016130fe565b909850965060608b013591508082111561326957600080fd5b506132768b828c016131dc565b94505061328560808a016130e8565b925060a0890135915060c089013590509295985092959890939650565b6000602082840312156132b457600080fd5b5035919050565b6000815180845260005b818110156132e1576020818501810151868301820152016132c5565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110ec60208301846132bb565b6001600160a01b0381168114610a9d57600080fd5b6000806000806080858703121561333f57600080fd5b843561334a81613314565b9350602085013561335a81613314565b92506040850135915060608501356001600160401b0381111561337c57600080fd5b613388878288016131dc565b91505092959194509250565b60006001600160401b038211156133ad576133ad61313f565b5060051b60200190565b600082601f8301126133c857600080fd5b813560206133dd6133d883613394565b613155565b82815260059290921b840181019181810190868411156133fc57600080fd5b8286015b8481101561342057803561341381613314565b8352918301918301613400565b509695505050505050565b600082601f83011261343c57600080fd5b8135602061344c6133d883613394565b82815260059290921b8401810191818101908684111561346b57600080fd5b8286015b84811015613420578035835291830191830161346f565b600082601f83011261349757600080fd5b813560206134a76133d883613394565b82815260059290921b840181019181810190868411156134c657600080fd5b8286015b848110156134205780356001600160401b038111156134e95760008081fd5b6134f78986838b01016131dc565b8452509183019183016134ca565b6000806000806080858703121561351b57600080fd5b84356001600160401b038082111561353257600080fd5b61353e888389016133b7565b9550602087013591508082111561355457600080fd5b6135608883890161342b565b9450604087013591508082111561357657600080fd5b5061358387828801613486565b949793965093946060013593505050565b600080604083850312156135a757600080fd5b8235915060208301356135b981613314565b809150509250929050565b600080600080600060a086880312156135dc57600080fd5b853594506135ec602087016130e8565b93506135fa604087016130e8565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061364a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561366357600080fd5b82359150613673602084016130e8565b90509250929050565b60008060008060006080868803121561369457600080fd5b853594506136a4602087016130e8565b935060408601356001600160401b03808211156136c057600080fd5b6136cc89838a016130fe565b909550935060608801359150808211156136e557600080fd5b506136f2888289016131dc565b9150509295509295909350565b6000806000806060858703121561371557600080fd5b84359350613725602086016130e8565b925060408501356001600160401b0381111561374057600080fd5b61374c878288016130fe565b95989497509550505050565b6000806000806080858703121561376e57600080fd5b84356001600160401b038082111561378557600080fd5b613791888389016133b7565b955060208701359150808211156137a757600080fd5b6137b38883890161342b565b945060408701359150808211156137c957600080fd5b6137d588838901613486565b935060608701359150808211156137eb57600080fd5b508501601f810187136137fd57600080fd5b61338887823560208401613185565b60008060006060848603121561382157600080fd5b833561382c81613314565b92506020840135915060408401356001600160401b0381111561384e57600080fd5b61385a868287016131dc565b9150509250925092565b60006020828403121561387657600080fd5b81356110ec81613314565b600080600080600060a0868803121561389957600080fd5b85356138a481613314565b945060208601356138b481613314565b935060408601356001600160401b03808211156138d057600080fd5b6138dc89838a0161342b565b945060608801359150808211156138f257600080fd5b6138fe89838a0161342b565b935060808801359150808211156136e557600080fd5b6000806000806060858703121561392a57600080fd5b843561393581613314565b93506020850135925060408501356001600160401b0381111561374057600080fd5b6000806040838503121561396a57600080fd5b823561397581613314565b946020939093013593505050565b600080600080600060a0868803121561399b57600080fd5b85356139a681613314565b945060208601356139b681613314565b9350604086013592506060860135915060808601356001600160401b038111156139df57600080fd5b6136f2888289016131dc565b8183823760009101908152919050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c90821680613a4657607f821691505b602082108103613a6657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756040820152601b60fa1b606082015260800190565b600060208284031215613abf57600080fd5b5051919050565b600081518084526020808501945080840160005b83811015613aff5781516001600160a01b031687529582019590820190600101613ada565b509495945050505050565b600081518084526020808501945080840160005b83811015613aff57815187529582019590820190600101613b1e565b600081518084526020808501808196508360051b8101915082860160005b85811015613b82578284038952613b708483516132bb565b98850198935090840190600101613b58565b5091979650505050505050565b60a081526000613ba260a0830188613ac6565b8281036020840152613bb48188613b0a565b90508281036040840152613bc88187613b3a565b60608401959095525050608001529392505050565b60c081526000613bf060c0830189613ac6565b8281036020840152613c028189613b0a565b90508281036040840152613c168188613b3a565b60608401969096525050608081019290925260a0909101529392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561090457610904613c35565b8181038181111561090457610904613c35565b634e487b7160e01b600052603260045260246000fd5b608081526000613c9a6080830187613ac6565b8281036020840152613cac8187613b0a565b90508281036040840152613cc08186613b3a565b91505082606083015295945050505050565b84815260ff841660208201528260408201526080606082015260006110bb60808301846132bb565b85815260ff8516602082015283604082015260a060608201526000613d2260a08301856132bb565b8281036080840152613d3481856132bb565b98975050505050505050565b600060018201613d5257613d52613c35565b5060010190565b600060208284031215613d6b57600080fd5b815180151581146110ec57600080fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b6001600160401b03818116838216019080821115613ddc57613ddc613c35565b5092915050565b60006101208b8352602060018060a01b038c1681850152816040850152613e0c8285018c613ac6565b91508382036060850152613e20828b613b0a565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015613e7157601f19878403018552613e5f8383516132bb565b94860194925090850190600101613e43565b505086810360a0880152613e85818c613b3a565b945050505050613ea060c08401876001600160401b03169052565b6001600160401b03851660e0840152828103610100840152613ec281856132bb565b9c9b505050505050505050505050565b6000816000190483118215151615613eec57613eec613c35565b500290565b600082613f0e57634e487b7160e01b600052601260045260246000fd5b500490565b60208082526034908201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20766f7465604082015273081ddbdd5b1908195e18d95959081dd95a59da1d60621b606082015260800190565b6001600160801b03818116838216019080821115613ddc57613ddc613c3556fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e26706172616d733d6672616374696f6e616ca264697066735822122087fd5ffd58c1d7c8eaae89359e4a22a361e5c4fb27940942ad1053ffa8ea13e064736f6c6343000810003360a06040523480156200001157600080fd5b5060405162000bdb38038062000bdb83398101604081905262000034916200017b565b6040518060400160405280600881526020016711985ad9481554d160c21b81525060405180604001604052806004815260200163199554d160e21b815250816003908162000083919062000257565b50600462000092828262000257565b50505060ff8116608052620000a83383620000b0565b50506200034b565b6001600160a01b0382166200010b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011f919062000323565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600080604083850312156200018f57600080fd5b82519150602083015160ff81168114620001a857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001de57607f821691505b602082108103620001ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017657600081815260208120601f850160051c810160208610156200022e5750805b601f850160051c820191505b818110156200024f578281556001016200023a565b505050505050565b81516001600160401b03811115620002735762000273620001b3565b6200028b81620002848454620001c9565b8462000205565b602080601f831160018114620002c35760008415620002aa5750858301515b600019600386901b1c1916600185901b1785556200024f565b600085815260208120601f198616915b82811015620002f457888601518255948401946001909101908401620002d3565b5085821015620003135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200034557634e487b7160e01b600052601160045260246000fd5b92915050565b60805161087462000367600039600061011b01526108746000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461014557806370a082311461015857806395d89b4114610181578063a457c2d714610189578063a9059cbb1461019c578063dd62ed3e146101af57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c2565b6040516100c391906106be565b60405180910390f35b6100df6100da366004610728565b610254565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610752565b61026e565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6100df610153366004610728565b610292565b6100f361016636600461078e565b6001600160a01b031660009081526020819052604090205490565b6100b66102b4565b6100df610197366004610728565b6102c3565b6100df6101aa366004610728565b610343565b6100f36101bd3660046107b0565b610351565b6060600380546101d1906107e3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906107e3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561037c565b60019150505b92915050565b60003361027c8582856104a0565b61028785858561051a565b506001949350505050565b6000336102628185856102a58383610351565b6102af919061081d565b61037c565b6060600480546101d1906107e3565b600033816102d18286610351565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610287828686840361037c565b60003361026281858561051a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ac8484610351565b9050600019811461051457818110156105075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b610514848484840361037c565b50505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b038316600090815260208190526040902054818110156106585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610514565b600060208083528351808285015260005b818110156106eb578581018301518582016040015282016106cf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072357600080fd5b919050565b6000806040838503121561073b57600080fd5b6107448361070c565b946020939093013593505050565b60008060006060848603121561076757600080fd5b6107708461070c565b925061077e6020850161070c565b9150604084013590509250925092565b6000602082840312156107a057600080fd5b6107a98261070c565b9392505050565b600080604083850312156107c357600080fd5b6107cc8361070c565b91506107da6020840161070c565b90509250929050565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026857634e487b7160e01b600052601160045260246000fdfea2646970667358221220b7dc9271d9a93920669b0b926315cd06a37868c78b9f301594f68cace1b4040464736f6c6343000810003360a06040523480156200001157600080fd5b5060405162000bdb38038062000bdb83398101604081905262000034916200017b565b6040518060400160405280600881526020016746616b652042544360c01b815250604051806040016040528060048152602001636642544360e01b815250816003908162000083919062000257565b50600462000092828262000257565b50505060ff8116608052620000a83383620000b0565b50506200034b565b6001600160a01b0382166200010b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011f919062000323565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600080604083850312156200018f57600080fd5b82519150602083015160ff81168114620001a857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001de57607f821691505b602082108103620001ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017657600081815260208120601f850160051c810160208610156200022e5750805b601f850160051c820191505b818110156200024f578281556001016200023a565b505050505050565b81516001600160401b03811115620002735762000273620001b3565b6200028b81620002848454620001c9565b8462000205565b602080601f831160018114620002c35760008415620002aa5750858301515b600019600386901b1c1916600185901b1785556200024f565b600085815260208120601f198616915b82811015620002f457888601518255948401946001909101908401620002d3565b5085821015620003135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200034557634e487b7160e01b600052601160045260246000fd5b92915050565b60805161087462000367600039600061011b01526108746000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461014557806370a082311461015857806395d89b4114610181578063a457c2d714610189578063a9059cbb1461019c578063dd62ed3e146101af57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c2565b6040516100c391906106be565b60405180910390f35b6100df6100da366004610728565b610254565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610752565b61026e565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6100df610153366004610728565b610292565b6100f361016636600461078e565b6001600160a01b031660009081526020819052604090205490565b6100b66102b4565b6100df610197366004610728565b6102c3565b6100df6101aa366004610728565b610343565b6100f36101bd3660046107b0565b610351565b6060600380546101d1906107e3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906107e3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561037c565b60019150505b92915050565b60003361027c8582856104a0565b61028785858561051a565b506001949350505050565b6000336102628185856102a58383610351565b6102af919061081d565b61037c565b6060600480546101d1906107e3565b600033816102d18286610351565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610287828686840361037c565b60003361026281858561051a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ac8484610351565b9050600019811461051457818110156105075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b610514848484840361037c565b50505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b038316600090815260208190526040902054818110156106585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610514565b600060208083528351808285015260005b818110156106eb578581018301518582016040015282016106cf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072357600080fd5b919050565b6000806040838503121561073b57600080fd5b6107448361070c565b946020939093013593505050565b60008060006060848603121561076757600080fd5b6107708461070c565b925061077e6020850161070c565b9150604084013590509250925092565b6000602082840312156107a057600080fd5b6107a98261070c565b9392505050565b600080604083850312156107c357600080fd5b6107cc8361070c565b91506107da6020840161070c565b90509250929050565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026857634e487b7160e01b600052601160045260246000fdfea26469706673582212205ce394ec17e079ac109b07ce82e5259a65e58b77e131be7a3095da0ee09880c764736f6c6343000810003357726f6e6720616d6f756e74206f6620757365722773206655534420616674657220627579696e6757726f6e6720616d6f756e74206f662075736572277320665553442061667465722072656465656d696e67206c69717569646974790000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d57726f6e6720616d6f756e74206f662075736572277320664254432061667465722072656465656d696e67206c6971756964697479546f6b656e20616d6f756e742073686f756c64207374696c6c206265207468652073616d6557726f6e6720616d6f756e74206f6620757365722773204c5020546f6b656e732061667465722073656c6c696e6757726f6e6720616d6f756e74206f6620757365722773204c5020546f6b656e7320616674657220627579696e6757726f6e6720616d6f756e74206f6620757365722773206642544320616674657220627579696e6757726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656c6c696e6757726f6e6720616d6f756e74206f6620757365722773204c502061667465722073656e64696e67206c697175696469747957726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e7320616674657220627579696e67546f6b656e20616d6f756e742073686f756c642062652074686520696e697469616c57726f6e6720616d6f756e74206f6620746f6b656e732073656e7420746f2074686520706f6f6c57726f6e6720616d6f756e74206f662044414f2773204c5020746f6b656e732061667465722072656465656d696e67206c69717569646974795468652075736572206469646e2774207265636569766520746865697220696e697469616c2031303030206655534457726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656e64696e67206c69717569646974795468652075736572206469646e2774207265636569766520746865697220696e697469616c2031303030206642544357726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656c6c696e6757726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656e64696e67206c697175696469747957726f6e6720616d6f756e74206f6620696e697469616c204c5020546f6b656e7357726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e732061667465722073656c6c696e6757726f6e6720616d6f756e74206f6620757365722773204c5020746f6b656e732061667465722072656465656d696e67206c697175696469747955736572206973206e6f74207374617274696e6720776974682030204c5020746f6b656e735468652044414f206973206e6f74207374617274696e6720776974682030204c5020746f6b656e73a26469706673582212203b3ce66cfec0e6e9fdd9d0040f6f55f82d726fda2fca6ec5ab74827e454b2a5d64736f6c63430008100033",
    "sourceMap": "544:8730:81:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;1594:4;1572:26;;;544:8730:81;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001215760003560e01c80636694c06c11620000af578063c45a0155116200007a578063c45a0155146200020a578063d33219b4146200021e578063f2475ed01462000232578063f9c6b5681462000246578063fa7626d4146200025057600080fd5b80636694c06c14620001bd57806374a9f16514620001d1578063b9d35e7814620001db578063ba414fa614620001ef57600080fd5b806329e8d78811620000f057806329e8d788146200018157806331c42ca6146200018b5780634162169f14620001955780634755abbb14620001a957600080fd5b8063094e23f914620001265780630a9254e414620001575780630b586cc8146200016357806316f0115b146200016d575b600080fd5b6016546200013a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620001616200025e565b005b6200016162001001565b6013546200013a906001600160a01b031681565b6200016162001546565b62000161620020a6565b6017546200013a906001600160a01b031681565b601b546200013a906001600160a01b031681565b601a546200013a906001600160a01b031681565b62000161620025e9565b6015546200013a906001600160a01b031681565b620001f962002a31565b60405190151581526020016200014e565b6014546200013a906001600160a01b031681565b6018546200013a906001600160a01b031681565b6019546200013a906001600160a01b031681565b6200016162002b5c565b600054620001f99060ff1681565b68056bc75e2d631000006040516200027690620034e7565b908152602001604051809103906000f08015801562000299573d6000803e3d6000fd5b50601980546001600160a01b0319166001600160a01b039290921691821790556040516370a0823160e01b81523060048201526200034991906370a0823190602401602060405180830381865afa158015620002f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200031f919062003557565b68056bc75e2d6310000060405180606001604052806021815260200162016b9b6021913962003267565b60006040516200035990620034f5565b604051809103906000f08015801562000376573d6000803e3d6000fd5b5090506000604051620003899062003503565b604051809103906000f080158015620003a6573d6000803e3d6000fd5b5090506000604051620003b99062003511565b604051809103906000f080158015620003d6573d6000803e3d6000fd5b50905030838383604051620003eb906200351f565b620003fa949392919062003571565b604051809103906000f08015801562000417573d6000803e3d6000fd5b50601880546001600160a01b0319166001600160a01b039283169081179091556019546040519216916200044b906200352d565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200047f573d6000803e3d6000fd5b50601780546001600160a01b0319166001600160a01b03928316908117909155601854604051632f2ff15d60e01b81527fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc16004820152602481019290925290911690632f2ff15d90604401600060405180830381600087803b1580156200050557600080fd5b505af11580156200051a573d6000803e3d6000fd5b5050601854601754604051632f2ff15d60e01b81527fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6360048201526001600160a01b03918216602482015291169250632f2ff15d9150604401600060405180830381600087803b1580156200058e57600080fd5b505af1158015620005a3573d6000803e3d6000fd5b50505050601860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006219190620035b5565b601480546001600160a01b03199081166001600160a01b0393841617909155601854601a8054919093169116179055604051683635c9adc5dea00000906012906200066c906200353b565b91825260ff166020820152604001604051809103906000f08015801562000697573d6000803e3d6000fd5b50601660006101000a8154816001600160a01b0302191690836001600160a01b03160217905550683635c9adc5dea000006012604051620006d89062003549565b91825260ff166020820152604001604051809103906000f08015801562000703573d6000803e3d6000fd5b50601580546001600160a01b0319166001600160a01b0392831690811790915560145460165460405163e343361560e01b8152908416600482015260248101929092529091169063e3433615906044016020604051808303816000875af115801562000773573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007999190620035b5565b601380546001600160a01b0319166001600160a01b0392909216919091179055604051630618f58760e51b815263ced6e79560e01b6004820152600080516020620168a98339815191529063c31eb0e090602401600060405180830381600087803b1580156200080857600080fd5b505af11580156200081d573d6000803e3d6000fd5b505060135460405163e3412e3d60e01b81523060048201526001600160a01b03909116925063e3412e3d9150602401600060405180830381600087803b1580156200086757600080fd5b505af11580156200087c573d6000803e3d6000fd5b505050506200098d601360009054906101000a90046001600160a01b03166001600160a01b0316635fcbd2856040518163ffffffff1660e01b8152600401602060405180830381865afa158015620008d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008fe9190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096b919062003557565b600060405180606001604052806025815260200162016c236025913962003267565b60135460408051635fcbd28560e01b8152905162000a92926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a009190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562000a4a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a70919062003557565b600060405180606001604052806028815260200162016c486028913962003267565b6016546040516370a0823160e01b815230600482015262000b2e916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000ade573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b04919062003557565b683635c9adc5dea000006040518060600160405280602f815260200162016aae602f913962003267565b6015546040516370a0823160e01b815230600482015262000bca916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000b7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ba0919062003557565b683635c9adc5dea000006040518060600160405280602f815260200162016b10602f913962003267565b60165460135460405163a9059cbb60e01b81526001600160a01b0391821660048201526825f273933db5700000602482015291169063a9059cbb906044016020604051808303816000875af115801562000c28573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c4e9190620035dc565b5060155460135460405163a9059cbb60e01b81526001600160a01b0391821660048201526825f273933db5700000602482015291169063a9059cbb906044016020604051808303816000875af115801562000cad573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cd39190620035dc565b5060135460405163e3412e3d60e01b81523060048201526001600160a01b039091169063e3412e3d90602401600060405180830381600087803b15801562000d1a57600080fd5b505af115801562000d2f573d6000803e3d6000fd5b50506016546040516370a0823160e01b815230600482015262000dd193506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562000d81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000da7919062003557565b681043561a882930000060405180606001604052806033815260200162016add6033913962003267565b6015546040516370a0823160e01b815230600482015262000e6d916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000e1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e43919062003557565b681043561a882930000060405180606001604052806033815260200162016b686033913962003267565b60135460408051635fcbd28560e01b8152905162000ffc926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa15801562000eba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ee09190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000f27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f4d919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fa1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fc7919062003557565b62000fdc906825f273933db570000062003616565b604051806060016040528060318152602001620169cf6031913962003267565b505050565b60155460135460405163a9059cbb60e01b81526001600160a01b039182166004820152678d84be94335fd002602482015291169063a9059cbb906044016020604051808303816000875af11580156200105e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010849190620035dc565b5060005b600a8110156200110657601354604051623438dd60e41b81523060048201526001600160a01b03909116906303438dd090602401600060405180830381600087803b158015620010d757600080fd5b505af1158015620010ec573d6000803e3d6000fd5b505050508080620010fd9062003632565b91505062001088565b5060135460155460405163712b772f60e01b81526001600160a01b03918216600482015230602482015291169063712b772f90604401600060405180830381600087803b1580156200115757600080fd5b505af11580156200116c573d6000803e3d6000fd5b50506016546040516370a0823160e01b81523060048201526200120e93506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620011be573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011e4919062003557565b6810ce1d3d8cb31800006040518060600160405280602881526020016201684c6028913962003267565b6015546040516370a0823160e01b8152306004820152620012aa916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001280919062003557565b680fb5d15bf3f5d02ffe6040518060600160405280602881526020016201697e6028913962003267565b60135460408051635fcbd28560e01b8152905162001439926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620012f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200131d9190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562001364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200138a919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa158015620013de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001404919062003557565b62001419906825f273933db570000062003616565b6040518060600160405280602d815260200162016951602d913962003267565b60135460408051635fcbd28560e01b8152905162001544926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa15801562001486573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014ac9190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015620014f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200151c919062003557565b660933cc26d05bb26040518060600160405280602c815260200162016a00602c913962003267565b565b6019546040516370a0823160e01b8152306004820152620015fe916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001592573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015b8919062003557565b68056bc75e2d631000006040518060400160405280601f81526020017f57726f6e6720616d6f756e74206f6620746f6b656e732072656365697665640081525062003267565b436000036200166a576040516301f7b4f360e41b8152600a6004820152600080516020620168a983398151915290631f7b4f3090602401600060405180830381600087803b1580156200165057600080fd5b505af115801562001665573d6000803e3d6000fd5b505050505b60405130602482015260009060440160408051808303601f1901815291815260208201805163215b9af360e11b6001600160e01b039091161790528051600180825281830190925291925060009190816020016020820280368337505060408051600180825281830190925292935060009291506020808301908036833750506040805160018082528183019092529293506000929150602082015b60608152602001906001900390816200170657505060145484519192506001600160a01b03169084906000906200174157620017416200364e565b60200260200101906001600160a01b031690816001600160a01b0316815250506000826000815181106200177957620017796200364e565b60200260200101818152505083816000815181106200179c576200179c6200364e565b60209081029190910101526019546040516317066a5760e21b81523060048201526001600160a01b0390911690635c19a95c90602401600060405180830381600087803b158015620017ed57600080fd5b505af115801562001802573d6000803e3d6000fd5b50506040516301f7b4f360e41b8152600a6004820152600080516020620168a98339815191529250631f7b4f309150602401600060405180830381600087803b1580156200184f57600080fd5b505af115801562001864573d6000803e3d6000fd5b5050601754604051633eaf40f160e11b8152600093506001600160a01b039091169150637d5e81e290620018a19087908790879060040162003789565b6020604051808303816000875af1158015620018c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018e7919062003557565b601754604051631f27a4f360e11b8152600481018390529192506200197b916001600160a01b0390911690633e4f49e690602401602060405180830381865afa15801562001939573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200195f919062003819565b60078111156200197357620019736200383c565b6000620032af565b601754604051632d63f69360e01b815260048101839052600080516020620168a983398151915291631f7b4f30916001600160a01b0390911690632d63f69390602401602060405180830381865afa158015620019dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a02919062003557565b62001a0f90600a62003852565b6040518263ffffffff1660e01b815260040162001a2e91815260200190565b600060405180830381600087803b15801562001a4957600080fd5b505af115801562001a5e573d6000803e3d6000fd5b5050601754604051631f27a4f360e11b81526004810185905262001af393506001600160a01b039091169150633e4f49e690602401602060405180830381865afa15801562001ab1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad7919062003819565b600781111562001aeb5762001aeb6200383c565b6001620032af565b601754604051630acf027160e31b815260048101839052600160248201526001600160a01b03909116906356781388906044016020604051808303816000875af115801562001b46573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b6c919062003557565b506040516301f7b4f360e41b81526207a1206004820152600080516020620168a983398151915290631f7b4f3090602401600060405180830381600087803b15801562001bb857600080fd5b505af115801562001bcd573d6000803e3d6000fd5b5050601754604051631f27a4f360e11b81526004810185905262001c6293506001600160a01b039091169150633e4f49e690602401602060405180830381865afa15801562001c20573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c46919062003819565b600781111562001c5a5762001c5a6200383c565b6004620032af565b60175460405163160cbed760e01b81526001600160a01b039091169063160cbed79062001cba908790879087907fe343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec9060040162003868565b6020604051808303816000875af115801562001cda573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d00919062003557565b50601754604051631f27a4f360e11b81526004810183905262001d90916001600160a01b031690633e4f49e690602401602060405180830381865afa15801562001d4e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d74919062003819565b600781111562001d885762001d886200383c565b6005620032af565b6040516372eb5f8160e11b81526213d6206004820152600080516020620168a98339815191529063e5d6bf0290602401600060405180830381600087803b15801562001ddb57600080fd5b505af115801562001df0573d6000803e3d6000fd5b5050601754604051632656227d60e01b81526001600160a01b039091169250632656227d915062001e4c908790879087907fe343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec9060040162003868565b6020604051808303816000875af115801562001e6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e92919062003557565b50601754604051631f27a4f360e11b81526004810183905262001f22916001600160a01b031690633e4f49e690602401602060405180830381865afa15801562001ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f06919062003819565b600781111562001f1a5762001f1a6200383c565b6007620032af565b6040516372eb5f8160e11b815262155cc06004820152600080516020620168a98339815191529063e5d6bf0290602401600060405180830381600087803b15801562001f6d57600080fd5b505af115801562001f82573d6000803e3d6000fd5b50506014546016546015546019546040516344a7b4c960e01b81526001600160a01b0394851696506344a7b4c9955062001fcd94938416939283169290911690309060040162003571565b600060405180830381600087803b15801562001fe857600080fd5b505af115801562001ffd573d6000803e3d6000fd5b50506019546040516370a0823160e01b81523060048201526200209f93506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156200204f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002075919062003557565b68056bc75e2d6310000060405180606001604052806022815260200162016a2c6022913962003267565b5050505050565b60165460135460405163a9059cbb60e01b81526001600160a01b039182166004820152678d84be94335fd002602482015291169063a9059cbb906044016020604051808303816000875af115801562002103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021299190620035dc565b5060005b6009811015620021ab57601354604051623438dd60e41b81523060048201526001600160a01b03909116906303438dd090602401600060405180830381600087803b1580156200217c57600080fd5b505af115801562002191573d6000803e3d6000fd5b505050508080620021a29062003632565b9150506200212d565b5060135460165460405163712b772f60e01b81526001600160a01b03918216600482015230602482015291169063712b772f90604401600060405180830381600087803b158015620021fc57600080fd5b505af115801562002211573d6000803e3d6000fd5b50506016546040516370a0823160e01b8152306004820152620022b393506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562002263573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002289919062003557565b680fb5d15bf3f5d02ffe604051806060016040528060298152602001620169a66029913962003267565b6015546040516370a0823160e01b81523060048201526200234f916001600160a01b0316906370a0823190602401602060405180830381865afa158015620022ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002325919062003557565b6810ce1d3d8cb318000060405180606001604052806029815260200162016b3f6029913962003267565b60135460408051635fcbd28560e01b81529051620024de926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa1580156200239c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c29190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562002409573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200242f919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002483573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024a9919062003557565b620024be906825f273933db570000062003616565b6040518060600160405280602e815260200162016923602e913962003267565b60135460408051635fcbd28560e01b8152905162001544926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa1580156200252b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025519190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156200259b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025c1919062003557565b660933cc26d05bb26040518060600160405280602d815260200162016bbc602d913962003267565b60195460135460405163a9059cbb60e01b81526001600160a01b0391821660048201526802b5e3af16b1880000602482015291169063a9059cbb906044016020604051808303816000875af115801562002647573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200266d9190620035dc565b506019546040516370a0823160e01b81523060048201526200270a916001600160a01b0316906370a0823190602401602060405180830381865afa158015620026ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026e0919062003557565b6802b5e3af16b188000060405180606001604052806027815260200162016a4e6027913962003267565b60405163f28dceb360e01b815260206004820152609460248201527f416363657373436f6e74726f6c3a206163636f756e742030783766613933383560448201527f626531303261633365616332393734383364643632333364363262336531343960648201527f36206973206d697373696e6720726f6c6520307836626536323639666365303860848201527f653734623066666165666262303739376531633965623032643466323235326460a482015273039373432306530616538376639396132346663360641b60c4820152600080516020620168a98339815191529063f28dceb39060e401600060405180830381600087803b1580156200280f57600080fd5b505af115801562002824573d6000803e3d6000fd5b50506014546016546015546019546040516344a7b4c960e01b81526001600160a01b0394851696506344a7b4c995506200286f94938416939283169290911690309060040162003571565b600060405180830381600087803b1580156200288a57600080fd5b505af11580156200289f573d6000803e3d6000fd5b50506019546040516370a0823160e01b81523060048201526200294193506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620028f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002917919062003557565b6802b5e3af16b1880000604051806060016040528060258152602001620168fe6025913962003267565b60405163f28dceb360e01b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152600080516020620168a98339815191529063f28dceb390606401600060405180830381600087803b158015620029b757600080fd5b505af1158015620029cc573d6000803e3d6000fd5b505060145460405163215b9af360e11b81523060048201526001600160a01b0390911692506342b735e69150602401600060405180830381600087803b15801562002a1657600080fd5b505af115801562002a2b573d6000803e3d6000fd5b50505050565b60008054610100900460ff161562002a525750600054610100900460ff1690565b6000600080516020620168a98339815191523b1562002b575760408051600080516020620168a9833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162002ad9917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620038b9565b60408051601f198184030181529082905262002af591620038ec565b6000604051808303816000865af19150503d806000811462002b34576040519150601f19603f3d011682016040523d82523d6000602084013e62002b39565b606091505b509150508080602001905181019062002b539190620035dc565b9150505b919050565b604051630618f58760e51b815263ced6e79560e01b6004820152600080516020620168a98339815191529063c31eb0e090602401600060405180830381600087803b15801562002bab57600080fd5b505af115801562002bc0573d6000803e3d6000fd5b5050601354604051627d0bab60e91b81523060048201526001600160a01b03909116925063fa175600915060240160408051808303816000875af115801562002c0d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c3391906200390a565b5050601360009054906101000a90046001600160a01b03166001600160a01b0316635fcbd2856040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002c89573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002caf9190620035b5565b601354604080516321b77d6360e01b815290516001600160a01b039384169363a9059cbb93169182916321b77d63916004808201926020929091908290030181865afa15801562002d04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d2a919062003557565b62002d3f906825f273933db570000062003616565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801562002d8b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002db19190620035dc565b50601354604051627d0bab60e91b81523060048201526001600160a01b039091169063fa1756009060240160408051808303816000875af115801562002dfb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e2191906200390a565b50506016546040516370a0823160e01b815230600482015262002f44916001600160a01b0316906370a0823190602401602060405180830381865afa15801562002e6f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e95919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002ee9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f0f919062003557565b62002f2490683635c9adc5dea0000062003616565b604051806060016040528060358152602001620168746035913962003267565b6015546040516370a0823160e01b815230600482015262003065916001600160a01b0316906370a0823190602401602060405180830381865afa15801562002f90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fb6919062003557565b601360009054906101000a90046001600160a01b03166001600160a01b03166321b77d636040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200300a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003030919062003557565b6200304590683635c9adc5dea0000062003616565b604051806060016040528060358152602001620168c96035913962003267565b60135460408051635fcbd28560e01b8152905162003167926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620030b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620030d89190620035b5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156200311f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003145919062003557565b60006040518060600160405280603a815260200162016be9603a913962003267565b60135460408051635fcbd28560e01b8152905162001544926001600160a01b031691635fcbd2859160048083019260209291908290030181865afa158015620031b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620031da9190620035b5565b601a546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801562003224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200324a919062003557565b600060405180606001604052806039815260200162016a75603991395b81831462000ffc577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620032a091906200392f565b60405180910390a162000ffc83835b808214620033da577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620033229060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1620033da620033de565b5050565b600080516020620168a98339815191523b15620034d65760408051600080516020620168a9833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620034719291602001620038b9565b60408051601f19818403018152908290526200348d91620038ec565b6000604051808303816000865af19150503d8060008114620034cc576040519150601f19603f3d011682016040523d82523d6000602084013e620034d1565b606091505b505050505b6000805461ff001916610100179055565b61293b806200396183390190565b6155be806200629c83390190565b611032806200b85a83390190565b610420806200c88c83390190565b613987806200ccac83390190565b614a63806201063383390190565b610bdb806201509683390190565b610bdb8062015c7183390190565b6000602082840312156200356a57600080fd5b5051919050565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6001600160a01b0381168114620035b257600080fd5b50565b600060208284031215620035c857600080fd5b8151620035d5816200359c565b9392505050565b600060208284031215620035ef57600080fd5b81518015158114620035d557600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156200362c576200362c62003600565b92915050565b60006001820162003647576200364762003600565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156200369f5781516001600160a01b03168752958201959082019060010162003678565b509495945050505050565b600081518084526020808501945080840160005b838110156200369f57815187529582019590820190600101620036be565b60005b83811015620036f9578181015183820152602001620036df565b50506000910152565b600081518084526200371c816020860160208601620036dc565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156200377c5782840389526200376984835162003702565b988501989350908401906001016200374e565b5091979650505050505050565b6080815260006200379e608083018662003664565b8281036020840152620037b28186620036aa565b90508281036040840152620037c8818562003730565b838103606094850152602881527f4772616e742070726976696c6567657320746f207265636f76657220737475636020820152676b20746f6b656e7360c01b60408201529290920195945050505050565b6000602082840312156200382c57600080fd5b815160088110620035d557600080fd5b634e487b7160e01b600052602160045260246000fd5b808201808211156200362c576200362c62003600565b6080815260006200387d608083018762003664565b8281036020840152620038918187620036aa565b90508281036040840152620038a7818662003730565b91505082606083015295945050505050565b6001600160e01b0319831681528151600090620038de816004850160208701620036dc565b919091016004019392505050565b6000825162003900818460208701620036dc565b9190910192915050565b600080604083850312156200391e57600080fd5b505080516020909101519092909150565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620035d560808301846200370256fe6101406040523480156200001257600080fd5b506040516200293b3803806200293b83398101604081905262000035916200088e565b6040518060400160405280600e81526020016d29ba30b4b92bb0bc902a37b5b2b760911b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600e81526020016d29ba30b4b92bb0bc902a37b5b2b760911b8152506040518060400160405280600381526020016229aa2960e91b8152508160039081620000cb91906200094c565b506004620000da82826200094c565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200017a90503382620002d0565b5042600b55604080516060808201835269021e19e0c9bab2400000808352600a6020808501828152600086880181815273f39fd6e51aad88f6f4ce6ab8827279cfffb92266825284845296517f3eaabfacbcd0b91fc8b2264267784effa152bcd0ae18c28a9924d0385d593b0c5590517f3eaabfacbcd0b91fc8b2264267784effa152bcd0ae18c28a9924d0385d593b0d5594517f3eaabfacbcd0b91fc8b2264267784effa152bcd0ae18c28a9924d0385d593b0e5585519384018652918352828201818152948301848152737fa9385be102ac3eac297483dd6233d62b3e14969094529052517f2d54905f2886c13936added7edccb32207862f31b1e49ad77f933216b98487225590517f2d54905f2886c13936added7edccb32207862f31b1e49ad77f933216b984872355517f2d54905f2886c13936added7edccb32207862f31b1e49ad77f933216b98487245562000a5a565b620002e78282620002eb60201b62000baf1760201c565b5050565b620003028282620003a260201b62000c3f1760201c565b6001600160e01b03620003166200046f8216565b1115620003835760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b6200039c600962000d0a6200047560201b17836200048c565b50505050565b6001600160a01b038216620003fa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200037a565b80600260008282546200040e919062000a2e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620002e76000838362000623565b60025490565b600062000483828462000a2e565b90505b92915050565b82546000908190818115620004ec57620004bb87620004ad60018562000a44565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015262000501565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506200051f84868860201c565b9250600082118015620005385750805163ffffffff1643145b156200058f5762000554836200063b60201b62000d161760201c565b6200056688620004ad60018662000a44565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905562000614565b866040518060400160405280620005b143620006aa60201b62000d831760201c565b63ffffffff168152602001620005d2866200063b60201b62000d161760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b6200061e8383836200071160201b62000de81760201c565b60006001600160e01b03821115620006a65760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016200037a565b5090565b600063ffffffff821115620006a65760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016200037a565b620007298383836200061e60201b620008611760201c565b6001600160a01b038381166000908152600760205260408082205485841683529120546200061e92918216911683818314801590620007685750600081115b156200061e576001600160a01b03831615620007f5576001600160a01b038316600090815260086020908152604082208291620007b2919062000880901b62000e1a17856200048c565b91509150846001600160a01b03166000805160206200291b8339815191528383604051620007ea929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156200061e576001600160a01b03821660009081526008602090815260408220829162000839919062000475901b62000d0a17856200048c565b91509150836001600160a01b03166000805160206200291b833981519152838360405162000871929190918252602082015260400190565b60405180910390a25050505050565b600062000483828462000a44565b600060208284031215620008a157600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620008d357607f821691505b602082108103620008f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200061e57600081815260208120601f850160051c81016020861015620009235750805b601f850160051c820191505b8181101562000944578281556001016200092f565b505050505050565b81516001600160401b03811115620009685762000968620008a8565b6200098081620009798454620008be565b84620008fa565b602080601f831160018114620009b857600084156200099f5750858301515b600019600386901b1c1916600185901b17855562000944565b600085815260208120601f198616915b82811015620009e957888601518255948401946001909101908401620009c8565b508582101562000a085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111562000486576200048662000a18565b8181038181111562000486576200048662000a18565b60805160a05160c05160e0516101005161012051611e7162000aaa60003960006111f2015260006112410152600061121c015260006111750152600061119f015260006111c90152611e716000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063a9059cbb11610097578063c3cda52011610071578063c3cda52014610387578063d505accf1461039a578063dd62ed3e146103ad578063f1127ed8146103c057600080fd5b8063a9059cbb14610363578063be040fb014610376578063bfc12c051461037e57600080fd5b806370a08231146102e65780637ecebe001461030f5780638e539e8c1461032257806395d89b41146103355780639ab24eb01461033d578063a457c2d71461035057600080fd5b8063395093511161013057806339509351146101f55780633a46b1a81461020857806351f60c841461021b578063587cde1e146102655780635c19a95c146102a95780636fcfff45146102be57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b6101806103fd565b60405161018d9190611afe565b60405180910390f35b6101a96101a4366004611b68565b61048f565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004611b92565b6104a9565b6040516012815260200161018d565b6101bd6104cd565b6101a9610203366004611b68565b6104dc565b6101bd610216366004611b68565b6104fe565b61024a610229366004611bce565b600a6020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161018d565b610291610273366004611bce565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b03909116815260200161018d565b6102bc6102b7366004611bce565b61057d565b005b6102d16102cc366004611bce565b61058a565b60405163ffffffff909116815260200161018d565b6101bd6102f4366004611bce565b6001600160a01b031660009081526020819052604090205490565b6101bd61031d366004611bce565b6105ac565b6101bd610330366004611be9565b6105ca565b610180610626565b6101bd61034b366004611bce565b610635565b6101a961035e366004611b68565b6106bc565b6101a9610371366004611b68565b610737565b6102bc610745565b6101bd600b5481565b6102bc610395366004611c13565b610866565b6102bc6103a8366004611c6b565b61099c565b6101bd6103bb366004611cd5565b610b00565b6103d36103ce366004611d08565b610b2b565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161018d565b60606003805461040c90611d48565b80601f016020809104026020016040519081016040528092919081815260200182805461043890611d48565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b60003361049d818585610e26565b60019150505b92915050565b6000336104b7858285610f4a565b6104c2858585610fbe565b506001949350505050565b60006104d7611168565b905090565b60003361049d8185856104ef8383610b00565b6104f99190611d92565b610e26565b60004382106105545760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610576908361128f565b9392505050565b6105873382611386565b50565b6001600160a01b0381166000908152600860205260408120546104a390610d83565b6001600160a01b0381166000908152600560205260408120546104a3565b600043821061061b5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161054b565b6104a360098361128f565b60606004805461040c90611d48565b6001600160a01b03811660009081526008602052604081205480156106a9576001600160a01b0383166000908152600860205260409020610677600183611da5565b8154811061068757610687611db8565b60009182526020909120015464010000000090046001600160e01b03166106ac565b60005b6001600160e01b03169392505050565b600033816106ca8286610b00565b90508381101561072a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161054b565b6104c28286868403610e26565b60003361049d818585610fbe565b336000908152600a6020526040902080546107a25760405162461bcd60e51b815260206004820152601860248201527f4e6f7420617574686f72697a656420746f2072656465656d0000000000000000604482015260640161054b565b60006107b24283600101546113ff565b905060008260020154600b5484600101546107cd9190611da5565b8454600b546107dc9086611da5565b6107e69190611dce565b6107f09190611e03565b6107fa9190611da5565b9050600081116108425760405162461bcd60e51b81526020600482015260136024820152724e6f20746f6b656e7320746f2072656465656d60681b604482015260640161054b565b8083600201546108529190611d92565b60028401556108613382611415565b505050565b834211156108b65760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161054b565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610930906109289060a0016040516020818303038152906040528051906020012061141f565b85858561146d565b905061093b81611495565b86146109895760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161054b565b6109938188611386565b50505050505050565b834211156109ec5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161054b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610a1b8c611495565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a768261141f565b90506000610a868287878761146d565b9050896001600160a01b0316816001600160a01b031614610ae95760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161054b565b610af48a8a8a610e26565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610b6f57610b6f611db8565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610bb98282610c3f565b6002546001600160e01b031015610c2b5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161054b565b610c396009610d0a836114bd565b50505050565b6001600160a01b038216610c955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161054b565b8060026000828254610ca79190611d92565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610d0660008383611611565b5050565b60006105768284611d92565b60006001600160e01b03821115610d7f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161054b565b5090565b600063ffffffff821115610d7f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161054b565b6001600160a01b038381166000908152600760205260408082205485841683529120546108619291821691168361161c565b60006105768284611da5565b6001600160a01b038316610e885760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161054b565b6001600160a01b038216610ee95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161054b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f568484610b00565b90506000198114610c395781811015610fb15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161054b565b610c398484848403610e26565b6001600160a01b0383166110225760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161054b565b6001600160a01b0382166110845760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161054b565b6001600160a01b038316600090815260208190526040902054818110156110fc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161054b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c39848484611611565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156111c157507f000000000000000000000000000000000000000000000000000000000000000046145b156111eb57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156112e95760006112aa84611759565b6112b49085611da5565b600088815260209020909150869082015463ffffffff1611156112d9578091506112e7565b6112e4816001611d92565b92505b505b808210156113365760006112fd8383611841565b600088815260209020909150869082015463ffffffff16111561132257809150611330565b61132d816001611d92565b92505b506112e9565b8015611370576113598661134b600184611da5565b600091825260209091200190565b5464010000000090046001600160e01b0316611373565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610c3982848361161c565b600081831061140e5781610576565b5090919050565b610d068282610baf565b60006104a361142c611168565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061147e8787878761185c565b9150915061148b81611920565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b8254600090819081811561150a576114da8761134b600185611da5565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015261151f565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061153f84868863ffffffff16565b92506000821180156115575750805163ffffffff1643145b1561159c5761156583610d16565b6115748861134b600186611da5565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055611607565b8660405180604001604052806115b143610d83565b63ffffffff1681526020016115c586610d16565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b610861838383610de8565b816001600160a01b0316836001600160a01b03161415801561163e5750600081115b15610861576001600160a01b038316156116cc576001600160a01b0383166000908152600860205260408120819061167990610e1a856114bd565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516116c1929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610861576001600160a01b0382166000908152600860205260408120819061170290610d0a856114bd565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161174a929190918252602082015260400190565b60405180910390a25050505050565b60008160000361176b57506000919050565b6000600161177884611a6a565b901c6001901b9050600181848161179157611791611ded565b048201901c905060018184816117a9576117a9611ded565b048201901c905060018184816117c1576117c1611ded565b048201901c905060018184816117d9576117d9611ded565b048201901c905060018184816117f1576117f1611ded565b048201901c9050600181848161180957611809611ded565b048201901c9050600181848161182157611821611ded565b048201901c90506105768182858161183b5761183b611ded565b046113ff565b60006118506002848418611e03565b61057690848416611d92565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118935750600090506003611917565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156118e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661191057600060019250925050611917565b9150600090505b94509492505050565b600081600481111561193457611934611e25565b0361193c5750565b600181600481111561195057611950611e25565b0361199d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161054b565b60028160048111156119b1576119b1611e25565b036119fe5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161054b565b6003816004811115611a1257611a12611e25565b036105875760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161054b565b600080608083901c15611a7f57608092831c92015b604083901c15611a9157604092831c92015b602083901c15611aa357602092831c92015b601083901c15611ab557601092831c92015b600883901c15611ac757600892831c92015b600483901c15611ad957600492831c92015b600283901c15611aeb57600292831c92015b600183901c156104a35760010192915050565b600060208083528351808285015260005b81811015611b2b57858101830151858201604001528201611b0f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611b6357600080fd5b919050565b60008060408385031215611b7b57600080fd5b611b8483611b4c565b946020939093013593505050565b600080600060608486031215611ba757600080fd5b611bb084611b4c565b9250611bbe60208501611b4c565b9150604084013590509250925092565b600060208284031215611be057600080fd5b61057682611b4c565b600060208284031215611bfb57600080fd5b5035919050565b803560ff81168114611b6357600080fd5b60008060008060008060c08789031215611c2c57600080fd5b611c3587611b4c565b95506020870135945060408701359350611c5160608801611c02565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611c8657600080fd5b611c8f88611b4c565b9650611c9d60208901611b4c565b95506040880135945060608801359350611cb960808901611c02565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611ce857600080fd5b611cf183611b4c565b9150611cff60208401611b4c565b90509250929050565b60008060408385031215611d1b57600080fd5b611d2483611b4c565b9150602083013563ffffffff81168114611d3d57600080fd5b809150509250929050565b600181811c90821680611d5c57607f821691505b6020821081036114b757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104a3576104a3611d7c565b818103818111156104a3576104a3611d7c565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611de857611de8611d7c565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611e2057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205d547c5eca2ffa1b6afc8700fc68620c42686d4cae56c34b15e59666de84a90964736f6c63430008100033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724608060405234801561001057600080fd5b506001600055615599806100256000396000f3fe60806040523480156200001157600080fd5b5060043610620001395760003560e01c8063712b772f11620000bb578063c45a0155116200007a578063c45a0155146200024d578063ce7f0cc31462000261578063e3412e3d146200026b578063efaa89231462000282578063fa175600146200029657600080fd5b8063712b772f146200020157806375f4f18e146200021857806378b4103a1462000222578063c0c53b8b146200022c578063c451463b146200024357600080fd5b8063244addfe1162000108578063244addfe146200019557806327f3a72a146200019f5780635fcbd28514620001a95780636b76484e14620001d65780636e8378a714620001ed57600080fd5b806303438dd0146200013e578063056097ac1462000157578063112ed88e146200016e57806321b77d63146200018b575b600080fd5b620001556200014f36600462002e35565b620002c3565b005b620001556200016836600462002e55565b62000360565b6200017860035481565b6040519081526020015b60405180910390f35b620001786103e881565b6200017860045481565b620001786200057a565b600254620001bd906001600160a01b031681565b6040516001600160a01b03909116815260200162000182565b62000155620001e736600462002e55565b620005f0565b600654620001bd906001600160a01b031681565b620001556200021236600462002e55565b62000615565b620001bd62000758565b62000178620007c9565b620001556200023d36600462002e93565b62000814565b620001bd620009bc565b600154620001bd906001600160a01b031681565b6200017862000a07565b620001556200027c36600462002e35565b62000a1f565b600554620001bd906001600160a01b031681565b620002ad620002a736600462002e35565b62001424565b6040805192835260208301919091520162000182565b620002cd620018be565b6200035281600160009054906101000a90046001600160a01b03166001600160a01b031663b88fd16e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000326573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034c919062002ee5565b6200191d565b6200035d6001600055565b50565b6001546001600160a01b031633146200038c57604051633035e8b560e01b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620003e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000406919062002ee5565b6001600160a01b0316826001600160a01b03161480620004b05750600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200049b919062002ee5565b6001600160a01b0316826001600160a01b0316145b80620004c957506002546001600160a01b038381169116145b15620004e85760405163d0a066eb60e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa15801562000530573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000556919062002f05565b905080156200057557620005756001600160a01b0384168383620028ac565b505050565b6005546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa158015620005c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005eb919062002f05565b905090565b620005fa620018be565b6200060682826200191d565b620006116001600055565b5050565b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000669573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200068f919062002ee5565b6001600160a01b0316826001600160a01b031614158015620004c95750600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000700573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000726919062002ee5565b6001600160a01b0316826001600160a01b031614620004e85760405163d0a066eb60e01b815260040160405180910390fd5b60025460408051633afa78c760e11b815290516000926001600160a01b0316916375f4f18e9160048083019260209291908290030181865afa158015620007a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005eb919062002ee5565b6006546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa158015620005c5573d6000803e3d6000fd5b60085460ff16156200083957604051630d2bb64560e01b815260040160405180910390fd5b80600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200089f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c5919062002ee5565b826001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200092a919062002ee5565b604051620009389062002e11565b6001600160a01b03928316815291166020820152604001604051809103906000f0801580156200096c573d6000803e3d6000fd5b50600280546001600160a01b03199081166001600160a01b03938416179091556005805482169583169590951790945560068054909416921691909117909155506008805460ff19166001179055565b6002546040805163c451463b60e01b815290516000926001600160a01b03169163c451463b9160048083019260209291908290030181865afa158015620007a3573d6000803e3d6000fd5b62000a1c6064670de0b6b3a764000062002f4b565b81565b62000a29620018be565b60025460408051633afa78c760e11b815290516000926001600160a01b0316916375f4f18e9160048083019260209291908290030181865afa15801562000a74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9a919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000ae1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b07919062002f05565b90508060000362000b2b5760405163ced6e79560e01b815260040160405180910390fd5b6002546040805163c451463b60e01b815290516000926001600160a01b03169163c451463b9160048083019260209291908290030181865afa15801562000b76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b9c919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562000be3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c09919062002f05565b90508060000362000c2d5760405163ced6e79560e01b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca7919062002ee5565b60055460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262000cdc92911690869060040162002f6e565b6020604051808303816000875af115801562000cfc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d22919062002f87565b50600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000d77573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d9d919062002ee5565b60065460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262000dd292911690859060040162002f6e565b6020604051808303816000875af115801562000df2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e18919062002f87565b5060055460405163b6b55f2560e01b8152600481018490526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801562000e6057600080fd5b505af115801562000e75573d6000803e3d6000fd5b505060065460405163b6b55f2560e01b8152600481018590526001600160a01b03909116925063b6b55f259150602401600060405180830381600087803b15801562000ec057600080fd5b505af115801562000ed5573d6000803e3d6000fd5b5050505062000fe3600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f31573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f57919062002f05565b600560009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000fab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fd1919062002f05565b62000fdd919062002fab565b62002906565b600755600254604080516318160ddd60e01b815290516001600160a01b03909216916318160ddd916004808201926020929091908290030181865afa15801562001031573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001057919062002f05565b600003620011885760006200107162000fdd838562002fab565b90506103e8811162001096576040516377eb3b4f60e11b815260040160405180910390fd5b620010a2838362002a12565b6002546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990620010d89083906103e89060040162002f6e565b600060405180830381600087803b158015620010f357600080fd5b505af115801562001108573d6000803e3d6000fd5b50506002546001600160a01b031691506340c10f199050856200112e6103e88562002fcd565b6040518363ffffffff1660e01b81526004016200114d92919062002f6e565b600060405180830381600087803b1580156200116857600080fd5b505af11580156200117d573d6000803e3d6000fd5b5050505050620013d5565b6005546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa158015620011d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011f9919062002f05565b6200120d670de0b6b3a76400008562002fab565b62001219919062002f4b565b90506000600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001297919062002f05565b620012ab670de0b6b3a76400008562002fab565b620012b7919062002f4b565b90506000620012c7838362002a75565b90506000670de0b6b3a764000082600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001329573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200134f919062002f05565b6200135b919062002fab565b62001367919062002f4b565b6002546040516340c10f1960e01b81529192506001600160a01b0316906340c10f19906200139c908a90859060040162002f6e565b600060405180830381600087803b158015620013b757600080fd5b505af1158015620013cc573d6000803e3d6000fd5b50505050505050505b60408051838152602081018390526000818301819052606082015290516001600160a01b0385169160008051602062005544833981519152919081900360800190a250506200035d6001600055565b60008062001431620018be565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200147b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014a1919062002f05565b905080600003620014c55760405163ced6e79560e01b815260040160405180910390fd5b600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001519573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200153f919062002f05565b600560009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001593573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015b9919062002f05565b620015c5908362002fab565b620015d1919062002f4b565b9250600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001627573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200164d919062002f05565b600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620016a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016c7919062002f05565b620016d3908362002fab565b620016df919062002f4b565b600254604051630852cd8d60e31b8152600481018490529193506001600160a01b0316906342966c6890602401600060405180830381600087803b1580156200172757600080fd5b505af11580156200173c573d6000803e3d6000fd5b505060055460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a3915062001774908790879060040162002f6e565b600060405180830381600087803b1580156200178f57600080fd5b505af1158015620017a4573d6000803e3d6000fd5b505060065460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a39150620017dc908790869060040162002f6e565b600060405180830381600087803b158015620017f757600080fd5b505af11580156200180c573d6000803e3d6000fd5b5050505062001868600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000f31573d6000803e3d6000fd5b6007556040805160008082526020820152908101849052606081018390526001600160a01b03851690600080516020620055448339815191529060800160405180910390a250620018b96001600055565b915091565b600260005403620019165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b6005546040805163ad7a672f60e01b815290516000926001600160a01b03169163ad7a672f9160048083019260209291908290030181865afa15801562001968573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200198e919062002f05565b90506000600660009054906101000a90046001600160a01b03166001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620019e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a0c919062002f05565b6004805460035460025460408051633afa78c760e11b81529051959650929491936000936001600160a01b03909216926375f4f18e9280830192602092918290030181865afa15801562001a64573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8a919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562001ad1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001af7919062002f05565b905080156200216a57600062001b0f85878662002a91565b9050600062001b3f828662001b2d670de0b6b3a76400008762002fab565b62001b39919062002f4b565b62002a75565b905062001b7a670de0b6b3a764000062001b5a878462002fab565b62001b66919062002f4b565b62001b7390600162002fe3565b8462002a75565b925062001b88838862002fe3565b965062001b96818762002fcd565b955081810362001bb25762001bac878762002a12565b62001bf0565b62001bd28462001bcc6064670de0b6b3a764000062002f4b565b62002b10565b9350600062001be388888762002a91565b111562001bf05760038490555b600062001c0262000fdd888a62002fab565b905060006007548262001c16919062002fcd565b600160009054906101000a90046001600160a01b03166001600160a01b031663c614368e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001c6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c90919062002f05565b62001c9c919062002fab565b905060008162001cb5670de0b6b3a76400008562002fab565b62001cc1919062002fcd565b600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001d15573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d3b919062002f05565b62001d47908462002fab565b62001d53919062002f4b565b60078490559050801562001f5c57600154604080516302f1ce0160e01b815290516000926001600160a01b0316916302f1ce019160048083019260209291908290030181865afa15801562001dac573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dd2919062002f05565b9050801562001e8b576000670de0b6b3a764000062001df2838562002fab565b62001dfe919062002f4b565b9050600260009054906101000a90046001600160a01b03166001600160a01b03166340c10f198e836040518363ffffffff1660e01b815260040162001e4592919062002f6e565b600060405180830381600087803b15801562001e6057600080fd5b505af115801562001e75573d6000803e3d6000fd5b50505050808362001e87919062002fcd565b9250505b60025460015460408051635c47e8b760e11b815290516001600160a01b03938416936340c10f1993169163b88fd16e9160048083019260209291908290030181865afa15801562001ee0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f06919062002ee5565b846040518363ffffffff1660e01b815260040162001f2692919062002f6e565b600060405180830381600087803b15801562001f4157600080fd5b505af115801562001f56573d6000803e3d6000fd5b50505050505b600260009054906101000a90046001600160a01b03166001600160a01b03166375f4f18e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001fb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fd6919062002ee5565b60055460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926200200b929116908a9060040162002f6e565b6020604051808303816000875af11580156200202b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002051919062002f87565b5060055460405163b6b55f2560e01b8152600481018890526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b1580156200209957600080fd5b505af1158015620020ae573d6000803e3d6000fd5b505060065460405163f3fef3a360e01b81526001600160a01b03909116925063f3fef3a39150620020e6908f90889060040162002f6e565b600060405180830381600087803b1580156200210157600080fd5b505af115801562002116573d6000803e3d6000fd5b50506040805189815260006020820181905291810191909152606081018790526001600160a01b038f16925060008051602062005544833981519152915060800160405180910390a25050505050620028a3565b6002546040805163c451463b60e01b815290516000926001600160a01b03169163c451463b9160048083019260209291908290030181865afa158015620021b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021db919062002ee5565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801562002222573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002248919062002f05565b90508015620028995760006200226087878662002a91565b905060006200227e828662001b2d670de0b6b3a76400008762002fab565b905062002299670de0b6b3a764000062001b5a878462002fab565b9250620022a7818962002fcd565b9750620022b5838862002fe3565b9650818103620022d157620022cb888862002a12565b62002309565b620022eb8662001bcc6064670de0b6b3a764000062002f4b565b95506000620022fc888a8962002a91565b1115620023095760048690555b60006200231b62000fdd898b62002fab565b90506000600754826200232f919062002fcd565b600160009054906101000a90046001600160a01b03166001600160a01b031663c614368e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002383573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023a9919062002f05565b620023b5919062002fab565b9050600081620023ce670de0b6b3a76400008562002fab565b620023da919062002fcd565b600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200242e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002454919062002f05565b62002460908462002fab565b6200246c919062002f4b565b6007849055905080156200267557600154604080516302f1ce0160e01b815290516000926001600160a01b0316916302f1ce019160048083019260209291908290030181865afa158015620024c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024eb919062002f05565b90508015620025a4576000670de0b6b3a76400006200250b838562002fab565b62002517919062002f4b565b9050600260009054906101000a90046001600160a01b03166001600160a01b03166340c10f198f836040518363ffffffff1660e01b81526004016200255e92919062002f6e565b600060405180830381600087803b1580156200257957600080fd5b505af11580156200258e573d6000803e3d6000fd5b505050508083620025a0919062002fcd565b9250505b60025460015460408051635c47e8b760e11b815290516001600160a01b03938416936340c10f1993169163b88fd16e9160048083019260209291908290030181865afa158015620025f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200261f919062002ee5565b846040518363ffffffff1660e01b81526004016200263f92919062002f6e565b600060405180830381600087803b1580156200265a57600080fd5b505af11580156200266f573d6000803e3d6000fd5b50505050505b600260009054906101000a90046001600160a01b03166001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620026c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026ef919062002ee5565b60065460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262002724929116908a9060040162002f6e565b6020604051808303816000875af115801562002744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200276a919062002f87565b5060065460405163b6b55f2560e01b8152600481018890526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015620027b257600080fd5b505af1158015620027c7573d6000803e3d6000fd5b50505050600560009054906101000a90046001600160a01b03166001600160a01b031663f3fef3a38e866040518363ffffffff1660e01b81526004016200281092919062002f6e565b600060405180830381600087803b1580156200282b57600080fd5b505af115801562002840573d6000803e3d6000fd5b505050508c6001600160a01b0316600080516020620055448339815191526000888760006040516200288b949392919093845260208401929092526040830152606082015260800190565b60405180910390a250505050505b5050505050505050565b50505050505050565b620005758363a9059cbb60e01b8484604051602401620028ce92919062002f6e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915262002b46565b6000816000036200291957506000919050565b60006001620029288462002c1f565b901c6001901b9050600181848162002944576200294462002f1f565b048201901c905060018184816200295f576200295f62002f1f565b048201901c905060018184816200297a576200297a62002f1f565b048201901c9050600181848162002995576200299562002f1f565b048201901c90506001818481620029b057620029b062002f1f565b048201901c90506001818481620029cb57620029cb62002f1f565b048201901c90506001818481620029e657620029e662002f1f565b048201901c905062002a0b8182858162002a045762002a0462002f1f565b0462002a75565b9392505050565b62002a528262002a2b670de0b6b3a76400008462002fab565b62002a37919062002f4b565b62002a4c6064670de0b6b3a764000062002f4b565b62002cbb565b60035562002a6e8162002a2b670de0b6b3a76400008562002fab565b6004555050565b600081831062002a86578162002a88565b825b90505b92915050565b600062002a9f848362002fab565b62002ab384670de0b6b3a764000062002fab565b1062002ac25750600062002a0b565b62002acf82600262002fab565b62002ae3670de0b6b3a76400008562002fab565b62002aef919062002f4b565b62002afc60028662002f4b565b62002b08919062002fcd565b949350505050565b600062002b2682670de0b6b3a764000062002fe3565b62002b3a670de0b6b3a76400008562002fab565b62002a88919062002f4b565b600062002b9d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031662002cde9092919063ffffffff16565b80519091501562000575578080602001905181019062002bbe919062002f87565b620005755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200190d565b600080608083901c1562002c3557608092831c92015b604083901c1562002c4857604092831c92015b602083901c1562002c5b57602092831c92015b601083901c1562002c6e57601092831c92015b600883901c1562002c8157600892831c92015b600483901c1562002c9457600492831c92015b600283901c1562002ca757600292831c92015b600183901c1562002a8b5760010192915050565b6000670de0b6b3a764000062002cd2838262002fe3565b62002b3a908562002fab565b606062002b08848460008585600080866001600160a01b0316858760405162002d0891906200301f565b60006040518083038185875af1925050503d806000811462002d47576040519150601f19603f3d011682016040523d82523d6000602084013e62002d4c565b606091505b509150915062002d5f8783838762002d6a565b979650505050505050565b6060831562002dde57825160000362002dd6576001600160a01b0385163b62002dd65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200190d565b508162002b08565b62002b08838381511562002df55781518083602001fd5b8060405162461bcd60e51b81526004016200190d91906200303d565b6124d1806200307383390190565b6001600160a01b03811681146200035d57600080fd5b60006020828403121562002e4857600080fd5b813562002a0b8162002e1f565b6000806040838503121562002e6957600080fd5b823562002e768162002e1f565b9150602083013562002e888162002e1f565b809150509250929050565b60008060006060848603121562002ea957600080fd5b833562002eb68162002e1f565b9250602084013562002ec88162002e1f565b9150604084013562002eda8162002e1f565b809150509250925092565b60006020828403121562002ef857600080fd5b815162002a0b8162002e1f565b60006020828403121562002f1857600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008262002f6957634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03929092168252602082015260400190565b60006020828403121562002f9a57600080fd5b8151801515811462002a0b57600080fd5b600081600019048311821515161562002fc85762002fc862002f35565b500290565b8181038181111562002a8b5762002a8b62002f35565b8082018082111562002a8b5762002a8b62002f35565b60005b838110156200301657818101518382015260200162002ffc565b50506000910152565b600082516200303381846020870162002ff9565b9190910192915050565b60208152600082518060208401526200305e81604085016020870162002ff9565b601f01601f1916919091016040019291505056fe6101806040523480156200001257600080fd5b50604051620024d1380380620024d183398101604081905262000035916200020b565b6040518060400160405280601181526020017029ba30b4b92bb0bc902628102a37b5b2b760791b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601181526020017029ba30b4b92bb0bc902628102a37b5b2b760791b8152506040518060400160405280600681526020016505357592d4c560d41b8152508160039081620000d49190620002e8565b506004620000e38282620002e8565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909601209052929092526101205250620001829050336200019c565b6001600160a01b03918216610140521661016052620003b4565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200020657600080fd5b919050565b600080604083850312156200021f57600080fd5b6200022a83620001ee565b91506200023a60208401620001ee565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026e57607f821691505b6020821081036200028f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e357600081815260208120601f850160051c81016020861015620002be5750805b601f850160051c820191505b81811015620002df57828155600101620002ca565b5050505b505050565b81516001600160401b0381111562000304576200030462000243565b6200031c8162000315845462000259565b8462000295565b602080601f8311600181146200035457600084156200033b5750858301515b600019600386901b1c1916600185901b178555620002df565b600085815260208120601f198616915b82811015620003855788860151825594840194600190910190840162000364565b5085821015620003a45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051610160516120b76200041a60003960006104240152600061035f01526000610fde0152600061102d0152600061100801526000610f6101526000610f8b01526000610fb501526120b76000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806375f4f18e11610104578063a457c2d7116100a2578063d505accf11610071578063d505accf14610446578063dd62ed3e14610459578063f1127ed81461046c578063f2fde38b146104a957600080fd5b8063a457c2d7146103e6578063a9059cbb146103f9578063c3cda5201461040c578063c451463b1461041f57600080fd5b80638da5cb5b116100de5780638da5cb5b146103a75780638e539e8c146103b857806395d89b41146103cb5780639ab24eb0146103d357600080fd5b806375f4f18e1461035a57806379cc6790146103815780637ecebe001461039457600080fd5b80633a46b1a81161017c5780635c19a95c1161014b5780635c19a95c146102ee5780636fcfff451461030157806370a0823114610329578063715018a61461035257600080fd5b80633a46b1a81461026f57806340c10f191461028257806342966c6814610297578063587cde1e146102aa57600080fd5b806323b872dd116101b857806323b872dd14610232578063313ce567146102455780633644e51514610254578063395093511461025c57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e76104bc565b6040516101f49190611d63565b60405180910390f35b61021061020b366004611dcd565b61054e565b60405190151581526020016101f4565b6002545b6040519081526020016101f4565b610210610240366004611df7565b610568565b604051601281526020016101f4565b61022461058c565b61021061026a366004611dcd565b61059b565b61022461027d366004611dcd565b6105bd565b610295610290366004611dcd565b61063c565b005b6102956102a5366004611e33565b610652565b6102d66102b8366004611e4c565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b0390911681526020016101f4565b6102956102fc366004611e4c565b61065f565b61031461030f366004611e4c565b610669565b60405163ffffffff90911681526020016101f4565b610224610337366004611e4c565b6001600160a01b031660009081526020819052604090205490565b61029561068b565b6102d67f000000000000000000000000000000000000000000000000000000000000000081565b61029561038f366004611dcd565b61069f565b6102246103a2366004611e4c565b6106b4565b600a546001600160a01b03166102d6565b6102246103c6366004611e33565b6106d2565b6101e761072e565b6102246103e1366004611e4c565b61073d565b6102106103f4366004611dcd565b6107c4565b610210610407366004611dcd565b61083f565b61029561041a366004611e78565b61084d565b6102d67f000000000000000000000000000000000000000000000000000000000000000081565b610295610454366004611ed0565b610983565b610224610467366004611f3a565b610ae7565b61047f61047a366004611f6d565b610b12565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101f4565b6102956104b7366004611e4c565b610b96565b6060600380546104cb90611fad565b80601f01602080910402602001604051908101604052809291908181526020018280546104f790611fad565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b60003361055c818585610c0c565b60019150505b92915050565b600033610576858285610d30565b610581858585610daa565b506001949350505050565b6000610596610f54565b905090565b60003361055c8185856105ae8383610ae7565b6105b89190611ff7565b610c0c565b60004382106106135760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610635908361107b565b9392505050565b610644611172565b61064e82826111cc565b5050565b61065c33826111d6565b50565b61065c33826111e0565b6001600160a01b03811660009081526008602052604081205461056290611259565b610693611172565b61069d60006112c2565b565b6106aa823383610d30565b61064e82826111d6565b6001600160a01b038116600090815260056020526040812054610562565b60004382106107235760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161060a565b61056260098361107b565b6060600480546104cb90611fad565b6001600160a01b03811660009081526008602052604081205480156107b1576001600160a01b038316600090815260086020526040902061077f60018361200a565b8154811061078f5761078f61201d565b60009182526020909120015464010000000090046001600160e01b03166107b4565b60005b6001600160e01b03169392505050565b600033816107d28286610ae7565b9050838110156108325760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161060a565b6105818286868403610c0c565b60003361055c818585610daa565b8342111561089d5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161060a565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906109179061090f9060a00160405160208183030381529060405280519060200120611314565b858585611362565b90506109228161138a565b86146109705760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161060a565b61097a81886111e0565b50505050505050565b834211156109d35760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161060a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610a028c61138a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a5d82611314565b90506000610a6d82878787611362565b9050896001600160a01b0316816001600160a01b031614610ad05760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161060a565b610adb8a8a8a610c0c565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610b5657610b5661201d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610b9e611172565b6001600160a01b038116610c035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060a565b61065c816112c2565b6001600160a01b038316610c6e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161060a565b6001600160a01b038216610ccf5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161060a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d3c8484610ae7565b90506000198114610da45781811015610d975760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161060a565b610da48484848403610c0c565b50505050565b6001600160a01b038316610e0e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161060a565b6001600160a01b038216610e705760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161060a565b6001600160a01b03831660009081526020819052604090205481811015610ee85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161060a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610da48484846113b7565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610fad57507f000000000000000000000000000000000000000000000000000000000000000046145b15610fd757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156110d5576000611096846113c2565b6110a0908561200a565b600088815260209020909150869082015463ffffffff1611156110c5578091506110d3565b6110d0816001611ff7565b92505b505b808210156111225760006110e983836114aa565b600088815260209020909150869082015463ffffffff16111561110e5780915061111c565b611119816001611ff7565b92505b506110d5565b801561115c576111458661113760018461200a565b600091825260209091200190565b5464010000000090046001600160e01b031661115f565b60005b6001600160e01b03169695505050505050565b600a546001600160a01b0316331461069d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060a565b61064e82826114c5565b61064e828261154f565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610da4828483611567565b600063ffffffff8211156112be5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161060a565b5090565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610562611321610f54565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611373878787876116a4565b9150915061138081611768565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b505050565b6113b28383836118b2565b6000816000036113d457506000919050565b600060016113e1846118e4565b901c6001901b905060018184816113fa576113fa612033565b048201901c9050600181848161141257611412612033565b048201901c9050600181848161142a5761142a612033565b048201901c9050600181848161144257611442612033565b048201901c9050600181848161145a5761145a612033565b048201901c9050600181848161147257611472612033565b048201901c9050600181848161148a5761148a612033565b048201901c9050610635818285816114a4576114a4612033565b04611978565b60006114b96002848418612049565b61063590848416611ff7565b6114cf828261198e565b6002546001600160e01b0310156115415760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161060a565b610da46009611a5583611a61565b6115598282611bb5565b610da46009611cee83611a61565b816001600160a01b0316836001600160a01b0316141580156115895750600081115b156113b2576001600160a01b03831615611617576001600160a01b038316600090815260086020526040812081906115c490611cee85611a61565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161160c929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156113b2576001600160a01b0382166000908152600860205260408120819061164d90611a5585611a61565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611695929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116db575060009050600361175f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561172f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117585760006001925092505061175f565b9150600090505b94509492505050565b600081600481111561177c5761177c61206b565b036117845750565b60018160048111156117985761179861206b565b036117e55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161060a565b60028160048111156117f9576117f961206b565b036118465760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161060a565b600381600481111561185a5761185a61206b565b0361065c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161060a565b6001600160a01b038381166000908152600760205260408082205485841683529120546113b292918216911683611567565b600080608083901c156118f957608092831c92015b604083901c1561190b57604092831c92015b602083901c1561191d57602092831c92015b601083901c1561192f57601092831c92015b600883901c1561194157600892831c92015b600483901c1561195357600492831c92015b600283901c1561196557600292831c92015b600183901c156105625760010192915050565b60008183106119875781610635565b5090919050565b6001600160a01b0382166119e45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161060a565b80600260008282546119f69190611ff7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361064e600083836113b7565b60006106358284611ff7565b82546000908190818115611aae57611a7e8761113760018561200a565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611ac3565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611ae384868863ffffffff16565b9250600082118015611afb5750805163ffffffff1643145b15611b4057611b0983611cfa565b611b188861113760018661200a565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055611bab565b866040518060400160405280611b5543611259565b63ffffffff168152602001611b6986611cfa565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b038216611c155760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161060a565b6001600160a01b03821660009081526020819052604090205481811015611c895760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161060a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36113b2836000846113b7565b6000610635828461200a565b60006001600160e01b038211156112be5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161060a565b600060208083528351808285015260005b81811015611d9057858101830151858201604001528201611d74565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611dc857600080fd5b919050565b60008060408385031215611de057600080fd5b611de983611db1565b946020939093013593505050565b600080600060608486031215611e0c57600080fd5b611e1584611db1565b9250611e2360208501611db1565b9150604084013590509250925092565b600060208284031215611e4557600080fd5b5035919050565b600060208284031215611e5e57600080fd5b61063582611db1565b803560ff81168114611dc857600080fd5b60008060008060008060c08789031215611e9157600080fd5b611e9a87611db1565b95506020870135945060408701359350611eb660608801611e67565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611eeb57600080fd5b611ef488611db1565b9650611f0260208901611db1565b95506040880135945060608801359350611f1e60808901611e67565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f4d57600080fd5b611f5683611db1565b9150611f6460208401611db1565b90509250929050565b60008060408385031215611f8057600080fd5b611f8983611db1565b9150602083013563ffffffff81168114611fa257600080fd5b809150509250929050565b600181811c90821680611fc157607f821691505b6020821081036113ac57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561056257610562611fe1565b8181038181111561056257610562611fe1565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261206657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c6ddb5643dc25ca3d8dff3d3de845c28f69434ed2aaba30dc02e8d9b5e4bd00764736f6c63430008100033b81d4b68d3effcc6fba59d3ddaab0fb2b5ce4ce5e23a1280e98aa079b6261f3da26469706673582212205efc96aa3646c7df07daba3a02495c86ec55a04c52a0c71de3a3743917adfaec64736f6c63430008100033608060405234801561001057600080fd5b50611012806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b281c47811610066578063b281c47814610151578063b6b55f251461015f578063f3fef3a314610172578063f5389d4a14610185578063fc0c546a1461019857600080fd5b8063485cc955146100a35780639155ccc8146100b85780639c68c504146100eb5780639e0c5f2a14610107578063ad7a672f14610148575b600080fd5b6100b66100b1366004610dba565b6101b1565b005b6100d86100c6366004610df3565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b6100f461030081565b60405161ffff90911681526020016100e2565b610130610115366004610e17565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100e2565b6100d860025481565b6001546100f49061ffff1681565b6100b661016d366004610e3b565b610233565b6100b6610180366004610e54565b610240565b600454610130906001600160a01b031681565b600154610130906201000090046001600160a01b031681565b6001546201000090046001600160a01b0316156101e1576040516307aff13f60e41b815260040160405180910390fd5b600180546001600160b01b031916620100006001600160a01b038581169190910261ffff191691909117909155600480546001600160a01b03191691831691909117905561022f600061027a565b5050565b61023d33826103a4565b50565b33600090815260036020526040902054811115610270576040516303571d3f60e41b815260040160405180910390fd5b61022f82826107b2565b61ffff81166000908152602081905260409020546001600160a01b0316156102b5576040516301b55a3f60e21b815260040160405180910390fd5b6004546000906102cd906001600160a01b0316610a3f565b9050600061030061ffff8416106102e6576000196102fa565b6102f1600384610e96565b61ffff166001901b5b60015460405163c350a1b560e01b81526001600160a01b0362010000909204821660048201526024810183905230604482015291925083169063c350a1b590606401600060405180830381600087803b15801561035657600080fd5b505af115801561036a573d6000803e3d6000fd5b5050505061ffff92909216600090815260208190526040902080546001600160a01b0319166001600160a01b039290921691909117905550565b801561022f5760015461ffff16600090815260208181526040918290205482516339d6a34560e11b815292516001600160a01b03909116926373ad468a9260048083019391928290030181865afa158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190610ec5565b60015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190610ec5565b106104dc576001805481906000906104c190839061ffff16610ede565b92506101000a81548161ffff021916908361ffff1602179055505b60015461ffff166000908152602081905260409020546001600160a01b031661050f5760015461050f9061ffff1661027a565b60015461ffff166000908152602081815260408083205481516316d3df1560e31b8152915185936001600160a01b039092169263b69ef8a89260048083019391928290030181865afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190610ec5565b6105979190610f00565b60015461ffff16600090815260208181526040918290205482516339d6a34560e11b815292516001600160a01b03909116926373ad468a9260048083019391928290030181865afa1580156105f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106149190610ec5565b116107225760015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106969190610ec5565b60015461ffff16600090815260208181526040918290205482516339d6a34560e11b815292516001600160a01b03909116926373ad468a9260048083019391928290030181865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107139190610ec5565b61071d9190610f19565b610724565b815b90506107308183610f19565b915080600260008282546107449190610f00565b90915550506001600160a01b03831660009081526003602052604081208054839290610771908490610f00565b909155505060015461ffff81166000908152602081905260409020546107ac916201000090046001600160a01b039081169186911684610ade565b506103a4565b801561022f5760015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190610ec5565b60000361086f5760018054819060009061085490839061ffff16610f2c565b92506101000a81548161ffff021916908361ffff1602179055505b60015461ffff166000908152602081815260408083205481516316d3df1560e31b8152915185936001600160a01b039092169263b69ef8a89260048083019391928290030181865afa1580156108c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ed9190610ec5565b116109745760015461ffff16600090815260208181526040918290205482516316d3df1560e31b815292516001600160a01b039091169263b69ef8a89260048083019391928290030181865afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190610ec5565b610976565b815b90506109828183610f19565b915080600260008282546109969190610f19565b909155505033600090815260036020526040812080548392906109ba908490610f19565b909155505060015461ffff166000908152602081905260409081902054905163f3fef3a360e01b81526001600160a01b038581166004830152602482018490529091169063f3fef3a390604401600060405180830381600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b50505050506107b2565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610ad95760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064015b60405180910390fd5b919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610b38908590610b3e565b50505050565b6000610b93826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c159092919063ffffffff16565b805190915015610c105780806020019051810190610bb19190610f47565b610c105760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ad0565b505050565b6060610c248484600085610c2c565b949350505050565b606082471015610c8d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ad0565b600080866001600160a01b03168587604051610ca99190610f8d565b60006040518083038185875af1925050503d8060008114610ce6576040519150601f19603f3d011682016040523d82523d6000602084013e610ceb565b606091505b5091509150610cfc87838387610d07565b979650505050505050565b60608315610d76578251600003610d6f576001600160a01b0385163b610d6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ad0565b5081610c24565b610c248383815115610d8b5781518083602001fd5b8060405162461bcd60e51b8152600401610ad09190610fa9565b6001600160a01b038116811461023d57600080fd5b60008060408385031215610dcd57600080fd5b8235610dd881610da5565b91506020830135610de881610da5565b809150509250929050565b600060208284031215610e0557600080fd5b8135610e1081610da5565b9392505050565b600060208284031215610e2957600080fd5b813561ffff81168114610e1057600080fd5b600060208284031215610e4d57600080fd5b5035919050565b60008060408385031215610e6757600080fd5b8235610e7281610da5565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff80841680610eb957634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060208284031215610ed757600080fd5b5051919050565b61ffff818116838216019080821115610ef957610ef9610e80565b5092915050565b80820180821115610f1357610f13610e80565b92915050565b81810381811115610f1357610f13610e80565b61ffff828116828216039080821115610ef957610ef9610e80565b600060208284031215610f5957600080fd5b81518015158114610e1057600080fd5b60005b83811015610f84578181015183820152602001610f6c565b50506000910152565b60008251610f9f818460208701610f69565b9190910192915050565b6020815260008251806020840152610fc8816040850160208701610f69565b601f01601f1916919091016040019291505056fea2646970667358221220210f026bbd4dd9933bb543317284f06db2c07f6a93bf411d5984305d14b023cb64736f6c63430008100033608060405234801561001057600080fd5b50610400806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806373ad468a14610067578063b69ef8a814610083578063c350a1b51461008b578063f3fef3a3146100a0578063f851a440146100b3578063fc0c546a146100de575b600080fd5b61007060015481565b6040519081526020015b60405180910390f35b6100706100f1565b61009e61009936600461031a565b610163565b005b61009e6100ae36600461035c565b6101cf565b6002546100c6906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b6000546100c6906001600160a01b031681565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610388565b905090565b600254600160a01b900460ff161561018e5760405163da800ac560e01b815260040160405180910390fd5b600080546001600160a01b039485166001600160a01b0319909116179055600191909155600280546001600160a81b0319169190921617600160a01b179055565b6002546001600160a01b031633146101fa57604051630f0590d360e41b815260040160405180910390fd5b6000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610388565b81111561028657604051633fe8fd1d60e01b815260040160405180910390fd5b60005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd91906103a1565b505050565b6001600160a01b038116811461031757600080fd5b50565b60008060006060848603121561032f57600080fd5b833561033a81610302565b925060208401359150604084013561035181610302565b809150509250925092565b6000806040838503121561036f57600080fd5b823561037a81610302565b946020939093013593505050565b60006020828403121561039a57600080fd5b5051919050565b6000602082840312156103b357600080fd5b815180151581146103c357600080fd5b939250505056fea2646970667358221220d77439e852689c54a429d4dd4335880ce54a86822a9d86a16320ff56aff7273564736f6c6343000810003360806040523480156200001157600080fd5b5060405162003987380380620039878339810160408190526200003491620003e3565b604080516000808252602082019081528183019092526212750091866200006b6000805160206200390783398151915280620002bd565b620000956000805160206200392783398151915260008051602062003907833981519152620002bd565b620000bf6000805160206200394783398151915260008051602062003907833981519152620002bd565b620000e96000805160206200396783398151915260008051602062003907833981519152620002bd565b62000104600080516020620039078339815191523062000308565b6001600160a01b038116156200012f576200012f600080516020620039078339815191528262000308565b60005b8351811015620001b557620001796000805160206200392783398151915285838151811062000165576200016562000440565b60200260200101516200030860201b60201c565b620001a26000805160206200396783398151915285838151811062000165576200016562000440565b620001ad8162000456565b905062000132565b5060005b8251811015620001ff57620001ec6000805160206200394783398151915284838151811062000165576200016562000440565b620001f78162000456565b9050620001b9565b5060028490556040805160008152602081018690527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1505050508282826040516200025490620003b8565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000291573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055506200047e92505050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b62000314828262000318565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000314576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620003743390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61168b806200227c83390190565b80516001600160a01b0381168114620003de57600080fd5b919050565b60008060008060808587031215620003fa57600080fd5b6200040585620003c6565b93506200041560208601620003c6565b92506200042560408601620003c6565b91506200043560608601620003c6565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b6000600182016200047757634e487b7160e01b600052601160045260246000fd5b5060010190565b611dee806200048e6000396000f3fe6080604052600436106101c65760003560e01c80638065657f116100f7578063bc197c8111610095578063d547741f11610064578063d547741f146105c5578063e38335e5146105e5578063f23a6e61146105f8578063f27a0c921461062457600080fd5b8063bc197c8114610514578063c45a015514610540578063c4d252f514610578578063d45c44351461059857600080fd5b806391d14854116100d157806391d148541461048b578063a217fddf146104ab578063b08e51c0146104c0578063b1c5f427146104f457600080fd5b80638065657f146104175780638f2a0bb0146104375780638f61f4f51461045757600080fd5b8063248a9ca31161016457806331d507501161013e57806331d507501461039757806336568abe146103b7578063584b153e146103d757806364d62353146103f757600080fd5b8063248a9ca3146103165780632ab0f529146103465780632f2ff15d1461037757600080fd5b80630d3cf6fc116101a05780630d3cf6fc1461026b578063134008d31461029f57806313bc9f20146102b2578063150b7a02146102d257600080fd5b806301d5062a146101d257806301ffc9a7146101f457806307bd02651461022957600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004611403565b610639565b005b34801561020057600080fd5b5061021461020f366004611477565b6106ce565b60405190151581526020015b60405180910390f35b34801561023557600080fd5b5061025d7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6381565b604051908152602001610220565b34801561027757600080fd5b5061025d7f5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca581565b6101f26102ad3660046114a1565b6106f9565b3480156102be57600080fd5b506102146102cd36600461150c565b6107ae565b3480156102de57600080fd5b506102fd6102ed3660046115da565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610220565b34801561032257600080fd5b5061025d61033136600461150c565b60009081526020819052604090206001015490565b34801561035257600080fd5b5061021461036136600461150c565b6000908152600160208190526040909120541490565b34801561038357600080fd5b506101f2610392366004611641565b6107d4565b3480156103a357600080fd5b506102146103b236600461150c565b6107fe565b3480156103c357600080fd5b506101f26103d2366004611641565b610817565b3480156103e357600080fd5b506102146103f236600461150c565b61089a565b34801561040357600080fd5b506101f261041236600461150c565b6108b0565b34801561042357600080fd5b5061025d6104323660046114a1565b610954565b34801561044357600080fd5b506101f26104523660046116b1565b610993565b34801561046357600080fd5b5061025d7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc181565b34801561049757600080fd5b506102146104a6366004611641565b610ae5565b3480156104b757600080fd5b5061025d600081565b3480156104cc57600080fd5b5061025d7ffd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f78381565b34801561050057600080fd5b5061025d61050f366004611762565b610b0e565b34801561052057600080fd5b506102fd61052f366004611889565b63bc197c8160e01b95945050505050565b34801561054c57600080fd5b50600354610560906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561058457600080fd5b506101f261059336600461150c565b610b53565b3480156105a457600080fd5b5061025d6105b336600461150c565b60009081526001602052604090205490565b3480156105d157600080fd5b506101f26105e0366004611641565b610c28565b6101f26105f3366004611762565b610c4d565b34801561060457600080fd5b506102fd610613366004611932565b63f23a6e6160e01b95945050505050565b34801561063057600080fd5b5060025461025d565b7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc161066381610dd7565b6000610673898989898989610954565b905061067f8184610de4565b6000817f4cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca8b8b8b8b8b8a6040516106bb969594939291906119bf565b60405180910390a3505050505050505050565b60006001600160e01b03198216630271189760e51b14806106f357506106f382610ed3565b92915050565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63610725816000610ae5565b610733576107338133610f08565b6000610743888888888888610954565b905061074f8185610f61565b61075b88888888610ffd565b6000817fc2617efa69bab66782fa219543714338489c4e9e178271560a91b82c3f612b588a8a8a8a60405161079394939291906119fc565b60405180910390a36107a4816110d0565b5050505050505050565b6000818152600160205260408120546001811180156107cd5750428111155b9392505050565b6000828152602081905260409020600101546107ef81610dd7565b6107f98383611109565b505050565b60008181526001602052604081205481905b1192915050565b6001600160a01b038116331461088c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610896828261118d565b5050565b6000818152600160208190526040822054610810565b3330146109135760405162461bcd60e51b815260206004820152602b60248201527f54696d656c6f636b436f6e74726f6c6c65723a2063616c6c6572206d7573742060448201526a62652074696d656c6f636b60a81b6064820152608401610883565b60025460408051918252602082018390527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1600255565b6000868686868686604051602001610971969594939291906119bf565b6040516020818303038152906040528051906020012090509695505050505050565b7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc16109bd81610dd7565b8887146109dc5760405162461bcd60e51b815260040161088390611a2e565b8885146109fb5760405162461bcd60e51b815260040161088390611a2e565b6000610a0d8b8b8b8b8b8b8b8b610b0e565b9050610a198184610de4565b60005b8a811015610ad75780827f4cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca8e8e85818110610a5957610a59611a71565b9050602002016020810190610a6e9190611a87565b8d8d86818110610a8057610a80611a71565b905060200201358c8c87818110610a9957610a99611a71565b9050602002810190610aab9190611aa2565b8c8b604051610abf969594939291906119bf565b60405180910390a3610ad081611afe565b9050610a1c565b505050505050505050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008888888888888888604051602001610b2f989796959493929190611ba8565b60405160208183030381529060405280519060200120905098975050505050505050565b7ffd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783610b7d81610dd7565b610b868261089a565b610bec5760405162461bcd60e51b815260206004820152603160248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e2063616044820152701b9b9bdd0818994818d85b98d95b1b1959607a1b6064820152608401610883565b6000828152600160205260408082208290555183917fbaa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb7091a25050565b600082815260208190526040902060010154610c4381610dd7565b6107f9838361118d565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63610c79816000610ae5565b610c8757610c878133610f08565b878614610ca65760405162461bcd60e51b815260040161088390611a2e565b878414610cc55760405162461bcd60e51b815260040161088390611a2e565b6000610cd78a8a8a8a8a8a8a8a610b0e565b9050610ce38185610f61565b60005b89811015610dc15760008b8b83818110610d0257610d02611a71565b9050602002016020810190610d179190611a87565b905060008a8a84818110610d2d57610d2d611a71565b9050602002013590503660008a8a86818110610d4b57610d4b611a71565b9050602002810190610d5d9190611aa2565b91509150610d6d84848484610ffd565b84867fc2617efa69bab66782fa219543714338489c4e9e178271560a91b82c3f612b5886868686604051610da494939291906119fc565b60405180910390a35050505080610dba90611afe565b9050610ce6565b50610dcb816110d0565b50505050505050505050565b610de18133610f08565b50565b610ded826107fe565b15610e525760405162461bcd60e51b815260206004820152602f60248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e20616c60448201526e1c9958591e481cd8da19591d5b1959608a1b6064820152608401610883565b600254811015610eb35760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e746044820152652064656c617960d01b6064820152608401610883565b610ebd8142611c49565b6000928352600160205260409092209190915550565b60006001600160e01b03198216637965db0b60e01b14806106f357506301ffc9a760e01b6001600160e01b03198316146106f3565b610f128282610ae5565b61089657610f1f816111f2565b610f2a836020611204565b604051602001610f3b929190611c80565b60408051601f198184030181529082905262461bcd60e51b825261088391600401611cf5565b610f6a826107ae565b610f865760405162461bcd60e51b815260040161088390611d28565b801580610fa25750600081815260016020819052604090912054145b6108965760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a206d697373696e6720646570656044820152656e64656e637960d01b6064820152608401610883565b6000846001600160a01b031684848460405161101a929190611d72565b60006040518083038185875af1925050503d8060008114611057576040519150601f19603f3d011682016040523d82523d6000602084013e61105c565b606091505b50509050806110c95760405162461bcd60e51b815260206004820152603360248201527f54696d656c6f636b436f6e74726f6c6c65723a20756e6465726c79696e6720746044820152721c985b9cd858dd1a5bdb881c995d995c9d1959606a1b6064820152608401610883565b5050505050565b6110d9816107ae565b6110f55760405162461bcd60e51b815260040161088390611d28565b600090815260016020819052604090912055565b6111138282610ae5565b610896576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556111493390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6111978282610ae5565b15610896576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60606106f36001600160a01b03831660145b60606000611213836002611d82565b61121e906002611c49565b6001600160401b0381111561123557611235611525565b6040519080825280601f01601f19166020018201604052801561125f576020820181803683370190505b509050600360fc1b8160008151811061127a5761127a611a71565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106112a9576112a9611a71565b60200101906001600160f81b031916908160001a90535060006112cd846002611d82565b6112d8906001611c49565b90505b6001811115611350576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061130c5761130c611a71565b1a60f81b82828151811061132257611322611a71565b60200101906001600160f81b031916908160001a90535060049490941c9361134981611da1565b90506112db565b5083156107cd5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610883565b80356001600160a01b03811681146113b657600080fd5b919050565b60008083601f8401126113cd57600080fd5b5081356001600160401b038111156113e457600080fd5b6020830191508360208285010111156113fc57600080fd5b9250929050565b600080600080600080600060c0888a03121561141e57600080fd5b6114278861139f565b96506020880135955060408801356001600160401b0381111561144957600080fd5b6114558a828b016113bb565b989b979a50986060810135976080820135975060a09091013595509350505050565b60006020828403121561148957600080fd5b81356001600160e01b0319811681146107cd57600080fd5b60008060008060008060a087890312156114ba57600080fd5b6114c38761139f565b95506020870135945060408701356001600160401b038111156114e557600080fd5b6114f189828a016113bb565b979a9699509760608101359660809091013595509350505050565b60006020828403121561151e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561156357611563611525565b604052919050565b600082601f83011261157c57600080fd5b81356001600160401b0381111561159557611595611525565b6115a8601f8201601f191660200161153b565b8181528460208386010111156115bd57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156115f057600080fd5b6115f98561139f565b93506116076020860161139f565b92506040850135915060608501356001600160401b0381111561162957600080fd5b6116358782880161156b565b91505092959194509250565b6000806040838503121561165457600080fd5b823591506116646020840161139f565b90509250929050565b60008083601f84011261167f57600080fd5b5081356001600160401b0381111561169657600080fd5b6020830191508360208260051b85010111156113fc57600080fd5b600080600080600080600080600060c08a8c0312156116cf57600080fd5b89356001600160401b03808211156116e657600080fd5b6116f28d838e0161166d565b909b50995060208c013591508082111561170b57600080fd5b6117178d838e0161166d565b909950975060408c013591508082111561173057600080fd5b5061173d8c828d0161166d565b9a9d999c50979a969997986060880135976080810135975060a0013595509350505050565b60008060008060008060008060a0898b03121561177e57600080fd5b88356001600160401b038082111561179557600080fd5b6117a18c838d0161166d565b909a50985060208b01359150808211156117ba57600080fd5b6117c68c838d0161166d565b909850965060408b01359150808211156117df57600080fd5b506117ec8b828c0161166d565b999c989b509699959896976060870135966080013595509350505050565b600082601f83011261181b57600080fd5b813560206001600160401b0382111561183657611836611525565b8160051b61184582820161153b565b928352848101820192828101908785111561185f57600080fd5b83870192505b8483101561187e57823582529183019190830190611865565b979650505050505050565b600080600080600060a086880312156118a157600080fd5b6118aa8661139f565b94506118b86020870161139f565b935060408601356001600160401b03808211156118d457600080fd5b6118e089838a0161180a565b945060608801359150808211156118f657600080fd5b61190289838a0161180a565b9350608088013591508082111561191857600080fd5b506119258882890161156b565b9150509295509295909350565b600080600080600060a0868803121561194a57600080fd5b6119538661139f565b94506119616020870161139f565b9350604086013592506060860135915060808601356001600160401b0381111561198a57600080fd5b6119258882890161156b565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038716815285602082015260a0604082015260006119e760a083018688611996565b60608301949094525060800152949350505050565b60018060a01b0385168152836020820152606060408201526000611a24606083018486611996565b9695505050505050565b60208082526023908201527f54696d656c6f636b436f6e74726f6c6c65723a206c656e677468206d69736d616040820152620e8c6d60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a9957600080fd5b6107cd8261139f565b6000808335601e19843603018112611ab957600080fd5b8301803591506001600160401b03821115611ad357600080fd5b6020019150368190038213156113fc57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b1057611b10611ae8565b5060010190565b81835260006020808501808196508560051b810191508460005b87811015611b9b5782840389528135601e19883603018112611b5257600080fd5b870185810190356001600160401b03811115611b6d57600080fd5b803603821315611b7c57600080fd5b611b87868284611996565b9a87019a9550505090840190600101611b31565b5091979650505050505050565b60a0808252810188905260008960c08301825b8b811015611be9576001600160a01b03611bd48461139f565b16825260209283019290910190600101611bbb565b5083810360208501528881526001600160fb1b03891115611c0957600080fd5b8860051b9150818a60208301370182810360209081016040850152611c319082018789611b17565b60608401959095525050608001529695505050505050565b808201808211156106f3576106f3611ae8565b60005b83811015611c77578181015183820152602001611c5f565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611cb8816017850160208801611c5c565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611ce9816028840160208801611c5c565b01602801949350505050565b6020815260008251806020840152611d14816040850160208701611c5c565b601f01601f19169190910160400192915050565b6020808252602a908201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e206973604082015269206e6f7420726561647960b01b606082015260800190565b8183823760009101908152919050565b6000816000190483118215151615611d9c57611d9c611ae8565b500290565b600081611db057611db0611ae8565b50600019019056fea2646970667358221220b86a8c6d3978623bedb41d450f28dd69d463d1085cf173b9a0fdf9ade32262b064736f6c6343000810003360e060405260646200001b670de0b6b3a7640000600a620001f0565b6200002791906200021e565b6003556200003f6002670de0b6b3a76400006200021e565b6004553480156200004f57600080fd5b506040516200168b3803806200168b83398101604081905262000072916200025e565b6200007d3362000108565b6001600160a01b0383811660805282811660a052811660c052600280546001600160a01b031916331790557f6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc060005260016020527faa1c8b08dbb9bd22207628d19d6b99db3f22a1475a05809121f154277abd52d854620000ff903362000158565b505050620002a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000164828262000168565b5050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620001645760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b60008160001904831182151516156200021957634e487b7160e01b600052601160045260246000fd5b500290565b6000826200023c57634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160a01b03811681146200025957600080fd5b919050565b6000806000606084860312156200027457600080fd5b6200027f8462000241565b92506200028f6020850162000241565b91506200029f6040850162000241565b90509250925092565b60805160a05160c051611397620002f4600039600081816104120152818161090501526109f8015260008181610381015281816108c201526109b50152600061086801526113976000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806391d14854116100f9578063c614368e11610097578063d88ff1f411610071578063d88ff1f4146103d2578063e3433615146103e7578063f2fde38b146103fa578063f5389d4a1461040d57600080fd5b8063c614368e146103a3578063d0e34b9f146103ac578063d547741f146103bf57600080fd5b8063b2461417116100d3578063b246141714610343578063b88fd16e14610356578063ba7b5fd014610369578063c45b0fca1461037c57600080fd5b806391d148541461031357806393fb8f7614610326578063a217fddf1461033b57600080fd5b806342b735e611610166578063531aa03e11610140578063531aa03e146102b35780636fe99db2146102e7578063715018a6146102fa5780638da5cb5b1461030257600080fd5b806342b735e61461026457806344a7b4c9146102775780634f925dc81461028a57600080fd5b806301ffc9a7146101ae57806302f1ce01146101d6578063248a9ca3146101ed5780632f2ff15d1461021157806336568abe1461022657806341d1de9714610239575b600080fd5b6101c16101bc36600461106e565b610434565b60405190151581526020015b60405180910390f35b6101df60045481565b6040519081526020016101cd565b6101df6101fb366004611098565b6000908152600160208190526040909120015490565b61022461021f3660046110c6565b61046b565b005b6102246102343660046110c6565b610496565b61024c610247366004611098565b610519565b6040516001600160a01b0390911681526020016101cd565b6102246102723660046110f6565b610543565b610224610285366004611113565b610566565b61024c6102983660046110f6565b6006602052600090815260409020546001600160a01b031681565b61024c6102c136600461116f565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b6102246102f53660046110f6565b61062f565b61022461064f565b6000546001600160a01b031661024c565b6101c16103213660046110c6565b610663565b6101df60008051602061134283398151915281565b6101df600081565b6102246103513660046110f6565b61068e565b60025461024c906001600160a01b031681565b610224610377366004611098565b6106b8565b61024c7f000000000000000000000000000000000000000000000000000000000000000081565b6101df60035481565b6102246103ba366004611098565b6106ee565b6102246103cd3660046110c6565b610724565b6103da61074a565b6040516101cd919061119d565b61024c6103f536600461116f565b6107ac565b6102246104083660046110f6565b610bca565b61024c7f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216637965db0b60e01b148061046557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152600160208190526040909120015461048781610c40565b6104918383610c4a565b505050565b6001600160a01b038116331461050b5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105158282610cb5565b5050565b6007818154811061052957600080fd5b6000918252602090912001546001600160a01b0316905081565b61054b610d1c565b6105636000805160206113428339815191528261046b565b50565b60008051602061134283398151915261057e81610c40565b6001600160a01b038086166000908152600560209081526040808320888516845290915290205416806105c45760405163a7fff15b60e01b815260040160405180910390fd5b60405163015825eb60e21b81526001600160a01b038581166004830152848116602483015282169063056097ac90604401600060405180830381600087803b15801561060f57600080fd5b505af1158015610623573d6000803e3d6000fd5b50505050505050505050565b610637610d1c565b61056360008051602061134283398151915282610724565b610657610d1c565b6106616000610d76565b565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b610696610d1c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6106c0610d1c565b670de0b6b3a76400008111156106e957604051630a953df960e31b815260040160405180910390fd5b600355565b6106f6610d1c565b670de0b6b3a764000081111561071f57604051630a953df960e31b815260040160405180910390fd5b600455565b6000828152600160208190526040909120015461074081610c40565b6104918383610cb5565b606060078054806020026020016040519081016040528092919081815260200182805480156107a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610784575b5050505050905090565b6000816001600160a01b0316836001600160a01b0316036107e05760405163c06cd3c360e01b815260040160405180910390fd5b6001600160a01b03831615806107fd57506001600160a01b038216155b1561081b57604051634b46d9cd60e11b815260040160405180910390fd5b6001600160a01b03838116600090815260056020908152604080832086851684529091529020541615610861576040516312e0598f60e01b815260040160405180910390fd5b600061088c7f0000000000000000000000000000000000000000000000000000000000000000610dc6565b6001600160a01b0380861660009081526006602052604080822054878416835291205492935081169116816109a05760006108e67f0000000000000000000000000000000000000000000000000000000000000000610dc6565b60405163485cc95560e01b81526001600160a01b0389811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301529194508492509082169063485cc95590604401600060405180830381600087803b15801561095857600080fd5b505af115801561096c573d6000803e3d6000fd5b505050506001600160a01b03878116600090815260066020526040902080546001600160a01b031916918516919091179055505b6001600160a01b038116610a935760006109d97f0000000000000000000000000000000000000000000000000000000000000000610dc6565b60405163485cc95560e01b81526001600160a01b0388811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301529193508392509082169063485cc95590604401600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505050506001600160a01b03868116600090815260066020526040902080546001600160a01b031916918416919091179055505b60405163c0c53b8b60e01b81526001600160a01b0383811660048301528281166024830152306044830152939450849384169063c0c53b8b90606401600060405180830381600087803b158015610ae957600080fd5b505af1158015610afd573d6000803e3d6000fd5b505050506001600160a01b0386811660008181526005602081815260408084208b87168086529083528185208054978c166001600160a01b03199889168117909155938352818520868652835281852080548816851790556007805460018101825595527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890940180549096168317909555935190815290927f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b910160405180910390a350505092915050565b610bd2610d1c565b6001600160a01b038116610c375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610502565b61056381610d76565b6105638133610e60565b610c548282610663565b6105155760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610cbf8282610663565b156105155760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000546001600160a01b031633146106615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610502565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610e5b5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610502565b919050565b610e6a8282610663565b61051557610e7781610eb9565b610e82836020610ecb565b604051602001610e9392919061120e565b60408051601f198184030181529082905262461bcd60e51b825261050291600401611283565b60606104656001600160a01b03831660145b60606000610eda8360026112cc565b610ee59060026112eb565b67ffffffffffffffff811115610efd57610efd6112fe565b6040519080825280601f01601f191660200182016040528015610f27576020820181803683370190505b509050600360fc1b81600081518110610f4257610f42611314565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610f7157610f71611314565b60200101906001600160f81b031916908160001a9053506000610f958460026112cc565b610fa09060016112eb565b90505b6001811115611018576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610fd457610fd4611314565b1a60f81b828281518110610fea57610fea611314565b60200101906001600160f81b031916908160001a90535060049490941c936110118161132a565b9050610fa3565b5083156110675760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610502565b9392505050565b60006020828403121561108057600080fd5b81356001600160e01b03198116811461106757600080fd5b6000602082840312156110aa57600080fd5b5035919050565b6001600160a01b038116811461056357600080fd5b600080604083850312156110d957600080fd5b8235915060208301356110eb816110b1565b809150509250929050565b60006020828403121561110857600080fd5b8135611067816110b1565b6000806000806080858703121561112957600080fd5b8435611134816110b1565b93506020850135611144816110b1565b92506040850135611154816110b1565b91506060850135611164816110b1565b939692955090935050565b6000806040838503121561118257600080fd5b823561118d816110b1565b915060208301356110eb816110b1565b6020808252825182820181905260009190848201906040850190845b818110156111de5783516001600160a01b0316835292840192918401916001016111b9565b50909695505050505050565b60005b838110156112055781810151838201526020016111ed565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516112468160178501602088016111ea565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516112778160288401602088016111ea565b01602801949350505050565b60208152600082518060208401526112a28160408501602087016111ea565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156112e6576112e66112b6565b500290565b80820180821115610465576104656112b6565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081611339576113396112b6565b50600019019056fe6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc0a2646970667358221220f89af9147d951c2fe23ccd034ca3555841dc1bb69de3aff929cd5446672c9df864736f6c634300081000335f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5b09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63fd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f7836101606040523480156200001257600080fd5b5060405162004a6338038062004a6383398101604081905262000035916200080b565b80600483600161c4e068056bc75e2d6310000060405180604001604052806008815260200167537461697277617960c01b815250806200007a6200016b60201b60201c565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120526000620001178282620008ef565b506200012590508362000186565b6200013082620001c7565b6200013b816200026e565b5050506001600160a01b0316610140526200015681620002af565b50620001628162000427565b505050620009e3565b6040805180820190915260018152603160f81b602082015290565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b600081116200022d5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b6064811115620003345760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a40162000224565b60006200034062000490565b90508015801590620003525750600a54155b15620003cd57600a6000016040518060400160405280600063ffffffff1681526020016200038b84620004c860201b6200151b1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b620003e882600a6200053760201b620015881790919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b600b54604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600a5460009015620004c157620004b3600a6200058a60201b620015be1760201c565b6001600160e01b0316905090565b5060095490565b60006001600160e01b03821115620005335760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000224565b5090565b60008062000574846000016200055843620005d860201b620015fc1760201c565b6200056e86620004c860201b6200151b1760201c565b6200063f565b6001600160e01b03918216969116945092505050565b80546000908015620005ce57620005b683620005a8600184620009bb565b600091825260209091200190565b5464010000000090046001600160e01b0316620005d1565b60005b9392505050565b600063ffffffff821115620005335760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000224565b825460009081908015620007945760006200066187620005a8600185620009bb565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015620006e55760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b6579000000000000000000604482015260640162000224565b805163ffffffff8088169116036200073357846200070a88620005a8600186620009bb565b80546001600160e01b03929092166401000000000263ffffffff90921691909117905562000783565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150620007ea9050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b6001600160a01b03811681146200080857600080fd5b50565b600080604083850312156200081f57600080fd5b82516200082c81620007f2565b60208401519092506200083f81620007f2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200087557607f821691505b6020821081036200089657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620008ea57600081815260208120601f850160051c81016020861015620008c55750805b601f850160051c820191505b81811015620008e657828155600101620008d1565b5050505b505050565b81516001600160401b038111156200090b576200090b6200084a565b62000923816200091c845462000860565b846200089c565b602080601f8311600181146200095b5760008415620009425750858301515b600019600386901b1c1916600185901b178555620008e6565b600085815260208120601f198616915b828110156200098c578886015182559484019460019091019084016200096b565b5085821015620009ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115620009dd57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a05160c05160e05161010051610120516101405161401762000a4c600039600081816108be0152818161204d015261224101526000612560015260006125af0152600061258a015260006124e30152600061250d0152600061253701526140176000f3fe6080604052600436106102555760003560e01c80637b3c71d311610139578063c28bc2fa116100b6578063ea0217cf1161007a578063ea0217cf14610800578063eb9019d414610820578063ece40cc114610840578063f23a6e6114610860578063f8ce560a1461088c578063fc0c546a146108ac57600080fd5b8063c28bc2fa14610752578063c59057e414610765578063d33219b414610785578063dd4e2ba5146107b7578063deaaa7cc146107cc57600080fd5b8063a890c910116100fd578063a890c910146106b1578063ab58fb8e146106d1578063b58131b0146106f1578063bc197c8114610706578063c01f9e371461073257600080fd5b80637b3c71d3146106285780637d5e81e21461064857806397c3d334146106685780639a802a6d1461067c578063a7713a701461069c57600080fd5b8063342cfab6116101d2578063544ffc9c11610196578063544ffc9c1461051657806354fd4d501461057e57806356781388146105a85780635f398a14146105c857806360c4247f146105e857806370b0f6601461060857600080fd5b8063342cfab6146104025780633932abb1146104665780633bccf4fd1461047b5780633e4f49e61461049b57806343859632146104c857600080fd5b8063150b7a0211610219578063150b7a0214610337578063160cbed71461037b5780632656227d1461039b5780632d63f693146103ae5780632fe3e261146103ce57600080fd5b806301ffc9a71461027d57806302a251a3146102b257806303420181146102d557806306f3f9e6146102f557806306fdde031461031557600080fd5b3661027857306102636108e0565b6001600160a01b03161461027657600080fd5b005b600080fd5b34801561028957600080fd5b5061029d6102983660046130be565b6108f9565b60405190151581526020015b60405180910390f35b3480156102be57600080fd5b506102c761090a565b6040519081526020016102a9565b3480156102e157600080fd5b506102c76102f03660046131fc565b610915565b34801561030157600080fd5b506102766103103660046132a2565b610a0d565b34801561032157600080fd5b5061032a610aa0565b6040516102a99190613301565b34801561034357600080fd5b50610362610352366004613329565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016102a9565b34801561038757600080fd5b506102c7610396366004613505565b610b32565b6102c76103a9366004613505565b610d32565b3480156103ba57600080fd5b506102c76103c93660046132a2565b610e1f565b3480156103da57600080fd5b506102c77fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561040e57600080fd5b5061044e61041d366004613594565b60009182526008602090815260408084206001600160a01b039390931684529190529020546001600160801b031690565b6040516001600160801b0390911681526020016102a9565b34801561047257600080fd5b506102c7610e56565b34801561048757600080fd5b506102c76104963660046135c4565b610e61565b3480156104a757600080fd5b506104bb6104b63660046132a2565b610ed7565b6040516102a99190613628565b3480156104d457600080fd5b5061029d6104e3366004613594565b60009182526008602090815260408084206001600160a01b039390931684529190529020546001600160801b0316151590565b34801561052257600080fd5b506105636105313660046132a2565b600090815260076020526040902080546001909101546001600160801b0380831693600160801b909304811692911690565b604080519384526020840192909252908201526060016102a9565b34801561058a57600080fd5b506040805180820190915260018152603160f81b602082015261032a565b3480156105b457600080fd5b506102c76105c3366004613650565b610ee2565b3480156105d457600080fd5b506102c76105e336600461367c565b610f0b565b3480156105f457600080fd5b506102c76106033660046132a2565b610f55565b34801561061457600080fd5b506102766106233660046132a2565b610fec565b34801561063457600080fd5b506102c76106433660046136ff565b611073565b34801561065457600080fd5b506102c7610663366004613758565b6110c5565b34801561067457600080fd5b5060646102c7565b34801561068857600080fd5b506102c761069736600461380c565b6110dc565b3480156106a857600080fd5b506102c76110f3565b3480156106bd57600080fd5b506102766106cc366004613864565b61111d565b3480156106dd57600080fd5b506102c76106ec3660046132a2565b6111a4565b3480156106fd57600080fd5b506102c761123e565b34801561071257600080fd5b50610362610721366004613881565b63bc197c8160e01b95945050505050565b34801561073e57600080fd5b506102c761074d3660046132a2565b611249565b610276610760366004613914565b611278565b34801561077157600080fd5b506102c7610780366004613505565b611387565b34801561079157600080fd5b50600b546001600160a01b03165b6040516001600160a01b0390911681526020016102a9565b3480156107c357600080fd5b5061032a6113c1565b3480156107d857600080fd5b506102c77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561080c57600080fd5b5061027661081b3660046132a2565b6113e1565b34801561082c57600080fd5b506102c761083b366004613957565b611468565b34801561084c57600080fd5b5061027661085b3660046132a2565b611489565b34801561086c57600080fd5b5061036261087b366004613983565b63f23a6e6160e01b95945050505050565b34801561089857600080fd5b506102c76108a73660046132a2565b611510565b3480156108b857600080fd5b5061079f7f000000000000000000000000000000000000000000000000000000000000000081565b60006108f4600b546001600160a01b031690565b905090565b600061090482611661565b92915050565b60006108f460055490565b6000806109b96109b17fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c6040516109519291906139eb565b60405180910390208b80519060200120604051602001610996959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b60405160208183030381529060405280519060200120611686565b8686866116d4565b90506109ff8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92506116f2915050565b9a9950505050505050505050565b610a156108e0565b6001600160a01b0316336001600160a01b031614610a4e5760405162461bcd60e51b8152600401610a45906139fb565b60405180910390fd5b30610a576108e0565b6001600160a01b031614610a945760008036604051610a779291906139eb565b604051809103902090505b80610a8d6002611857565b03610a8257505b610a9d816118cd565b50565b606060008054610aaf90613a32565b80601f0160208091040260200160405190810160405280929190818152602001828054610adb90613a32565b8015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b5050505050905090565b600080610b4186868686611387565b90506004610b4e82610ed7565b6007811115610b5f57610b5f613612565b14610b7c5760405162461bcd60e51b8152600401610a4590613a6c565b600b546040805163793d064960e11b815290516000926001600160a01b03169163f27a0c929160048083019260209291908290030181865afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea9190613aad565b600b5460405163b1c5f42760e01b81529192506001600160a01b03169063b1c5f42790610c24908a908a908a906000908b90600401613b8f565b602060405180830381865afa158015610c41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c659190613aad565b6000838152600c602052604080822092909255600b5491516308f2a0bb60e41b81526001600160a01b0390921691638f2a0bb091610cb0918b918b918b91908b908990600401613bdd565b600060405180830381600087803b158015610cca57600080fd5b505af1158015610cde573d6000803e3d6000fd5b505050507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892828242610d109190613c4b565b6040805192835260208301919091520160405180910390a15095945050505050565b600080610d4186868686611387565b90506000610d4e82610ed7565b90506004816007811115610d6457610d64613612565b1480610d8157506005816007811115610d7f57610d7f613612565b145b610d9d5760405162461bcd60e51b8152600401610a4590613a6c565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610dfb8288888888611a19565b610e088288888888611abb565b610e158288888888611ac8565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60006108f460045490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610eaf906109b190608001610996565b9050610ecc87828860405180602001604052806000815250611b01565b979650505050505050565b600061090482611b24565b600080339050610f0384828560405180602001604052806000815250611b01565b949350505050565b600080339050610ecc87828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506116f2915050565b600a54600090808203610f6c575050600954919050565b6000600a610f7b600184613c5e565b81548110610f8b57610f8b613c71565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b03169282019290925291508410610fe157602001516001600160e01b03169392505050565b610f03600a85611c6e565b610ff46108e0565b6001600160a01b0316336001600160a01b0316146110245760405162461bcd60e51b8152600401610a45906139fb565b3061102d6108e0565b6001600160a01b03161461106a576000803660405161104d9291906139eb565b604051809103902090505b806110636002611857565b0361105857505b610a9d81611d20565b6000803390506110bb86828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b0192505050565b9695505050505050565b60006110d385858585611d61565b95945050505050565b60006110e9848484612024565b90505b9392505050565b600a546000901561111657611108600a6115be565b6001600160e01b0316905090565b5060095490565b6111256108e0565b6001600160a01b0316336001600160a01b0316146111555760405162461bcd60e51b8152600401610a45906139fb565b3061115e6108e0565b6001600160a01b03161461119b576000803660405161117e9291906139eb565b604051809103902090505b806111946002611857565b0361118957505b610a9d816120ba565b600b546000828152600c602052604080822054905163d45c443560e01b81526004810191909152909182916001600160a01b039091169063d45c443590602401602060405180830381865afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112259190613aad565b90508060011461123557806110ec565b60009392505050565b60006108f460065490565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610e47565b6112806108e0565b6001600160a01b0316336001600160a01b0316146112b05760405162461bcd60e51b8152600401610a45906139fb565b306112b96108e0565b6001600160a01b0316146112f657600080366040516112d99291906139eb565b604051809103902090505b806112ef6002611857565b036112e457505b600080856001600160a01b03168585856040516113149291906139eb565b60006040518083038185875af1925050503d8060008114611351576040519150601f19603f3d011682016040523d82523d6000602084013e611356565b606091505b509150915061137e8282604051806060016040528060288152602001613f8860289139612123565b50505050505050565b6000848484846040516020016113a09493929190613c87565b60408051601f19818403018152919052805160209091012095945050505050565b6060604051806060016040528060328152602001613fb060329139905090565b6113e96108e0565b6001600160a01b0316336001600160a01b0316146114195760405162461bcd60e51b8152600401610a45906139fb565b306114226108e0565b6001600160a01b03161461145f57600080366040516114429291906139eb565b604051809103902090505b806114586002611857565b0361144d57505b610a9d8161213c565b60006110ec838361148460408051602081019091526000815290565b612024565b6114916108e0565b6001600160a01b0316336001600160a01b0316146114c15760405162461bcd60e51b8152600401610a45906139fb565b306114ca6108e0565b6001600160a01b03161461150757600080366040516114ea9291906139eb565b604051809103902090505b806115006002611857565b036114f557505b610a9d816121dd565b60006109048261221e565b60006001600160e01b038211156115845760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610a45565b5090565b6000806115a684611598436115fc565b6115a18661151b565b6122c8565b6001600160e01b0391821693501690505b9250929050565b80546000908015611235576115e6836115d8600184613c5e565b600091825260209091200190565b54600160201b90046001600160e01b03166110ec565b600063ffffffff8211156115845760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610a45565b60006001600160e01b03198216636e665ced60e01b148061090457506109048261246b565b60006109046116936124d6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006116e5878787876125fd565b91509150610e15816126c1565b600085815260016020819052604082209061170c88610ed7565b600781111561171d5761171d613612565b146117765760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610a45565b604080516020810190915281546001600160401b03169081905260009061179f90889086612024565b90506117ae888888848861280b565b835160000361180357866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4898884896040516117f69493929190613cd2565b60405180910390a2610ecc565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611844959493929190613cfa565b60405180910390a2979650505050505050565b60006118728254600f81810b600160801b909204900b131590565b1561189057604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546001600160801b03191692016001600160801b03169190911790915590565b60648111156119505760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610a45565b600061195a6110f3565b9050801580159061196b5750600a54155b156119cf576040805180820190915260008152600a906020810161198e8461151b565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b6119da600a83611588565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b30611a226108e0565b6001600160a01b031614611ab45760005b8451811015611ab257306001600160a01b0316858281518110611a5857611a58613c71565b60200260200101516001600160a01b031603611aa257611aa2838281518110611a8357611a83613c71565b602002602001015180519060200120600261292a90919063ffffffff16565b611aab81613d40565b9050611a33565b505b5050505050565b611ab48585858585612966565b30611ad16108e0565b6001600160a01b031614611ab457600254600f81810b600160801b909204900b1315611ab4576000600255611ab4565b60006110d385858585611b1f60408051602081019091526000815290565b6116f2565b600080611b30836129da565b90506004816007811115611b4657611b46613612565b14611b515792915050565b6000838152600c602052604090205480611b6c575092915050565b600b54604051632ab0f52960e01b8152600481018390526001600160a01b0390911690632ab0f52990602401602060405180830381865afa158015611bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd99190613d59565b15611be8575060079392505050565b600b54604051632c258a9f60e11b8152600481018390526001600160a01b039091169063584b153e90602401602060405180830381865afa158015611c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c559190613d59565b15611c64575060059392505050565b5060029392505050565b6000438210611cbf5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610a45565b6000611cca836115fc565b84549091506000611cdd86848385612af6565b90508015611d0a57611cf4866115d8600184613c5e565b54600160201b90046001600160e01b0316611d0d565b60005b6001600160e01b03169695505050505050565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b6000611d6b61123e565b611d7a3361083b600143613c5e565b1015611de25760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610a45565b6000611df78686868680519060200120611387565b90508451865114611e1a5760405162461bcd60e51b8152600401610a4590613d7b565b8351865114611e3b5760405162461bcd60e51b8152600401610a4590613d7b565b6000865111611e8c5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610a45565b600081815260016020908152604091829020825191820190925281546001600160401b03169081905215611f0c5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610a45565b6000611f1e611f19610e56565b612b54565b611f2743612b54565b611f319190613dbc565b90506000611f40611f1961090a565b611f4a9083613dbc565b835467ffffffffffffffff19166001600160401b038416178455905060018301805467ffffffffffffffff19166001600160401b0383161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b03811115611fc257611fc261313f565b604051908082528060200260200182016040528015611ff557816020015b6060815260200190600190039081611fe05790505b508c88888e60405161200f99989796959493929190613de3565b60405180910390a15091979650505050505050565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a890604401602060405180830381865afa158015612096573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e99190613aad565b600b54604080516001600160a01b03928316815291831660208301527f08f74ea46ef7894f65eabfb5e6e695de773a000b47c529ab559178069b226401910160405180910390a1600b80546001600160a01b0319166001600160a01b0392909216919091179055565b606083156121325750816110ec565b6110ec8383612bbc565b6000811161219c5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610a45565b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b6000606461222b83610f55565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c90602401602060405180830381865afa158015612290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b49190613aad565b6122be9190613ed2565b6109049190613ef1565b82546000908190801561240e5760006122e6876115d8600185613c5e565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090871610156123675760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b65790000000000000000006044820152606401610a45565b805163ffffffff8088169116036123af5784612388886115d8600186613c5e565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790556123fe565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506124639050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050815b935093915050565b60006001600160e01b0319821663bf26d89760e01b148061249c57506001600160e01b031982166379dd796f60e01b145b806124b757506001600160e01b03198216630271189760e51b145b8061090457506301ffc9a760e01b6001600160e01b0319831614610904565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561252f57507f000000000000000000000000000000000000000000000000000000000000000046145b1561255957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561263457506000905060036126b8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612688573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126b1576000600192509250506126b8565b9150600090505b94509492505050565b60008160048111156126d5576126d5613612565b036126dd5750565b60018160048111156126f1576126f1613612565b0361273e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a45565b600281600481111561275257612752613612565b0361279f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a45565b60038160048111156127b3576127b3613612565b03610a9d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a45565b600082116128695760405162461bcd60e51b815260206004820152602560248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a206e6f2077604482015264195a59da1d60da1b6064820152608401610a45565b60008581526008602090815260408083206001600160a01b03881684529091529020546001600160801b031682116128f75760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20616c6c2060448201526a1dd95a59da1d0818d85cdd60aa1b6064820152608401610a45565b600061290283612be6565b9050815160000361291e5761291986868387612c4f565b611ab2565b611ab286868385612e2f565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b600b5460405163e38335e560e01b81526001600160a01b039091169063e38335e59034906129a1908890889088906000908990600401613b8f565b6000604051808303818588803b1580156129ba57600080fd5b505af11580156129ce573d6000803e3d6000fd5b50505050505050505050565b6000818152600160205260408120600281015460ff16156129fe5750600792915050565b6002810154610100900460ff1615612a195750600292915050565b6000612a2484610e1f565b905080600003612a765760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610a45565b438110612a87575060009392505050565b6000612a9285611249565b9050438110612aa657506001949350505050565b612aaf85613053565b8015612adb57506000858152600760205260409020546001600160801b03808216600160801b90920416115b15612aeb57506004949350505050565b506003949350505050565b60005b81831015612b4c576000612b0d84846130a3565b60008781526020902090915063ffffffff86169082015463ffffffff161115612b3857809250612b46565b612b43816001613c4b565b93505b50612af9565b509392505050565b60006001600160401b038211156115845760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610a45565b815115612bcc5781518083602001fd5b8060405162461bcd60e51b8152600401610a459190613301565b60006001600160801b038211156115845760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610a45565b60008481526008602090815260408083206001600160a01b03871684529091529020546001600160801b031615612c985760405162461bcd60e51b8152600401610a4590613f13565b60008481526008602090815260408083206001600160a01b0387168452909152902080546001600160801b0319166001600160801b03841617905560ff8116612d2b5760008481526007602052604081208054849290612d029084906001600160801b0316613f67565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612e29565b60001960ff821601612d685760008481526007602052604090208054839190601090612d02908490600160801b90046001600160801b0316613f67565b60011960ff821601612d9e5760008481526007602052604081206001018054849290612d029084906001600160801b0316613f67565b60405162461bcd60e51b815260206004820152605460248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20696e766160448201527f6c696420737570706f72742076616c75652c206d75737420626520696e636c7560648201527364656420696e20566f74655479706520656e756d60601b608482015260a401610a45565b50505050565b8051603014612e955760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20696e766160448201526b6c696420766f74654461746160a01b6064820152608401610a45565b6020818101516040808401516000888152600885528281206001600160a01b038916825290945290832054608083811c946001600160801b03948516949390911c92909116908183612ee78688613c4b565b612ef19190613c4b565b612efb9190613c4b565b9050866001600160801b0316811115612f265760405162461bcd60e51b8152600401610a4590613f13565b60008981526008602090815260408083206001600160a01b038c168452825280832080546001600160801b0319166001600160801b03868116919091179091558c8452600783529281902081516060808201845282548087168352600160801b900486169482019490945260019190910154909316838201528051918201905281518190612fb5908990613f67565b6001600160801b03168152602001868360200151612fd39190613f67565b6001600160801b03168152602001858360400151612ff19190613f67565b6001600160801b0390811690915260009b8c526007602090815260409c8d90208351918401518316600160801b0291831691909117815591909b01516001909101805491909b166001600160801b031990911617909955505050505050505050565b600081815260076020526040812060018101548154613085916001600160801b0390811691600160801b900416613f67565b6001600160801b031661309a6108a785610e1f565b11159392505050565b60006130b26002848418613ef1565b6110ec90848416613c4b565b6000602082840312156130d057600080fd5b81356001600160e01b0319811681146110ec57600080fd5b803560ff811681146130f957600080fd5b919050565b60008083601f84011261311057600080fd5b5081356001600160401b0381111561312757600080fd5b6020830191508360208285010111156115b757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561317d5761317d61313f565b604052919050565b60006001600160401b0383111561319e5761319e61313f565b6131b1601f8401601f1916602001613155565b90508281528383830111156131c557600080fd5b828260208301376000602084830101529392505050565b600082601f8301126131ed57600080fd5b6110ec83833560208501613185565b60008060008060008060008060e0898b03121561321857600080fd5b8835975061322860208a016130e8565b965060408901356001600160401b038082111561324457600080fd5b6132508c838d016130fe565b909850965060608b013591508082111561326957600080fd5b506132768b828c016131dc565b94505061328560808a016130e8565b925060a0890135915060c089013590509295985092959890939650565b6000602082840312156132b457600080fd5b5035919050565b6000815180845260005b818110156132e1576020818501810151868301820152016132c5565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110ec60208301846132bb565b6001600160a01b0381168114610a9d57600080fd5b6000806000806080858703121561333f57600080fd5b843561334a81613314565b9350602085013561335a81613314565b92506040850135915060608501356001600160401b0381111561337c57600080fd5b613388878288016131dc565b91505092959194509250565b60006001600160401b038211156133ad576133ad61313f565b5060051b60200190565b600082601f8301126133c857600080fd5b813560206133dd6133d883613394565b613155565b82815260059290921b840181019181810190868411156133fc57600080fd5b8286015b8481101561342057803561341381613314565b8352918301918301613400565b509695505050505050565b600082601f83011261343c57600080fd5b8135602061344c6133d883613394565b82815260059290921b8401810191818101908684111561346b57600080fd5b8286015b84811015613420578035835291830191830161346f565b600082601f83011261349757600080fd5b813560206134a76133d883613394565b82815260059290921b840181019181810190868411156134c657600080fd5b8286015b848110156134205780356001600160401b038111156134e95760008081fd5b6134f78986838b01016131dc565b8452509183019183016134ca565b6000806000806080858703121561351b57600080fd5b84356001600160401b038082111561353257600080fd5b61353e888389016133b7565b9550602087013591508082111561355457600080fd5b6135608883890161342b565b9450604087013591508082111561357657600080fd5b5061358387828801613486565b949793965093946060013593505050565b600080604083850312156135a757600080fd5b8235915060208301356135b981613314565b809150509250929050565b600080600080600060a086880312156135dc57600080fd5b853594506135ec602087016130e8565b93506135fa604087016130e8565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061364a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561366357600080fd5b82359150613673602084016130e8565b90509250929050565b60008060008060006080868803121561369457600080fd5b853594506136a4602087016130e8565b935060408601356001600160401b03808211156136c057600080fd5b6136cc89838a016130fe565b909550935060608801359150808211156136e557600080fd5b506136f2888289016131dc565b9150509295509295909350565b6000806000806060858703121561371557600080fd5b84359350613725602086016130e8565b925060408501356001600160401b0381111561374057600080fd5b61374c878288016130fe565b95989497509550505050565b6000806000806080858703121561376e57600080fd5b84356001600160401b038082111561378557600080fd5b613791888389016133b7565b955060208701359150808211156137a757600080fd5b6137b38883890161342b565b945060408701359150808211156137c957600080fd5b6137d588838901613486565b935060608701359150808211156137eb57600080fd5b508501601f810187136137fd57600080fd5b61338887823560208401613185565b60008060006060848603121561382157600080fd5b833561382c81613314565b92506020840135915060408401356001600160401b0381111561384e57600080fd5b61385a868287016131dc565b9150509250925092565b60006020828403121561387657600080fd5b81356110ec81613314565b600080600080600060a0868803121561389957600080fd5b85356138a481613314565b945060208601356138b481613314565b935060408601356001600160401b03808211156138d057600080fd5b6138dc89838a0161342b565b945060608801359150808211156138f257600080fd5b6138fe89838a0161342b565b935060808801359150808211156136e557600080fd5b6000806000806060858703121561392a57600080fd5b843561393581613314565b93506020850135925060408501356001600160401b0381111561374057600080fd5b6000806040838503121561396a57600080fd5b823561397581613314565b946020939093013593505050565b600080600080600060a0868803121561399b57600080fd5b85356139a681613314565b945060208601356139b681613314565b9350604086013592506060860135915060808601356001600160401b038111156139df57600080fd5b6136f2888289016131dc565b8183823760009101908152919050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c90821680613a4657607f821691505b602082108103613a6657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526021908201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756040820152601b60fa1b606082015260800190565b600060208284031215613abf57600080fd5b5051919050565b600081518084526020808501945080840160005b83811015613aff5781516001600160a01b031687529582019590820190600101613ada565b509495945050505050565b600081518084526020808501945080840160005b83811015613aff57815187529582019590820190600101613b1e565b600081518084526020808501808196508360051b8101915082860160005b85811015613b82578284038952613b708483516132bb565b98850198935090840190600101613b58565b5091979650505050505050565b60a081526000613ba260a0830188613ac6565b8281036020840152613bb48188613b0a565b90508281036040840152613bc88187613b3a565b60608401959095525050608001529392505050565b60c081526000613bf060c0830189613ac6565b8281036020840152613c028189613b0a565b90508281036040840152613c168188613b3a565b60608401969096525050608081019290925260a0909101529392505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561090457610904613c35565b8181038181111561090457610904613c35565b634e487b7160e01b600052603260045260246000fd5b608081526000613c9a6080830187613ac6565b8281036020840152613cac8187613b0a565b90508281036040840152613cc08186613b3a565b91505082606083015295945050505050565b84815260ff841660208201528260408201526080606082015260006110bb60808301846132bb565b85815260ff8516602082015283604082015260a060608201526000613d2260a08301856132bb565b8281036080840152613d3481856132bb565b98975050505050505050565b600060018201613d5257613d52613c35565b5060010190565b600060208284031215613d6b57600080fd5b815180151581146110ec57600080fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b6001600160401b03818116838216019080821115613ddc57613ddc613c35565b5092915050565b60006101208b8352602060018060a01b038c1681850152816040850152613e0c8285018c613ac6565b91508382036060850152613e20828b613b0a565b915083820360808501528189518084528284019150828160051b850101838c0160005b83811015613e7157601f19878403018552613e5f8383516132bb565b94860194925090850190600101613e43565b505086810360a0880152613e85818c613b3a565b945050505050613ea060c08401876001600160401b03169052565b6001600160401b03851660e0840152828103610100840152613ec281856132bb565b9c9b505050505050505050505050565b6000816000190483118215151615613eec57613eec613c35565b500290565b600082613f0e57634e487b7160e01b600052601260045260246000fd5b500490565b60208082526034908201527f476f7665726e6f72436f756e74696e674672616374696f6e616c3a20766f7465604082015273081ddbdd5b1908195e18d95959081dd95a59da1d60621b606082015260800190565b6001600160801b03818116838216019080821115613ddc57613ddc613c3556fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e26706172616d733d6672616374696f6e616ca264697066735822122087fd5ffd58c1d7c8eaae89359e4a22a361e5c4fb27940942ad1053ffa8ea13e064736f6c6343000810003360a06040523480156200001157600080fd5b5060405162000bdb38038062000bdb83398101604081905262000034916200017b565b6040518060400160405280600881526020016711985ad9481554d160c21b81525060405180604001604052806004815260200163199554d160e21b815250816003908162000083919062000257565b50600462000092828262000257565b50505060ff8116608052620000a83383620000b0565b50506200034b565b6001600160a01b0382166200010b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011f919062000323565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600080604083850312156200018f57600080fd5b82519150602083015160ff81168114620001a857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001de57607f821691505b602082108103620001ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017657600081815260208120601f850160051c810160208610156200022e5750805b601f850160051c820191505b818110156200024f578281556001016200023a565b505050505050565b81516001600160401b03811115620002735762000273620001b3565b6200028b81620002848454620001c9565b8462000205565b602080601f831160018114620002c35760008415620002aa5750858301515b600019600386901b1c1916600185901b1785556200024f565b600085815260208120601f198616915b82811015620002f457888601518255948401946001909101908401620002d3565b5085821015620003135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200034557634e487b7160e01b600052601160045260246000fd5b92915050565b60805161087462000367600039600061011b01526108746000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461014557806370a082311461015857806395d89b4114610181578063a457c2d714610189578063a9059cbb1461019c578063dd62ed3e146101af57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c2565b6040516100c391906106be565b60405180910390f35b6100df6100da366004610728565b610254565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610752565b61026e565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6100df610153366004610728565b610292565b6100f361016636600461078e565b6001600160a01b031660009081526020819052604090205490565b6100b66102b4565b6100df610197366004610728565b6102c3565b6100df6101aa366004610728565b610343565b6100f36101bd3660046107b0565b610351565b6060600380546101d1906107e3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906107e3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561037c565b60019150505b92915050565b60003361027c8582856104a0565b61028785858561051a565b506001949350505050565b6000336102628185856102a58383610351565b6102af919061081d565b61037c565b6060600480546101d1906107e3565b600033816102d18286610351565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610287828686840361037c565b60003361026281858561051a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ac8484610351565b9050600019811461051457818110156105075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b610514848484840361037c565b50505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b038316600090815260208190526040902054818110156106585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610514565b600060208083528351808285015260005b818110156106eb578581018301518582016040015282016106cf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072357600080fd5b919050565b6000806040838503121561073b57600080fd5b6107448361070c565b946020939093013593505050565b60008060006060848603121561076757600080fd5b6107708461070c565b925061077e6020850161070c565b9150604084013590509250925092565b6000602082840312156107a057600080fd5b6107a98261070c565b9392505050565b600080604083850312156107c357600080fd5b6107cc8361070c565b91506107da6020840161070c565b90509250929050565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026857634e487b7160e01b600052601160045260246000fdfea2646970667358221220b7dc9271d9a93920669b0b926315cd06a37868c78b9f301594f68cace1b4040464736f6c6343000810003360a06040523480156200001157600080fd5b5060405162000bdb38038062000bdb83398101604081905262000034916200017b565b6040518060400160405280600881526020016746616b652042544360c01b815250604051806040016040528060048152602001636642544360e01b815250816003908162000083919062000257565b50600462000092828262000257565b50505060ff8116608052620000a83383620000b0565b50506200034b565b6001600160a01b0382166200010b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200011f919062000323565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600080604083850312156200018f57600080fd5b82519150602083015160ff81168114620001a857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001de57607f821691505b602082108103620001ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017657600081815260208120601f850160051c810160208610156200022e5750805b601f850160051c820191505b818110156200024f578281556001016200023a565b505050505050565b81516001600160401b03811115620002735762000273620001b3565b6200028b81620002848454620001c9565b8462000205565b602080601f831160018114620002c35760008415620002aa5750858301515b600019600386901b1c1916600185901b1785556200024f565b600085815260208120601f198616915b82811015620002f457888601518255948401946001909101908401620002d3565b5085821015620003135787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200034557634e487b7160e01b600052601160045260246000fd5b92915050565b60805161087462000367600039600061011b01526108746000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461014557806370a082311461015857806395d89b4114610181578063a457c2d714610189578063a9059cbb1461019c578063dd62ed3e146101af57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c2565b6040516100c391906106be565b60405180910390f35b6100df6100da366004610728565b610254565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610752565b61026e565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100c3565b6100df610153366004610728565b610292565b6100f361016636600461078e565b6001600160a01b031660009081526020819052604090205490565b6100b66102b4565b6100df610197366004610728565b6102c3565b6100df6101aa366004610728565b610343565b6100f36101bd3660046107b0565b610351565b6060600380546101d1906107e3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd906107e3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561037c565b60019150505b92915050565b60003361027c8582856104a0565b61028785858561051a565b506001949350505050565b6000336102628185856102a58383610351565b6102af919061081d565b61037c565b6060600480546101d1906107e3565b600033816102d18286610351565b9050838110156103365760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610287828686840361037c565b60003361026281858561051a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b6001600160a01b03821661043f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104ac8484610351565b9050600019811461051457818110156105075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032d565b610514848484840361037c565b50505050565b6001600160a01b03831661057e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032d565b6001600160a01b0382166105e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032d565b6001600160a01b038316600090815260208190526040902054818110156106585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610514565b600060208083528351808285015260005b818110156106eb578581018301518582016040015282016106cf565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072357600080fd5b919050565b6000806040838503121561073b57600080fd5b6107448361070c565b946020939093013593505050565b60008060006060848603121561076757600080fd5b6107708461070c565b925061077e6020850161070c565b9150604084013590509250925092565b6000602082840312156107a057600080fd5b6107a98261070c565b9392505050565b600080604083850312156107c357600080fd5b6107cc8361070c565b91506107da6020840161070c565b90509250929050565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026857634e487b7160e01b600052601160045260246000fdfea26469706673582212205ce394ec17e079ac109b07ce82e5259a65e58b77e131be7a3095da0ee09880c764736f6c6343000810003357726f6e6720616d6f756e74206f6620757365722773206655534420616674657220627579696e6757726f6e6720616d6f756e74206f662075736572277320665553442061667465722072656465656d696e67206c69717569646974790000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d57726f6e6720616d6f756e74206f662075736572277320664254432061667465722072656465656d696e67206c6971756964697479546f6b656e20616d6f756e742073686f756c64207374696c6c206265207468652073616d6557726f6e6720616d6f756e74206f6620757365722773204c5020546f6b656e732061667465722073656c6c696e6757726f6e6720616d6f756e74206f6620757365722773204c5020546f6b656e7320616674657220627579696e6757726f6e6720616d6f756e74206f6620757365722773206642544320616674657220627579696e6757726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656c6c696e6757726f6e6720616d6f756e74206f6620757365722773204c502061667465722073656e64696e67206c697175696469747957726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e7320616674657220627579696e67546f6b656e20616d6f756e742073686f756c642062652074686520696e697469616c57726f6e6720616d6f756e74206f6620746f6b656e732073656e7420746f2074686520706f6f6c57726f6e6720616d6f756e74206f662044414f2773204c5020746f6b656e732061667465722072656465656d696e67206c69717569646974795468652075736572206469646e2774207265636569766520746865697220696e697469616c2031303030206655534457726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656e64696e67206c69717569646974795468652075736572206469646e2774207265636569766520746865697220696e697469616c2031303030206642544357726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656c6c696e6757726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656e64696e67206c697175696469747957726f6e6720616d6f756e74206f6620696e697469616c204c5020546f6b656e7357726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e732061667465722073656c6c696e6757726f6e6720616d6f756e74206f6620757365722773204c5020746f6b656e732061667465722072656465656d696e67206c697175696469747955736572206973206e6f74207374617274696e6720776974682030204c5020746f6b656e735468652044414f206973206e6f74207374617274696e6720776974682030204c5020746f6b656e73a26469706673582212203b3ce66cfec0e6e9fdd9d0040f6f55f82d726fda2fca6ec5ab74827e454b2a5d64736f6c63430008100033",
    "sourceMap": "544:8730:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:19;;;;;-1:-1:-1;;;;;895:19:81;;;;;;-1:-1:-1;;;;;195:32:84;;;177:51;;165:2;150:18;895:19:81;;;;;;;;1088:2292;;;:::i;:::-;;4403:1046;;;:::i;819:17::-;;;;;-1:-1:-1;;;;;819:17:81;;;7108:2164;;;:::i;5455:929::-;;;:::i;920:22::-;;;;;-1:-1:-1;;;;;920:22:81;;;1054:27;;;;;-1:-1:-1;;;;;1054:27:81;;;1017:31;;;;;-1:-1:-1;;;;;1017:31:81;;;6390:712;;;:::i;870:19::-;;;;;-1:-1:-1;;;;;870:19:81;;;1819:584:1;;;:::i;:::-;;;1297:14:84;;1290:22;1272:41;;1260:2;1245:18;1819:584:1;1132:187:84;842:22:81;;;;;-1:-1:-1;;;;;842:22:81;;;948:32;;;;;-1:-1:-1;;;;;948:32:81;;;986:24;;;;;-1:-1:-1;;;;;986:24:81;;;3386:1011;;;:::i;1572:26:1:-;;;;;;;;;1088:2292:81;1146:14;1133:28;;;;;:::i;:::-;2191:25:84;;;2179:2;2164:18;1133:28:81;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1122:8:81;:39;;-1:-1:-1;;;;;;1122:39:81;-1:-1:-1;;;;;1122:39:81;;;;;;;;;1180:33;;-1:-1:-1;;;1180:33:81;;1207:4;1180:33;;;177:51:84;1171:96:81;;1122:39;1180:18;;150::84;;1180:33:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1215:14;1171:96;;;;;;;;;;;;;;;;;:8;:96::i;:::-;1277:20;1308:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1277:42;;1329:28;1368:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1329:58;;1397:23;1431:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1397:48;;1495:4;1502:12;1516:20;1538:15;1466:88;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1455:8:81;:99;;-1:-1:-1;;;;;;1455:99:81;-1:-1:-1;;;;;1455:99:81;;;;;;;;;1594:8;;1570:44;;1594:8;;;1570:44;;;:::i;:::-;-1:-1:-1;;;;;3150:15:84;;;3132:34;;3202:15;;3197:2;3182:18;;3175:43;3082:2;3067:18;1570:44:81;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1564:3:81;:50;;-1:-1:-1;;;;;;1564:50:81;-1:-1:-1;;;;;1564:50:81;;;;;;;;;1625:8;;:60;;-1:-1:-1;;;1625:60:81;;1644:26;1625:60;;;3403:25:84;3444:18;;;3437:60;;;;1625:8:81;;;;:18;;3376::84;;1625:60:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1695:8:81;;1750:3;;1695:60;;-1:-1:-1;;;1695:60:81;;1714:26;1695:60;;;3403:25:84;-1:-1:-1;;;;;1750:3:81;;;3444:18:84;;;3437:60;1695:8:81;;;-1:-1:-1;1695:18:81;;-1:-1:-1;3376:18:84;;1695:60:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:8;;;;;;;;;-1:-1:-1;;;;;1776:8:81;-1:-1:-1;;;;;1776:16:81;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1766:7;:28;;-1:-1:-1;;;;;;1766:28:81;;;-1:-1:-1;;;;;1766:28:81;;;;;;;1831:8;;1804:16;:36;;1831:8;;;;1804:36;;;;;1858:32;;1870:15;;1887:2;;1858:32;;;:::i;:::-;4145:25:84;;;4218:4;4206:17;4201:2;4186:18;;4179:45;4133:2;4118:18;1858:32:81;;;;;;;;;;;;;;;;;;;;;;;1851:4;;:39;;;;;-1:-1:-1;;;;;1851:39:81;;;;;-1:-1:-1;;;;;1851:39:81;;;;;;1919:15;1936:2;1907:32;;;;;:::i;:::-;4145:25:84;;;4218:4;4206:17;4201:2;4186:18;;4179:45;4133:2;4118:18;1907:32:81;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1900:4:81;:39;;-1:-1:-1;;;;;;1900:39:81;-1:-1:-1;;;;;1900:39:81;;;;;;;;;1956:7;;1975:4;;1956:30;;-1:-1:-1;;;1956:30:81;;1975:4;;;1956:30;;;3132:34:84;3182:18;;;3175:43;;;;1956:7:81;;;;:18;;3067::84;;1956:30:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1949:4;:37;;-1:-1:-1;;;;;;1949:37:81;-1:-1:-1;;;;;1949:37:81;;;;;;;;;;2085:27;;-1:-1:-1;;;2085:27:81;;-1:-1:-1;;;2085:27:81;;;5020:62:84;-1:-1:-1;;;;;;;;;;;2085:15:81;;;4993:18:84;;2085:27:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2146:4:81;;:32;;-1:-1:-1;;;2146:32:81;;2172:4;2146:32;;;177:51:84;-1:-1:-1;;;;;2146:4:81;;;;-1:-1:-1;2146:17:81;;-1:-1:-1;150:18:84;;2146:32:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:93;2198:4;;;;;;;;;-1:-1:-1;;;;;2198:4:81;-1:-1:-1;;;;;2198:12:81;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;-1:-1:-1;;;2198:39:81;;2231:4;2198:39;;;177:51:84;-1:-1:-1;;;;;2198:24:81;;;;;;;150:18:84;;2198:39:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2239:1;2189:93;;;;;;;;;;;;;;;;;:8;:93::i;:::-;2301:4;;:14;;;-1:-1:-1;;;2301:14:81;;;;2292:99;;-1:-1:-1;;;;;2301:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2326:16;;2301:42;;-1:-1:-1;;;2301:42:81;;-1:-1:-1;;;;;2326:16:81;;;2301:42;;;177:51:84;2301:24:81;;;;;150:18:84;;2301:42:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2345:1;2292:99;;;;;;;;;;;;;;;;;:8;:99::i;:::-;2410:4;;:29;;-1:-1:-1;;;2410:29:81;;2433:4;2410:29;;;177:51:84;2401:107:81;;-1:-1:-1;;;;;2410:4:81;;:14;;150:18:84;;2410:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2441:15;2401:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;2527:4;;:29;;-1:-1:-1;;;2527:29:81;;2550:4;2527:29;;;177:51:84;2518:107:81;;-1:-1:-1;;;;;2527:4:81;;:14;;150:18:84;;2527:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2558:15;2518:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;2636:4;;2658;;2636:44;;-1:-1:-1;;;2636:44:81;;-1:-1:-1;;;;;2658:4:81;;;2636:44;;;5578:51:84;2665:14:81;5645:18:84;;;5638:34;2636:4:81;;;:13;;5551:18:84;;2636:44:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2690:4:81;;2712;;2690:44;;-1:-1:-1;;;2690:44:81;;-1:-1:-1;;;;;2712:4:81;;;2690:44;;;5578:51:84;2719:14:81;5645:18:84;;;5638:34;2690:4:81;;;:13;;5551:18:84;;2690:44:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2745:4:81;;:32;;-1:-1:-1;;;2745:32:81;;2771:4;2745:32;;;177:51:84;-1:-1:-1;;;;;2745:4:81;;;;:17;;150:18:84;;2745:32:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2797:4:81;;:29;;-1:-1:-1;;;2797:29:81;;2820:4;2797:29;;;177:51:84;2788:110:81;;-1:-1:-1;;;;;;2797:4:81;;;;-1:-1:-1;2797:14:81;;150:18:84;;2797:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2828:14;2788:110;;;;;;;;;;;;;;;;;:8;:110::i;:::-;2917:4;;:29;;-1:-1:-1;;;2917:29:81;;2940:4;2917:29;;;177:51:84;2908:110:81;;-1:-1:-1;;;;;2917:4:81;;:14;;150:18:84;;2917:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2948:14;2908:110;;;;;;;;;;;;;;;;;:8;:110::i;:::-;3208:4;;:14;;;-1:-1:-1;;;3208:14:81;;;;3186:187;;-1:-1:-1;;;;;3208:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;-1:-1:-1;;;3208:39:81;;3241:4;3208:39;;;177:51:84;-1:-1:-1;;;;;3208:24:81;;;;;;;150:18:84;;3208:39:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3278:4;;;;;;;;;-1:-1:-1;;;;;3278:4:81;-1:-1:-1;;;;;3278:18:81;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3261:37;;:14;:37;:::i;:::-;3186:187;;;;;;;;;;;;;;;;;:8;:187::i;:::-;1112:2268;;;1088:2292::o;4403:1046::-;4595:4;;4617;;4595:50;;-1:-1:-1;;;4595:50:81;;-1:-1:-1;;;;;4617:4:81;;;4595:50;;;5578:51:84;4624:20:81;5645:18:84;;;5638:34;4595:4:81;;;:13;;5551:18:84;;4595:50:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4725:9;4720:82;4744:2;4740:1;:6;4720:82;;;4767:4;;:24;;-1:-1:-1;;;4767:24:81;;4785:4;4767:24;;;177:51:84;-1:-1:-1;;;;;4767:4:81;;;;:9;;150:18:84;;4767:24:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4748:3;;;;;:::i;:::-;;;;4720:82;;;-1:-1:-1;4811:4:81;;4821;;4811:30;;-1:-1:-1;;;4811:30:81;;-1:-1:-1;;;;;4821:4:81;;;4811:30;;;3132:34:84;4835:4:81;3182:18:84;;;3175:43;4811:4:81;;;:9;;3067:18:84;;4811:30:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4861:4:81;;:29;;-1:-1:-1;;;4861:29:81;;4884:4;4861:29;;;177:51:84;4852:106:81;;-1:-1:-1;;;;;;4861:4:81;;;;-1:-1:-1;4861:14:81;;150:18:84;;4861:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4892:21;4852:106;;;;;;;;;;;;;;;;;:8;:106::i;:::-;4977:4;;:29;;-1:-1:-1;;;4977:29:81;;5000:4;4977:29;;;177:51:84;4968:106:81;;-1:-1:-1;;;;;4977:4:81;;:14;;150:18:84;;4977:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5008:21;4968:106;;;;;;;;;;;;;;;;;:8;:106::i;:::-;5107:4;;:14;;;-1:-1:-1;;;5107:14:81;;;;5085:183;;-1:-1:-1;;;;;5107:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;-1:-1:-1;;;5107:39:81;;5140:4;5107:39;;;177:51:84;-1:-1:-1;;;;;5107:24:81;;;;;;;150:18:84;;5107:39:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5177:4;;;;;;;;;-1:-1:-1;;;;;5177:4:81;-1:-1:-1;;;;;5177:18:81;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5160:37;;:14;:37;:::i;:::-;5085:183;;;;;;;;;;;;;;;;;:8;:183::i;:::-;5300:4;;:14;;;-1:-1:-1;;;5300:14:81;;;;5278:164;;-1:-1:-1;;;;;5300:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5325:16;;5300:42;;-1:-1:-1;;;5300:42:81;;-1:-1:-1;;;;;5325:16:81;;;5300:42;;;177:51:84;5300:24:81;;;;;150:18:84;;5300:42:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5356:16;5278:164;;;;;;;;;;;;;;;;;:8;:164::i;:::-;4403:1046::o;7108:2164::-;7293:8;;:33;;-1:-1:-1;;;7293:33:81;;7320:4;7293:33;;;177:51:84;7284:94:81;;-1:-1:-1;;;;;7293:8:81;;:18;;150::84;;7293:33:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7328:14;7284:94;;;;;;;;;;;;;;;;;:8;:94::i;:::-;7524:12;7540:1;7524:17;7520:34;;7543:11;;-1:-1:-1;;;7543:11:81;;7551:2;7543:11;;;2191:25:84;-1:-1:-1;;;;;;;;;;;7543:7:81;;;2164:18:84;;7543:11:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7520:34;7625:65;;7684:4;7625:65;;;177:51:84;7593:29:81;;150:18:84;;7625:65:81;;;;;;-1:-1:-1;;7625:65:81;;;;;;;;;;;-1:-1:-1;;;;;;;;7625:65:81;;;;;;7728:16;;7742:1;7728:16;;;;;;;;;7625:65;;-1:-1:-1;;;7728:16:81;;;;;;;;;;;-1:-1:-1;;7780:16:81;;;7794:1;7780:16;;;;;;;;;7701:43;;-1:-1:-1;7754:23:81;;7780:16;-1:-1:-1;7780:16:81;;;;;;;;;-1:-1:-1;;7833:14:81;;;7845:1;7833:14;;;;;;;;;7754:42;;-1:-1:-1;7806:24:81;;7833:14;-1:-1:-1;7833:14:81;;;;;;;;;;;;;;;;;-1:-1:-1;;7878:7:81;;7857:10;;7806:41;;-1:-1:-1;;;;;;7878:7:81;;7857:10;;7878:7;;7857:10;;;;:::i;:::-;;;;;;:29;-1:-1:-1;;;;;7857:29:81;;;-1:-1:-1;;;;;7857:29:81;;;;;7908:1;7896:6;7903:1;7896:9;;;;;;;;:::i;:::-;;;;;;:13;;;;;7957:16;7942:9;7952:1;7942:12;;;;;;;;:::i;:::-;;;;;;;;;;:31;7984:8;;:32;;-1:-1:-1;;;7984:32:81;;8010:4;7984:32;;;177:51:84;-1:-1:-1;;;;;7984:8:81;;;;:17;;150:18:84;;7984:32:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8026:11:81;;-1:-1:-1;;;8026:11:81;;8034:2;8026:11;;;2191:25:84;-1:-1:-1;;;;;;;;;;;8026:7:81;-1:-1:-1;8026:7:81;;-1:-1:-1;2164:18:84;;8026:11:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8089:3:81;;:83;;-1:-1:-1;;;8089:83:81;;8048:18;;-1:-1:-1;;;;;;8089:3:81;;;;-1:-1:-1;8089:11:81;;:83;;8101:7;;8110:6;;8118:9;;8089:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8200:3;;:21;;-1:-1:-1;;;8200:21:81;;;;;2191:25:84;;;8076:96:81;;-1:-1:-1;8183:72:81;;-1:-1:-1;;;;;8200:3:81;;;;:9;;2164:18:84;;8200:21:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8192:30;;;;;;;;:::i;:::-;8232:21;8183:8;:72::i;:::-;8318:3;;:32;;-1:-1:-1;;;8318:32:81;;;;;2191:25:84;;;-1:-1:-1;;;;;;;;;;;8310:7:81;;;-1:-1:-1;;;;;8318:3:81;;;;:20;;2164:18:84;;8318:32:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;8353:2;8318:37;:::i;:::-;8310:46;;;;;;;;;;;;;2191:25:84;;2179:2;2164:18;;2017:205;8310:46:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8383:3:81;;:21;;-1:-1:-1;;;8383:21:81;;;;;2191:25:84;;;8366:71:81;;-1:-1:-1;;;;;;8383:3:81;;;;-1:-1:-1;8383:9:81;;2164:18:84;;8383:21:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8375:30;;;;;;;;:::i;:::-;8415:20;8183:8;:72::i;8366:71::-;8448:3;;:45;;-1:-1:-1;;;8448:45:81;;;;;4145:25:84;;;8448:3:81;4186:18:84;;;4179:45;-1:-1:-1;;;;;8448:3:81;;;;:12;;4118:18:84;;8448:45:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8503:15:81;;-1:-1:-1;;;8503:15:81;;8511:6;8503:15;;;2191:25:84;-1:-1:-1;;;;;;;;;;;8503:7:81;;;2164:18:84;;8503:15:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8545:3:81;;:21;;-1:-1:-1;;;8545:21:81;;;;;2191:25:84;;;8528:74:81;;-1:-1:-1;;;;;;8545:3:81;;;;-1:-1:-1;8545:9:81;;2164:18:84;;8545:21:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8537:30;;;;;;;;:::i;:::-;8577:23;8183:8;:72::i;8528:74::-;8613:3;;:92;;-1:-1:-1;;;8613:92:81;;-1:-1:-1;;;;;8613:3:81;;;;:9;;:92;;8623:7;;8632:6;;8640:9;;8651:53;;8613:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8732:3:81;;:21;;-1:-1:-1;;;8732:21:81;;;;;2191:25:84;;;8715:71:81;;-1:-1:-1;;;;;8732:3:81;;:9;;2164:18:84;;8732:21:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8724:30;;;;;;;;:::i;:::-;8764:20;8183:8;:72::i;8715:71::-;8860:16;;-1:-1:-1;;;8860:16:81;;8868:7;8860:16;;;2191:25:84;-1:-1:-1;;;;;;;;;;;8860:7:81;;;2164:18:84;;8860:16:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8886:3:81;;:94;;-1:-1:-1;;;8886:94:81;;-1:-1:-1;;;;;8886:3:81;;;;-1:-1:-1;8886:11:81;;-1:-1:-1;8886:94:81;;8898:7;;8907:6;;8915:9;;8926:53;;8886:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9007:3:81;;:21;;-1:-1:-1;;;9007:21:81;;;;;2191:25:84;;;8990:73:81;;-1:-1:-1;;;;;9007:3:81;;:9;;2164:18:84;;9007:21:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8999:30;;;;;;;;:::i;:::-;9039:22;8183:8;:72::i;8990:73::-;9073:16;;-1:-1:-1;;;9073:16:81;;9081:7;9073:16;;;2191:25:84;-1:-1:-1;;;;;;;;;;;9073:7:81;;;2164:18:84;;9073:16:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9100:7:81;;9122:4;;9128;;9134:8;;9100:58;;-1:-1:-1;;;9100:58:81;;-1:-1:-1;;;;;9100:7:81;;;;-1:-1:-1;9100:21:81;;-1:-1:-1;9100:58:81;;9122:4;;;;9128;;;;9134:8;;;;9152:4;;9100:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9177:8:81;;:33;;-1:-1:-1;;;9177:33:81;;9204:4;9177:33;;;177:51:84;9168:97:81;;-1:-1:-1;;;;;;9177:8:81;;;;-1:-1:-1;9177:18:81;;150::84;;9177:33:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9212:14;9168:97;;;;;;;;;;;;;;;;;:8;:97::i;:::-;7156:2116;;;;;7108:2164::o;5455:929::-;5592:4;;5614;;5592:50;;-1:-1:-1;;;5592:50:81;;-1:-1:-1;;;;;5614:4:81;;;5592:50;;;5578:51:84;5621:20:81;5645:18:84;;;5638:34;5592:4:81;;;:13;;5551:18:84;;5592:50:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5657:9;5652:81;5676:1;5672;:5;5652:81;;;5698:4;;:24;;-1:-1:-1;;;5698:24:81;;5716:4;5698:24;;;177:51:84;-1:-1:-1;;;;;5698:4:81;;;;:9;;150:18:84;;5698:24:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5679:3;;;;;:::i;:::-;;;;5652:81;;;-1:-1:-1;5742:4:81;;5752;;5742:30;;-1:-1:-1;;;5742:30:81;;-1:-1:-1;;;;;5752:4:81;;;5742:30;;;3132:34:84;5766:4:81;3182:18:84;;;3175:43;5742:4:81;;;:9;;3067:18:84;;5742:30:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5792:4:81;;:29;;-1:-1:-1;;;5792:29:81;;5815:4;5792:29;;;177:51:84;5783:107:81;;-1:-1:-1;;;;;;5792:4:81;;;;-1:-1:-1;5792:14:81;;150:18:84;;5792:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5823:21;5783:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;5909:4;;:29;;-1:-1:-1;;;5909:29:81;;5932:4;5909:29;;;177:51:84;5900:107:81;;-1:-1:-1;;;;;5909:4:81;;:14;;150:18:84;;5909:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5940:21;5900:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;6040:4;;:14;;;-1:-1:-1;;;6040:14:81;;;;6018:184;;-1:-1:-1;;;;;6040:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;-1:-1:-1;;;6040:39:81;;6073:4;6040:39;;;177:51:84;-1:-1:-1;;;;;6040:24:81;;;;;;;150:18:84;;6040:39:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6110:4;;;;;;;;;-1:-1:-1;;;;;6110:4:81;-1:-1:-1;;;;;6110:18:81;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6093:37;;:14;:37;:::i;:::-;6018:184;;;;;;;;;;;;;;;;;:8;:184::i;:::-;6234:4;;:14;;;-1:-1:-1;;;6234:14:81;;;;6212:165;;-1:-1:-1;;;;;6234:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6259:16;;6234:42;;-1:-1:-1;;;6234:42:81;;-1:-1:-1;;;;;6259:16:81;;;6234:42;;;177:51:84;6234:24:81;;;;;150:18:84;;6234:42:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6290:16;6212:165;;;;;;;;;;;;;;;;;:8;:165::i;6390:712::-;6451:8;;6477:4;;6451:47;;-1:-1:-1;;;6451:47:81;;-1:-1:-1;;;;;6477:4:81;;;6451:47;;;5578:51:84;6484:13:81;5645:18:84;;;5638:34;6451:8:81;;;:17;;5551:18:84;;6451:47:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6517:8:81;;:33;;-1:-1:-1;;;6517:33:81;;6544:4;6517:33;;;177:51:84;6508:101:81;;-1:-1:-1;;;;;6517:8:81;;:18;;150::84;;6517:33:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6552:13;6508:101;;;;;;;;;;;;;;;;;:8;:101::i;:::-;6620:189;;-1:-1:-1;;;6620:189:81;;14234:2:84;6620:189:81;;;14216:21:84;14273:3;14253:18;;;14246:31;14313:34;14293:18;;;14286:62;14384:34;14364:18;;;14357:62;14456:34;14435:19;;;14428:63;14528:34;14507:19;;;14500:63;-1:-1:-1;;;14579:19:84;;;14572:51;-1:-1:-1;;;;;;;;;;;6620:15:81;;;14640:19:84;;6620:189:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6819:7:81;;6841:4;;6847;;6853:8;;6819:58;;-1:-1:-1;;;6819:58:81;;-1:-1:-1;;;;;6819:7:81;;;;-1:-1:-1;6819:21:81;;-1:-1:-1;6819:58:81;;6841:4;;;;6847;;;;6853:8;;;;6871:4;;6819:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6896:8:81;;:33;;-1:-1:-1;;;6896:33:81;;6923:4;6896:33;;;177:51:84;6887:99:81;;-1:-1:-1;;;;;;6896:8:81;;;;-1:-1:-1;6896:18:81;;150::84;;6896:33:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6931:13;6887:99;;;;;;;;;;;;;;;;;:8;:99::i;:::-;6997:51;;-1:-1:-1;;;6997:51:81;;14871:2:84;6997:51:81;;;14853:21:84;;;14890:18;;;14883:30;14949:34;14929:18;;;14922:62;-1:-1:-1;;;;;;;;;;;6997:15:81;;;15001:18:84;;6997:51:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7058:7:81;;:37;;-1:-1:-1;;;7058:37:81;;7089:4;7058:37;;;177:51:84;-1:-1:-1;;;;;7058:7:81;;;;-1:-1:-1;7058:22:81;;-1:-1:-1;150:18:84;;7058:37:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6390:712::o;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:1;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:1;;;5578:51:84;;;-1:-1:-1;;;5645:18:84;;;5638:34;2196:43:1;;;;;;;;;5551:18:84;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;3386:1011:81:-;3434:27;;-1:-1:-1;;;3434:27:81;;-1:-1:-1;;;3434:27:81;;;5020:62:84;-1:-1:-1;;;;;;;;;;;3434:15:81;;;4993:18:84;;3434:27:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3495:4:81;;:35;;-1:-1:-1;;;3495:35:81;;3524:4;3495:35;;;177:51:84;-1:-1:-1;;;;;3495:4:81;;;;-1:-1:-1;3495:20:81;;-1:-1:-1;150:18:84;;3495:35:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3541:4;;;;;;;;;-1:-1:-1;;;;;3541:4:81;-1:-1:-1;;;;;3541:12:81;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3573:4;;3597:20;;;-1:-1:-1;;;3597:20:81;;;;-1:-1:-1;;;;;3541:23:81;;;;;;3573:4;;;;3597:18;;:20;;;;;;;;;;;;;;;3573:4;3597:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3580:37;;:14;:37;:::i;:::-;3541:77;;-1:-1:-1;;;;;;3541:77:81;;;;;;;-1:-1:-1;;;;;5596:32:84;;;3541:77:81;;;5578:51:84;5645:18;;;5638:34;5551:18;;3541:77:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3628:4:81;;:35;;-1:-1:-1;;;3628:35:81;;3657:4;3628:35;;;177:51:84;-1:-1:-1;;;;;3628:4:81;;;;:20;;150:18:84;;3628:35:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3696:4:81;;:29;;-1:-1:-1;;;3696:29:81;;3719:4;3696:29;;;177:51:84;3674:182:81;;-1:-1:-1;;;;;3696:4:81;;:14;;150:18:84;;3696:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3757:4;;;;;;;;;-1:-1:-1;;;;;3757:4:81;-1:-1:-1;;;;;3757:18:81;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3739:38;;:15;:38;:::i;:::-;3674:182;;;;;;;;;;;;;;;;;:8;:182::i;:::-;3888:4;;:29;;-1:-1:-1;;;3888:29:81;;3911:4;3888:29;;;177:51:84;3866:182:81;;-1:-1:-1;;;;;3888:4:81;;:14;;150:18:84;;3888:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3949:4;;;;;;;;;-1:-1:-1;;;;;3949:4:81;-1:-1:-1;;;;;3949:18:81;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3931:38;;:15;:38;:::i;:::-;3866:182;;;;;;;;;;;;;;;;;:8;:182::i;:::-;4080:4;;:14;;;-1:-1:-1;;;4080:14:81;;;;4058:160;;-1:-1:-1;;;;;4080:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:39;;-1:-1:-1;;;4080:39:81;;4113:4;4080:39;;;177:51:84;-1:-1:-1;;;;;4080:24:81;;;;;;;150:18:84;;4080:39:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4133:1;4058:160;;;;;;;;;;;;;;;;;:8;:160::i;:::-;4250:4;;:14;;;-1:-1:-1;;;4250:14:81;;;;4228:162;;-1:-1:-1;;;;;4250:4:81;;:12;;:14;;;;;;;;;;;;;;:4;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4275:16;;4250:42;;-1:-1:-1;;;4250:42:81;;-1:-1:-1;;;;;4275:16:81;;;4250:42;;;177:51:84;4250:24:81;;;;;150:18:84;;4250:42:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4306:1;4228:162;;;;;;;;;;;;;;;;;5469:178:1;5550:1;5545;:6;5541:100;;5572:30;5598:3;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5202:262;5264:1;5259;:6;5255:203;;5286:41;;;;;17171:2:84;17153:21;;;17210:2;17190:18;;;17183:30;17249:34;17244:2;17229:18;;17222:62;-1:-1:-1;;;17315:2:84;17300:18;;17293:32;17357:3;17342:19;;16969:398;5286:41:1;;;;;;;;5346:31;;;17584:21:84;;;17641:2;17621:18;;;17614:30;-1:-1:-1;;;17675:2:84;17660:18;;17653:40;17760:4;17745:20;;17738:36;;;5346:31:1;;;;;;;17725:3:84;5346:31:1;;;5396;;;17997:21:84;;;18054:2;18034:18;;;18027:30;-1:-1:-1;;;18088:2:84;18073:18;;18066:40;18173:4;18158:20;;18151:36;;;5396:31:1;;;;;;;18138:3:84;5396:31:1;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:1;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:1;;;18400:51:84;;;-1:-1:-1;;;18467:18:84;;;18460:34;;;;2705:4:1;18510:18:84;;;18503:34;2482:11:1;;1671:64;2579:43;;18373:18:84;;2645:67:1;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;2227:184:84:-;2297:6;2350:2;2338:9;2329:7;2325:23;2321:32;2318:52;;;2366:1;2363;2356:12;2318:52;-1:-1:-1;2389:16:84;;2227:184;-1:-1:-1;2227:184:84:o;2416:465::-;-1:-1:-1;;;;;2703:15:84;;;2685:34;;2755:15;;;2750:2;2735:18;;2728:43;2807:15;;;2802:2;2787:18;;2780:43;2859:15;;;2854:2;2839:18;;2832:43;2634:3;2619:19;;2416:465::o;3508:140::-;-1:-1:-1;;;;;3592:31:84;;3582:42;;3572:70;;3638:1;3635;3628:12;3572:70;3508:140;:::o;3653:277::-;3740:6;3793:2;3781:9;3772:7;3768:23;3764:32;3761:52;;;3809:1;3806;3799:12;3761:52;3841:9;3835:16;3860:40;3894:5;3860:40;:::i;:::-;3919:5;3653:277;-1:-1:-1;;;3653:277:84:o;5683:::-;5750:6;5803:2;5791:9;5782:7;5778:23;5774:32;5771:52;;;5819:1;5816;5809:12;5771:52;5851:9;5845:16;5904:5;5897:13;5890:21;5883:5;5880:32;5870:60;;5926:1;5923;5916:12;5965:127;6026:10;6021:3;6017:20;6014:1;6007:31;6057:4;6054:1;6047:15;6081:4;6078:1;6071:15;6097:128;6164:9;;;6185:11;;;6182:37;;;6199:18;;:::i;:::-;6097:128;;;;:::o;6536:135::-;6575:3;6596:17;;;6593:43;;6616:18;;:::i;:::-;-1:-1:-1;6663:1:84;6652:13;;6536:135::o;7325:127::-;7386:10;7381:3;7377:20;7374:1;7367:31;7417:4;7414:1;7407:15;7441:4;7438:1;7431:15;7457:461;7510:3;7548:5;7542:12;7575:6;7570:3;7563:19;7601:4;7630:2;7625:3;7621:12;7614:19;;7667:2;7660:5;7656:14;7688:1;7698:195;7712:6;7709:1;7706:13;7698:195;;;7777:13;;-1:-1:-1;;;;;7773:39:84;7761:52;;7833:12;;;;7868:15;;;;7809:1;7727:9;7698:195;;;-1:-1:-1;7909:3:84;;7457:461;-1:-1:-1;;;;;7457:461:84:o;7923:435::-;7976:3;8014:5;8008:12;8041:6;8036:3;8029:19;8067:4;8096:2;8091:3;8087:12;8080:19;;8133:2;8126:5;8122:14;8154:1;8164:169;8178:6;8175:1;8172:13;8164:169;;;8239:13;;8227:26;;8273:12;;;;8308:15;;;;8200:1;8193:9;8164:169;;8363:250;8448:1;8458:113;8472:6;8469:1;8466:13;8458:113;;;8548:11;;;8542:18;8529:11;;;8522:39;8494:2;8487:10;8458:113;;;-1:-1:-1;;8605:1:84;8587:16;;8580:27;8363:250::o;8618:270::-;8659:3;8697:5;8691:12;8724:6;8719:3;8712:19;8740:76;8809:6;8802:4;8797:3;8793:14;8786:4;8779:5;8775:16;8740:76;:::i;:::-;8870:2;8849:15;-1:-1:-1;;8845:29:84;8836:39;;;;8877:4;8832:50;;8618:270;-1:-1:-1;;8618:270:84:o;8893:614::-;8944:3;8982:5;8976:12;9009:6;9004:3;8997:19;9035:4;9076:2;9071:3;9067:12;9101:11;9128;9121:18;;9178:6;9175:1;9171:14;9164:5;9160:26;9148:38;;9220:2;9213:5;9209:14;9241:1;9251:230;9265:6;9262:1;9259:13;9251:230;;;9336:5;9330:4;9326:16;9321:3;9314:29;9364:37;9396:4;9387:6;9381:13;9364:37;:::i;:::-;9459:12;;;;9356:45;-1:-1:-1;9424:15:84;;;;9287:1;9280:9;9251:230;;;-1:-1:-1;9497:4:84;;8893:614;-1:-1:-1;;;;;;;8893:614:84:o;9512:1024::-;9966:3;9955:9;9948:22;9929:4;9993:57;10045:3;10034:9;10030:19;10022:6;9993:57;:::i;:::-;10098:9;10090:6;10086:22;10081:2;10070:9;10066:18;10059:50;10132:44;10169:6;10161;10132:44;:::i;:::-;10118:58;;10224:9;10216:6;10212:22;10207:2;10196:9;10192:18;10185:50;10258:42;10293:6;10285;10258:42;:::i;:::-;10336:22;;;10331:2;10316:18;;;10309:50;10383:2;10368:18;;10419:34;10414:2;10402:15;;10395:59;-1:-1:-1;;;10482:2:84;10470:15;;10463:35;10515:15;;;;;9512:1024;-1:-1:-1;;;;;9512:1024:84:o;10723:279::-;10812:6;10865:2;10853:9;10844:7;10840:23;10836:32;10833:52;;;10881:1;10878;10871:12;10833:52;10913:9;10907:16;10952:1;10945:5;10942:12;10932:40;;10968:1;10965;10958:12;11007:127;11068:10;11063:3;11059:20;11056:1;11049:31;11099:4;11096:1;11089:15;11123:4;11120:1;11113:15;11139:125;11204:9;;;11225:10;;;11222:36;;;11238:18;;:::i;11724:758::-;12105:3;12094:9;12087:22;12068:4;12132:57;12184:3;12173:9;12169:19;12161:6;12132:57;:::i;:::-;12237:9;12229:6;12225:22;12220:2;12209:9;12205:18;12198:50;12271:44;12308:6;12300;12271:44;:::i;:::-;12257:58;;12363:9;12355:6;12351:22;12346:2;12335:9;12331:18;12324:50;12391:42;12426:6;12418;12391:42;:::i;:::-;12383:50;;;12469:6;12464:2;12453:9;12449:18;12442:34;11724:758;;;;;;;:::o;15309:384::-;-1:-1:-1;;;;;;15494:33:84;;15482:46;;15551:13;;15464:3;;15573:74;15551:13;15636:1;15627:11;;15620:4;15608:17;;15573:74;:::i;:::-;15667:16;;;;15685:1;15663:24;;15309:384;-1:-1:-1;;;15309:384:84:o;15698:287::-;15827:3;15865:6;15859:13;15881:66;15940:6;15935:3;15928:4;15920:6;15916:17;15881:66;:::i;:::-;15963:16;;;;;15698:287;-1:-1:-1;;15698:287:84:o;15990:245::-;16069:6;16077;16130:2;16118:9;16109:7;16105:23;16101:32;16098:52;;;16146:1;16143;16136:12;16098:52;-1:-1:-1;;16169:16:84;;16225:2;16210:18;;;16204:25;16169:16;;16204:25;;-1:-1:-1;15990:245:84:o;16519:445::-;16769:2;16758:9;16751:21;16808:1;16803:2;16792:9;16788:18;16781:29;-1:-1:-1;;;16841:2:84;16830:9;16826:18;16819:35;16892:3;16885:4;16874:9;16870:20;16863:33;16732:4;16913:45;16953:3;16942:9;16938:19;16930:6;16913:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "dao()": "4162169f",
    "daotoken()": "f2475ed0",
    "fBTC()": "b9d35e78",
    "fUSD()": "094e23f9",
    "factory()": "c45a0155",
    "failed()": "ba414fa6",
    "pool()": "16f0115b",
    "pool_address()": "4755abbb",
    "protocol_address()": "6694c06c",
    "setUp()": "0a9254e4",
    "testBuy()": "0b586cc8",
    "testRecoverStuckTokensWithDAO()": "29e8d788",
    "testRecoverStuckTokensWithoutDAO()": "74a9f165",
    "testRedeemLiquidity()": "f9c6b568",
    "testSell()": "31c42ca6",
    "timelock()": "d33219b4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract StairwayDAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daotoken\",\"outputs\":[{\"internalType\":\"contract DAOToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fBTC\",\"outputs\":[{\"internalType\":\"contract FakeBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fUSD\",\"outputs\":[{\"internalType\":\"contract FakeUSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRecoverStuckTokensWithDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRecoverStuckTokensWithoutDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRedeemLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract StairwayTimelock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Pool.t.sol\":\"PoolTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":flexible-voting/=lib/flexible-voting/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flexible-voting/GovernorCountingFractional.sol\":{\"keccak256\":\"0x513a711fb0deaf35a5eb762394447b3ea5056254f2247307c5e6970715f7db66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c1113a43460be13477cbb8d6606cfd533e0a1df713e84b4754a1d0d533d156\",\"dweb:/ipfs/QmZXNhuWkiQ55b3kzYtP9kCNZcj54pf9HMbvTyrVfsEfGs\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbf2c734ffcc665d175a4b239d90a6ceb873d613c26ce7dc5c4d3131b76a0e92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e1caed2b51fc82c3050f37cb6ee1fb9a2627baaae4cb08919b795a7216db2d\",\"dweb:/ipfs/Qmepc4Zd44EpqBjLHVAGzu6B5QqY1zqecHgfBTpZcQ7HZ7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf1076813373cbd519d03411288590a8d9729592934718b0f6b54ca281c855dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cc7c5c97c15c4adb648fbc35d4909f81b09e52410ffb4e8010a0f1e272a7fb5\",\"dweb:/ipfs/QmV3oNjq9tZmQBZMtaEEwaXdfcNSzu8KhupXEzcZ3BHMsc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xe3955cfd5a73fbf56acf7a7709cc9db1dfdd70e6a969bb6b19106de6f1049b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30db8c85f6a04f5433d876859c89e51ecbea5ef6cdcadd5f2a342f216e6f6a9\",\"dweb:/ipfs/QmUm6cbRKtYcSSH2uib2f2aJ5qd6wBzkQUbPTP7jKW2Ayz\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/governance/Governor.sol\":{\"keccak256\":\"0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a\",\"dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF\"]},\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"lib/openzeppelin-contracts/contracts/governance/TimelockController.sol\":{\"keccak256\":\"0xf3ffa69c5f7c9ebb35775be2f3b27389550a102f0e1cdfff99a54663c7b162ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f4294b5223d7823b86c0bd92516cca895f800b8db605df60d088ed89a05fede\",\"dweb:/ipfs/QmRfMZ9JYTuKYFrmkn4C3CQLnd7GxLKswBxJwpYB6HDEvD\"]},\"lib/openzeppelin-contracts/contracts/governance/compatibility/GovernorCompatibilityBravo.sol\":{\"keccak256\":\"0x1d0669727d5a3a494c488154ec134c678b3656a19ba8d7a266633805762e2c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d18815c767686eda97ac79c702fcd8b41446ee7294b8914b58b17d188215e7ef\",\"dweb:/ipfs/QmaYySjLUymDLECXDPysobBXD9nVN2EnovGGrXKwY8YgFw\"]},\"lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol\":{\"keccak256\":\"0xdea65ff0ab861d22fd79938e8c101243c073e20b4842cb80809d5ff8fd4fa605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bae74fe80dd57f46765355849a82ffd1ebc3e95516943d2b60271bcbb678d3e\",\"dweb:/ipfs/QmSVin53Fot6tF6iSb2Vx3mrFEMZ3WPKjzyvgL1vVwyX8y\"]},\"lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x0f9c01248b04279913cc08936e9d15494ec3700c21768a175f91e72ba52c7789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60518084110ae055e83e9d75c47334aabb3e9db45f6895557bb4ad7f1a658b91\",\"dweb:/ipfs/QmVKJnESDYK52gy59iMChFibs4XWuUxRNxo23zY72h2crY\"]},\"lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0xab3781f09dfb447d0c2f5bbb2aafc9ff86333f16c61580ab85d7c8a87491eab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58571bc89cd0e54fa9af6b41e53e2110c6f5767eb691af8ad88759dbde07b3fd\",\"dweb:/ipfs/QmbeoatuYT5ukpGLWZh4DHb7yrC3TpBbm9hDdWwkdUuUy4\"]},\"lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol\":{\"keccak256\":\"0xde79bde0691601228cdf27fc2fdc85cb01eea836d41780e6e73f778e0a886a5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490f0e0d12ff73a9f891930c842630d4d50f0088562801d635a68319a772e19\",\"dweb:/ipfs/QmeSBTTHkxiXQ5hnJyhpCGAA42XFGfNPZxfRnkK28x4Aii\"]},\"lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol\":{\"keccak256\":\"0xf818ee82b0faf7938ced9fcc851600b17202c8f6b1b33e01035702cadda684bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aaea7133e6c40ce2c9c2235c72ffec8befbe50c6df0414565675f2648562484\",\"dweb:/ipfs/QmSvUuPuorTqpscvfmhV4PCJCjJDFpMmjcxTnJUB64cj98\"]},\"lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol\":{\"keccak256\":\"0x78a9387835f2dd3409988348661df2724630c7bb31bb3da54146c568460c42af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe76999864eaa47e124dfa6f3124eb5d42d5ef705508fb8ad696372f0f40da92\",\"dweb:/ipfs/Qmbjd3L2Rz1sp9rZ5yzwCH2nQFZTQThR9naCkGZY5DVN2p\"]},\"lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol\":{\"keccak256\":\"0xe6234ac4ba0508a3371a46543cdf4bf3a1a404d2d3c3470006741a0da294f974\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f65e0806425afa3946ba400879444d73b0b9320534eaecb2c64dc3689cff0614\",\"dweb:/ipfs/QmbpjBrErEMrx9qbS529XXbfooHfkihCj9iBz2QWiw4Xe4\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80\",\"dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol\":{\"keccak256\":\"0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247\",\"dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/Timers.sol\":{\"keccak256\":\"0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118\",\"dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f\",\"dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6\"]},\"src/core/Cluster.sol\":{\"keccak256\":\"0x67b50370ea13680db8484419548058eae192c602d6cd53362a4eb82fa11d8952\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ed193bf12fe7b4a6f6d832b77996ee39ce81435dac1e3695734b88b40d2da26d\",\"dweb:/ipfs/QmZcPyzZ7jpLpdvqenfpZsQNRmNvAxeqqfvcLs3U7RafkG\"]},\"src/core/Factory.sol\":{\"keccak256\":\"0x86c80361d7c2106de34eb20ce52b9154cffed40ef29a4832604b6f9bd19e73ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ab56f672e710572fd10e408aec0b3f92e3b2110fdebece983888be59aa8c4f66\",\"dweb:/ipfs/QmdJDs46dQyqjrjXFM23YXZCciRgnzzgfEZho97hyJs2bA\"]},\"src/core/LPToken.sol\":{\"keccak256\":\"0x7314e14aaa8d58ee0dcb685955bf49d0b2ce1321e56e5473426632cad1056823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd2f5b3f94e1616784997786efcad723bf5ac4380a78fff7e620f7d730ddf7\",\"dweb:/ipfs/QmVp93dEPkJzuboA5oDDKpPBbyAR2CKap2Ty4X6qFkrx7i\"]},\"src/core/Pool.sol\":{\"keccak256\":\"0x4c6f2a49f2b8436078081481947207c30f64850f49452a6fe11209ce19e3bfb3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c32f4c49f169e2d0d164f2c3be7d07b6c4906f6f3ffbeaf5382e670820abb154\",\"dweb:/ipfs/QmSBxWHKYXAuZL6p2jmJvbLdgtoxVXDk9t8w86CdvPAEZ5\"]},\"src/core/TokenManager.sol\":{\"keccak256\":\"0x5a4776dba46cfb42e650fc278ea56d8402882fcb7d3ab0d4d8a1dd2c6632beae\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://178c0da0b599d3711427f411f338e291f8da6f06de824ac30997a6d255d37162\",\"dweb:/ipfs/QmTSE4PvcXVpCLS77WQAK7rFfJGZUkKV2ggjeua6EEuwde\"]},\"src/dao/DAOToken.sol\":{\"keccak256\":\"0x50c17e027bbdf0552b8e0d9f81723222d5060f5dad82e834c453e5c02a894bb8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0069399a77a0430e2cd0297951d3374188b22f372714d00a0dcb84e724a58226\",\"dweb:/ipfs/QmS9zgpmS1TXhT6izPhogG4MXkscRctd5Nf8WHuMg6DW32\"]},\"src/dao/StairwayDAO.sol\":{\"keccak256\":\"0xeab4b3cd724e2018b7d19caa5ff6939a21bef872549d6e62d54e74dda09ecfa5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e45c28e7fa44d4b6b7653b0d664a19f45bd474e15fb0873d9487d84d5f4ea83a\",\"dweb:/ipfs/QmZdTybYjX9xCE5Cv8iugpy8pNJp67qdxKK4a5bjMTEqYN\"]},\"src/dao/StairwayTimelock.sol\":{\"keccak256\":\"0xbc55d016ee434807306d10976ae700256dee2dd71975fa6bfe26ffe7b0f90abc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db06a4fa424557adba5d1b3e9f28293590fdc8c16d786f9afe430ef9c2d2ff7b\",\"dweb:/ipfs/QmVygLZ9KpViAaiBwuacJLAXfDKsZ2gLMAqL6uCA3gQxhV\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x010c49c10c0bf0c2fd8e8080b9c4fa44f744e9075f0c88a12e35c4305f030388\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://b5c5ec966cd4746b6173c125dd49e9d6fdff6dc18cf45ceafd8c3a895577062c\",\"dweb:/ipfs/QmVjJo2bNi7T9LR7EpiZ3yVFiWZosceKtjMxNXJnj6dKuk\"]},\"src/interfaces/IFactory.sol\":{\"keccak256\":\"0x9364b6983e159ebec20ffa3d08c340f2a9fd3900a9f374b5419d76b1d4dbee18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fdb86076fc2d799ddd14f1ec6dbd2a5f8e3135aabbdce2abdf8753963b2bce51\",\"dweb:/ipfs/QmVMu42N1Dq31Qkb9BFmrQx4iMmZ3e3ZtuCoH8DmSZSXE7\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0x80da8a452a4ea032813cb66ada33361d2600b6b8fcbe223d118f2c07b2ff5a1c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://69b7c93551336048aed6216ab95f453953253fd7b654f4b4ef54273e18e3ed5e\",\"dweb:/ipfs/QmWW83nYTAEBTtf3SQHoJYvry42joC2DprW3MPhAxCRCZF\"]},\"src/interfaces/IPool.sol\":{\"keccak256\":\"0x66989357228fb04ef48c16664c02b32ebd49175765589899722b7240af0fac15\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e228280bef41d4423afdf40a058e88fbc0f2a938be44344a50bb5b20fa4aa4f2\",\"dweb:/ipfs/QmYMsZM15on278E6P7EydVhA9tjXDu5pWDSqhk9sW2SZWt\"]},\"src/interfaces/ITokenManager.sol\":{\"keccak256\":\"0x9f49b8172c0e2b9e917837a97e73e3935a57fb2b65fbf26d117c37e391d10d5e\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://68ed4b9c51d8a33014f66ae5ec24e9c0386735a9bbc9ae51a8893a98839d89f2\",\"dweb:/ipfs/QmNcidWmNob8DoU4UchesPk6fX1BaasDNdijDon4He83Ay\"]},\"src/libraries/Fundamentals.sol\":{\"keccak256\":\"0x9d4e9b5091f5bcdb0fa9bb08231833f827bcda452a1cce04b0d8009c2a89b4a7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84c53f41ebc42ab79a70188a174fefa9a09a3f849bf37dcd1a280c40896c0805\",\"dweb:/ipfs/QmZoD4itGT1DTCDXjgGT3gbLpSYtQreniT1iGzX591KqmL\"]},\"src/test/FakeBTC.sol\":{\"keccak256\":\"0xb819ab0da26575515179a74a565dcd14186f1b01a9cebef3fedd0cd8bf3259ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://014d36752c53e1799c0b74c682e7da227c1f15ed7b3032a10eea8a51f448de36\",\"dweb:/ipfs/QmeJaDVES1nWPwsLe5tZWC2iv42dSB8nPkTGHJCACB9ef9\"]},\"src/test/FakeUSD.sol\":{\"keccak256\":\"0xe30c661cf527613792b803d1df5b3210103fa846a990891a5e62f56c5838d5d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10de1cf6d75a68e821a9c5ffae73afb4877702183220076cdeb529e7126c4945\",\"dweb:/ipfs/QmQDsHj4Pg7SYWSGwgigwBLgdwrb5qsnL6g4gRxWRhLxFV\"]},\"test/Pool.t.sol\":{\"keccak256\":\"0x403396eac449b41ed47716e357fde9122ac048e20e7633b5463b5063bda0af96\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ead9552a361abcad9b5a434e04091ec988c60a9e24d9de6afe784baad7881bba\",\"dweb:/ipfs/QmRXZYGo6kHpkCPhhthezWTPvacK3TA996b2v4Z6yhP79w\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dao",
          "outputs": [
            {
              "internalType": "contract StairwayDAO",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "daotoken",
          "outputs": [
            {
              "internalType": "contract DAOToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fBTC",
          "outputs": [
            {
              "internalType": "contract FakeBTC",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fUSD",
          "outputs": [
            {
              "internalType": "contract FakeUSD",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract Factory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "contract IPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool_address",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocol_address",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRecoverStuckTokensWithDAO"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRecoverStuckTokensWithoutDAO"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRedeemLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSell"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "timelock",
          "outputs": [
            {
              "internalType": "contract StairwayTimelock",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":flexible-voting/=lib/flexible-voting/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Pool.t.sol": "PoolTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/flexible-voting/GovernorCountingFractional.sol": {
        "keccak256": "0x513a711fb0deaf35a5eb762394447b3ea5056254f2247307c5e6970715f7db66",
        "urls": [
          "bzz-raw://b7c1113a43460be13477cbb8d6606cfd533e0a1df713e84b4754a1d0d533d156",
          "dweb:/ipfs/QmZXNhuWkiQ55b3kzYtP9kCNZcj54pf9HMbvTyrVfsEfGs"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbf2c734ffcc665d175a4b239d90a6ceb873d613c26ce7dc5c4d3131b76a0e92",
        "urls": [
          "bzz-raw://53e1caed2b51fc82c3050f37cb6ee1fb9a2627baaae4cb08919b795a7216db2d",
          "dweb:/ipfs/Qmepc4Zd44EpqBjLHVAGzu6B5QqY1zqecHgfBTpZcQ7HZ7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf1076813373cbd519d03411288590a8d9729592934718b0f6b54ca281c855dd7",
        "urls": [
          "bzz-raw://9cc7c5c97c15c4adb648fbc35d4909f81b09e52410ffb4e8010a0f1e272a7fb5",
          "dweb:/ipfs/QmV3oNjq9tZmQBZMtaEEwaXdfcNSzu8KhupXEzcZ3BHMsc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xe3955cfd5a73fbf56acf7a7709cc9db1dfdd70e6a969bb6b19106de6f1049b4c",
        "urls": [
          "bzz-raw://f30db8c85f6a04f5433d876859c89e51ecbea5ef6cdcadd5f2a342f216e6f6a9",
          "dweb:/ipfs/QmUm6cbRKtYcSSH2uib2f2aJ5qd6wBzkQUbPTP7jKW2Ayz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/Governor.sol": {
        "keccak256": "0x57da86c5f5c46ab8f2cf67ada4258567a9270f89499690f40ed8160788733a48",
        "urls": [
          "bzz-raw://b9fab32423b6dbc9cf70737380a9444731acbe042945b65674858e064370be3a",
          "dweb:/ipfs/QmPLopcmcMBLkazDRVEVgts5ADMjXBba1vqtZcRGCRHtbF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f",
        "urls": [
          "bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8",
          "dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/TimelockController.sol": {
        "keccak256": "0xf3ffa69c5f7c9ebb35775be2f3b27389550a102f0e1cdfff99a54663c7b162ad",
        "urls": [
          "bzz-raw://5f4294b5223d7823b86c0bd92516cca895f800b8db605df60d088ed89a05fede",
          "dweb:/ipfs/QmRfMZ9JYTuKYFrmkn4C3CQLnd7GxLKswBxJwpYB6HDEvD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/compatibility/GovernorCompatibilityBravo.sol": {
        "keccak256": "0x1d0669727d5a3a494c488154ec134c678b3656a19ba8d7a266633805762e2c6a",
        "urls": [
          "bzz-raw://d18815c767686eda97ac79c702fcd8b41446ee7294b8914b58b17d188215e7ef",
          "dweb:/ipfs/QmaYySjLUymDLECXDPysobBXD9nVN2EnovGGrXKwY8YgFw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol": {
        "keccak256": "0xdea65ff0ab861d22fd79938e8c101243c073e20b4842cb80809d5ff8fd4fa605",
        "urls": [
          "bzz-raw://8bae74fe80dd57f46765355849a82ffd1ebc3e95516943d2b60271bcbb678d3e",
          "dweb:/ipfs/QmSVin53Fot6tF6iSb2Vx3mrFEMZ3WPKjzyvgL1vVwyX8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x0f9c01248b04279913cc08936e9d15494ec3700c21768a175f91e72ba52c7789",
        "urls": [
          "bzz-raw://60518084110ae055e83e9d75c47334aabb3e9db45f6895557bb4ad7f1a658b91",
          "dweb:/ipfs/QmVKJnESDYK52gy59iMChFibs4XWuUxRNxo23zY72h2crY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol": {
        "keccak256": "0xab3781f09dfb447d0c2f5bbb2aafc9ff86333f16c61580ab85d7c8a87491eab9",
        "urls": [
          "bzz-raw://58571bc89cd0e54fa9af6b41e53e2110c6f5767eb691af8ad88759dbde07b3fd",
          "dweb:/ipfs/QmbeoatuYT5ukpGLWZh4DHb7yrC3TpBbm9hDdWwkdUuUy4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol": {
        "keccak256": "0xde79bde0691601228cdf27fc2fdc85cb01eea836d41780e6e73f778e0a886a5e",
        "urls": [
          "bzz-raw://3490f0e0d12ff73a9f891930c842630d4d50f0088562801d635a68319a772e19",
          "dweb:/ipfs/QmeSBTTHkxiXQ5hnJyhpCGAA42XFGfNPZxfRnkK28x4Aii"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol": {
        "keccak256": "0xf818ee82b0faf7938ced9fcc851600b17202c8f6b1b33e01035702cadda684bd",
        "urls": [
          "bzz-raw://4aaea7133e6c40ce2c9c2235c72ffec8befbe50c6df0414565675f2648562484",
          "dweb:/ipfs/QmSvUuPuorTqpscvfmhV4PCJCjJDFpMmjcxTnJUB64cj98"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol": {
        "keccak256": "0x78a9387835f2dd3409988348661df2724630c7bb31bb3da54146c568460c42af",
        "urls": [
          "bzz-raw://fe76999864eaa47e124dfa6f3124eb5d42d5ef705508fb8ad696372f0f40da92",
          "dweb:/ipfs/Qmbjd3L2Rz1sp9rZ5yzwCH2nQFZTQThR9naCkGZY5DVN2p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol": {
        "keccak256": "0xe6234ac4ba0508a3371a46543cdf4bf3a1a404d2d3c3470006741a0da294f974",
        "urls": [
          "bzz-raw://f65e0806425afa3946ba400879444d73b0b9320534eaecb2c64dc3689cff0614",
          "dweb:/ipfs/QmbpjBrErEMrx9qbS529XXbfooHfkihCj9iBz2QWiw4Xe4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9",
        "urls": [
          "bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80",
          "dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36",
        "urls": [
          "bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7",
          "dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol": {
        "keccak256": "0xf586981d605e0c0f07a44e158a3da023bd526409d3709e969d323b2d91398078",
        "urls": [
          "bzz-raw://df93b9e4731d4e904a7216af640c5ec0a4ef5f87051fedc2a272b3b3039f1247",
          "dweb:/ipfs/QmYvPqBpuZXxnedpn1vAMuHfustou2hByanL8zRA3qm3ob"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
        "keccak256": "0x29791a62950a7983e02a673639c1a781d1e448691800456c2ce4b99715391b14",
        "urls": [
          "bzz-raw://38f37b3c682657d4b1790b5e564d4c9445856c93aa79ffed43fd076959118118",
          "dweb:/ipfs/QmcBGSacnV1JDz7kicsFijDYBxx5CmLSjUSJVLqyn7zH3G"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0x4859ffd6dd69382a1462930c00b6e394007da80e78e510f56930271034737bf2",
        "urls": [
          "bzz-raw://0497f84a7fdfafac2046d23b456a05454365d38bb59883b7d8ce398a26704f4f",
          "dweb:/ipfs/QmZSXpAvoXWkxQ4U2GJ4juWvmn4Fd7zeH9wXZq6wKUbfi6"
        ],
        "license": "MIT"
      },
      "src/core/Cluster.sol": {
        "keccak256": "0x67b50370ea13680db8484419548058eae192c602d6cd53362a4eb82fa11d8952",
        "urls": [
          "bzz-raw://ed193bf12fe7b4a6f6d832b77996ee39ce81435dac1e3695734b88b40d2da26d",
          "dweb:/ipfs/QmZcPyzZ7jpLpdvqenfpZsQNRmNvAxeqqfvcLs3U7RafkG"
        ],
        "license": "BSL-1.1"
      },
      "src/core/Factory.sol": {
        "keccak256": "0x86c80361d7c2106de34eb20ce52b9154cffed40ef29a4832604b6f9bd19e73ee",
        "urls": [
          "bzz-raw://ab56f672e710572fd10e408aec0b3f92e3b2110fdebece983888be59aa8c4f66",
          "dweb:/ipfs/QmdJDs46dQyqjrjXFM23YXZCciRgnzzgfEZho97hyJs2bA"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/core/LPToken.sol": {
        "keccak256": "0x7314e14aaa8d58ee0dcb685955bf49d0b2ce1321e56e5473426632cad1056823",
        "urls": [
          "bzz-raw://f0dd2f5b3f94e1616784997786efcad723bf5ac4380a78fff7e620f7d730ddf7",
          "dweb:/ipfs/QmVp93dEPkJzuboA5oDDKpPBbyAR2CKap2Ty4X6qFkrx7i"
        ],
        "license": "MIT"
      },
      "src/core/Pool.sol": {
        "keccak256": "0x4c6f2a49f2b8436078081481947207c30f64850f49452a6fe11209ce19e3bfb3",
        "urls": [
          "bzz-raw://c32f4c49f169e2d0d164f2c3be7d07b6c4906f6f3ffbeaf5382e670820abb154",
          "dweb:/ipfs/QmSBxWHKYXAuZL6p2jmJvbLdgtoxVXDk9t8w86CdvPAEZ5"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/core/TokenManager.sol": {
        "keccak256": "0x5a4776dba46cfb42e650fc278ea56d8402882fcb7d3ab0d4d8a1dd2c6632beae",
        "urls": [
          "bzz-raw://178c0da0b599d3711427f411f338e291f8da6f06de824ac30997a6d255d37162",
          "dweb:/ipfs/QmTSE4PvcXVpCLS77WQAK7rFfJGZUkKV2ggjeua6EEuwde"
        ],
        "license": "BSL-1.1"
      },
      "src/dao/DAOToken.sol": {
        "keccak256": "0x50c17e027bbdf0552b8e0d9f81723222d5060f5dad82e834c453e5c02a894bb8",
        "urls": [
          "bzz-raw://0069399a77a0430e2cd0297951d3374188b22f372714d00a0dcb84e724a58226",
          "dweb:/ipfs/QmS9zgpmS1TXhT6izPhogG4MXkscRctd5Nf8WHuMg6DW32"
        ],
        "license": "UNLICENSED"
      },
      "src/dao/StairwayDAO.sol": {
        "keccak256": "0xeab4b3cd724e2018b7d19caa5ff6939a21bef872549d6e62d54e74dda09ecfa5",
        "urls": [
          "bzz-raw://e45c28e7fa44d4b6b7653b0d664a19f45bd474e15fb0873d9487d84d5f4ea83a",
          "dweb:/ipfs/QmZdTybYjX9xCE5Cv8iugpy8pNJp67qdxKK4a5bjMTEqYN"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/dao/StairwayTimelock.sol": {
        "keccak256": "0xbc55d016ee434807306d10976ae700256dee2dd71975fa6bfe26ffe7b0f90abc",
        "urls": [
          "bzz-raw://db06a4fa424557adba5d1b3e9f28293590fdc8c16d786f9afe430ef9c2d2ff7b",
          "dweb:/ipfs/QmVygLZ9KpViAaiBwuacJLAXfDKsZ2gLMAqL6uCA3gQxhV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x010c49c10c0bf0c2fd8e8080b9c4fa44f744e9075f0c88a12e35c4305f030388",
        "urls": [
          "bzz-raw://b5c5ec966cd4746b6173c125dd49e9d6fdff6dc18cf45ceafd8c3a895577062c",
          "dweb:/ipfs/QmVjJo2bNi7T9LR7EpiZ3yVFiWZosceKtjMxNXJnj6dKuk"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IFactory.sol": {
        "keccak256": "0x9364b6983e159ebec20ffa3d08c340f2a9fd3900a9f374b5419d76b1d4dbee18",
        "urls": [
          "bzz-raw://fdb86076fc2d799ddd14f1ec6dbd2a5f8e3135aabbdce2abdf8753963b2bce51",
          "dweb:/ipfs/QmVMu42N1Dq31Qkb9BFmrQx4iMmZ3e3ZtuCoH8DmSZSXE7"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0x80da8a452a4ea032813cb66ada33361d2600b6b8fcbe223d118f2c07b2ff5a1c",
        "urls": [
          "bzz-raw://69b7c93551336048aed6216ab95f453953253fd7b654f4b4ef54273e18e3ed5e",
          "dweb:/ipfs/QmWW83nYTAEBTtf3SQHoJYvry42joC2DprW3MPhAxCRCZF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IPool.sol": {
        "keccak256": "0x66989357228fb04ef48c16664c02b32ebd49175765589899722b7240af0fac15",
        "urls": [
          "bzz-raw://e228280bef41d4423afdf40a058e88fbc0f2a938be44344a50bb5b20fa4aa4f2",
          "dweb:/ipfs/QmYMsZM15on278E6P7EydVhA9tjXDu5pWDSqhk9sW2SZWt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ITokenManager.sol": {
        "keccak256": "0x9f49b8172c0e2b9e917837a97e73e3935a57fb2b65fbf26d117c37e391d10d5e",
        "urls": [
          "bzz-raw://68ed4b9c51d8a33014f66ae5ec24e9c0386735a9bbc9ae51a8893a98839d89f2",
          "dweb:/ipfs/QmNcidWmNob8DoU4UchesPk6fX1BaasDNdijDon4He83Ay"
        ],
        "license": "BSL-1.1"
      },
      "src/libraries/Fundamentals.sol": {
        "keccak256": "0x9d4e9b5091f5bcdb0fa9bb08231833f827bcda452a1cce04b0d8009c2a89b4a7",
        "urls": [
          "bzz-raw://84c53f41ebc42ab79a70188a174fefa9a09a3f849bf37dcd1a280c40896c0805",
          "dweb:/ipfs/QmZoD4itGT1DTCDXjgGT3gbLpSYtQreniT1iGzX591KqmL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/test/FakeBTC.sol": {
        "keccak256": "0xb819ab0da26575515179a74a565dcd14186f1b01a9cebef3fedd0cd8bf3259ab",
        "urls": [
          "bzz-raw://014d36752c53e1799c0b74c682e7da227c1f15ed7b3032a10eea8a51f448de36",
          "dweb:/ipfs/QmeJaDVES1nWPwsLe5tZWC2iv42dSB8nPkTGHJCACB9ef9"
        ],
        "license": "UNLICENSED"
      },
      "src/test/FakeUSD.sol": {
        "keccak256": "0xe30c661cf527613792b803d1df5b3210103fa846a990891a5e62f56c5838d5d4",
        "urls": [
          "bzz-raw://10de1cf6d75a68e821a9c5ffae73afb4877702183220076cdeb529e7126c4945",
          "dweb:/ipfs/QmQDsHj4Pg7SYWSGwgigwBLgdwrb5qsnL6g4gRxWRhLxFV"
        ],
        "license": "UNLICENSED"
      },
      "test/Pool.t.sol": {
        "keccak256": "0x403396eac449b41ed47716e357fde9122ac048e20e7633b5463b5063bda0af96",
        "urls": [
          "bzz-raw://ead9552a361abcad9b5a434e04091ec988c60a9e24d9de6afe784baad7881bba",
          "dweb:/ipfs/QmRXZYGo6kHpkCPhhthezWTPvacK3TA996b2v4Z6yhP79w"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Pool.t.sol",
    "id": 47120,
    "exportedSymbols": {
      "AccessControl": [
        27247
      ],
      "Address": [
        34466
      ],
      "Checkpoints": [
        35837
      ],
      "Clones": [
        32102
      ],
      "Cluster": [
        40046
      ],
      "Cluster__AlreadyInitialized": [
        39943
      ],
      "Cluster__InsufficientLiquidity": [
        39939
      ],
      "Cluster__NotAdmin": [
        39941
      ],
      "Context": [
        35859
      ],
      "Counters": [
        35933
      ],
      "DAOToken": [
        43596
      ],
      "DSTest": [
        2214
      ],
      "DoubleEndedQueue": [
        39620
      ],
      "ECDSA": [
        36683
      ],
      "EIP712": [
        36837
      ],
      "ERC165": [
        36861
      ],
      "ERC20": [
        32784
      ],
      "ERC20Burnable": [
        32906
      ],
      "ERC20Permit": [
        33801
      ],
      "ERC20Votes": [
        33604
      ],
      "Factory": [
        41496
      ],
      "Factory__GovernorExists": [
        41058
      ],
      "Factory__GovernorTokenNotInPool": [
        41060
      ],
      "Factory__IdenticalAddresses": [
        41048
      ],
      "Factory__OverAllocation": [
        41056
      ],
      "Factory__PoolExists": [
        41052
      ],
      "Factory__PoolNotFound": [
        41054
      ],
      "Factory__ZeroAddress": [
        41050
      ],
      "FakeBTC": [
        44550
      ],
      "FakeUSD": [
        44589
      ],
      "Fundamentals": [
        44511
      ],
      "Governor": [
        28741
      ],
      "GovernorCompatibilityBravo": [
        30726
      ],
      "GovernorCountingFractional": [
        427
      ],
      "GovernorCountingSimple": [
        31103
      ],
      "GovernorSettings": [
        31281
      ],
      "GovernorTimelockControl": [
        31658
      ],
      "GovernorVotes": [
        31700
      ],
      "GovernorVotesQuorumFraction": [
        31903
      ],
      "IAccessControl": [
        27320
      ],
      "ICluster": [
        43923
      ],
      "IERC1155Receiver": [
        32197
      ],
      "IERC165": [
        36873
      ],
      "IERC20": [
        32862
      ],
      "IERC20Metadata": [
        33629
      ],
      "IERC20Permit": [
        33837
      ],
      "IERC721Receiver": [
        34136
      ],
      "IFactory": [
        44138
      ],
      "IGovernor": [
        29038
      ],
      "IGovernorTimelock": [
        31944
      ],
      "ILPToken": [
        44213
      ],
      "IPool": [
        44348
      ],
      "ITokenManager": [
        44419
      ],
      "IVotes": [
        32022
      ],
      "LPToken": [
        41944
      ],
      "Math": [
        37738
      ],
      "Ownable": [
        27433
      ],
      "PRECISION": [
        44426
      ],
      "Pool": [
        43047
      ],
      "PoolTest": [
        47119
      ],
      "Pool__AlreadyInitialized": [
        41967
      ],
      "Pool__AmountIsZero": [
        41959
      ],
      "Pool__ForbiddenTokenInteraction": [
        41963
      ],
      "Pool__LowSurplus": [
        41957
      ],
      "Pool__MinLiquidity": [
        41961
      ],
      "Pool__OnlyFactory": [
        41965
      ],
      "ReentrancyGuard": [
        32156
      ],
      "SafeCast": [
        39279
      ],
      "SafeERC20": [
        34118
      ],
      "StairwayDAO": [
        43839
      ],
      "StairwayTimelock": [
        43892
      ],
      "StdAssertions": [
        3557
      ],
      "StdChains": [
        4221
      ],
      "StdCheats": [
        6182
      ],
      "StdStorage": [
        7089
      ],
      "StdUtils": [
        9276
      ],
      "Strings": [
        36108
      ],
      "Test": [
        9318
      ],
      "TestBase": [
        2274
      ],
      "TimelockController": [
        29952
      ],
      "Timers": [
        36322
      ],
      "TokenManager": [
        43398
      ],
      "TokenManager__AlreadyInitialized": [
        43057
      ],
      "TokenManager__ClusterAlreadyExists": [
        43059
      ],
      "TokenManager__InsufficientLiquidity": [
        43055
      ],
      "Vm": [
        10608
      ],
      "console": [
        18672
      ],
      "console2": [
        26768
      ],
      "stdError": [
        6248
      ],
      "stdJson": [
        6915
      ],
      "stdMath": [
        7057
      ],
      "stdStorage": [
        8522
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9236:81",
    "nodes": [
      {
        "id": 46053,
        "nodeType": "PragmaDirective",
        "src": "39:23:81",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 46054,
        "nodeType": "ImportDirective",
        "src": "64:28:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 9319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46055,
        "nodeType": "ImportDirective",
        "src": "93:37:81",
        "nodes": [],
        "absolutePath": "src/interfaces/IPool.sol",
        "file": "../src/interfaces/IPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 44349,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46056,
        "nodeType": "ImportDirective",
        "src": "131:33:81",
        "nodes": [],
        "absolutePath": "src/core/Factory.sol",
        "file": "../src/core/Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 41497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46057,
        "nodeType": "ImportDirective",
        "src": "165:30:81",
        "nodes": [],
        "absolutePath": "src/core/Pool.sol",
        "file": "../src/core/Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 43048,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46058,
        "nodeType": "ImportDirective",
        "src": "196:38:81",
        "nodes": [],
        "absolutePath": "src/core/TokenManager.sol",
        "file": "../src/core/TokenManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 43399,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46059,
        "nodeType": "ImportDirective",
        "src": "235:33:81",
        "nodes": [],
        "absolutePath": "src/core/Cluster.sol",
        "file": "../src/core/Cluster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 40047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46060,
        "nodeType": "ImportDirective",
        "src": "270:33:81",
        "nodes": [],
        "absolutePath": "src/test/FakeBTC.sol",
        "file": "../src/test/FakeBTC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 44551,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46061,
        "nodeType": "ImportDirective",
        "src": "304:33:81",
        "nodes": [],
        "absolutePath": "src/test/FakeUSD.sol",
        "file": "../src/test/FakeUSD.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 44590,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46062,
        "nodeType": "ImportDirective",
        "src": "338:43:81",
        "nodes": [],
        "absolutePath": "src/libraries/Fundamentals.sol",
        "file": "../src/libraries/Fundamentals.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 44512,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46064,
        "nodeType": "ImportDirective",
        "src": "382:46:81",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 18673,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46063,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 18672,
              "src": "390:7:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46065,
        "nodeType": "ImportDirective",
        "src": "430:33:81",
        "nodes": [],
        "absolutePath": "src/dao/DAOToken.sol",
        "file": "../src/dao/DAOToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 43597,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46066,
        "nodeType": "ImportDirective",
        "src": "464:36:81",
        "nodes": [],
        "absolutePath": "src/dao/StairwayDAO.sol",
        "file": "../src/dao/StairwayDAO.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 43840,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46067,
        "nodeType": "ImportDirective",
        "src": "501:41:81",
        "nodes": [],
        "absolutePath": "src/dao/StairwayTimelock.sol",
        "file": "../src/dao/StairwayTimelock.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47120,
        "sourceUnit": 43893,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47119,
        "nodeType": "ContractDefinition",
        "src": "544:8730:81",
        "nodes": [
          {
            "id": 46078,
            "nodeType": "EnumDefinition",
            "src": "576:164:81",
            "nodes": [],
            "canonicalName": "PoolTest.ProposalState",
            "members": [
              {
                "id": 46070,
                "name": "Pending",
                "nameLocation": "605:7:81",
                "nodeType": "EnumValue",
                "src": "605:7:81"
              },
              {
                "id": 46071,
                "name": "Active",
                "nameLocation": "622:6:81",
                "nodeType": "EnumValue",
                "src": "622:6:81"
              },
              {
                "id": 46072,
                "name": "Canceled",
                "nameLocation": "638:8:81",
                "nodeType": "EnumValue",
                "src": "638:8:81"
              },
              {
                "id": 46073,
                "name": "Defeated",
                "nameLocation": "656:8:81",
                "nodeType": "EnumValue",
                "src": "656:8:81"
              },
              {
                "id": 46074,
                "name": "Succeeded",
                "nameLocation": "674:9:81",
                "nodeType": "EnumValue",
                "src": "674:9:81"
              },
              {
                "id": 46075,
                "name": "Queued",
                "nameLocation": "693:6:81",
                "nodeType": "EnumValue",
                "src": "693:6:81"
              },
              {
                "id": 46076,
                "name": "Expired",
                "nameLocation": "709:7:81",
                "nodeType": "EnumValue",
                "src": "709:7:81"
              },
              {
                "id": 46077,
                "name": "Executed",
                "nameLocation": "726:8:81",
                "nodeType": "EnumValue",
                "src": "726:8:81"
              }
            ],
            "name": "ProposalState",
            "nameLocation": "581:13:81"
          },
          {
            "id": 46082,
            "nodeType": "EnumDefinition",
            "src": "746:67:81",
            "nodes": [],
            "canonicalName": "PoolTest.VoteType",
            "members": [
              {
                "id": 46079,
                "name": "Against",
                "nameLocation": "770:7:81",
                "nodeType": "EnumValue",
                "src": "770:7:81"
              },
              {
                "id": 46080,
                "name": "For",
                "nameLocation": "787:3:81",
                "nodeType": "EnumValue",
                "src": "787:3:81"
              },
              {
                "id": 46081,
                "name": "Abstain",
                "nameLocation": "800:7:81",
                "nodeType": "EnumValue",
                "src": "800:7:81"
              }
            ],
            "name": "VoteType",
            "nameLocation": "751:8:81"
          },
          {
            "id": 46085,
            "nodeType": "VariableDeclaration",
            "src": "819:17:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "16f0115b",
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "832:4:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPool_$44348",
              "typeString": "contract IPool"
            },
            "typeName": {
              "id": 46084,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46083,
                "name": "IPool",
                "nameLocations": [
                  "819:5:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44348,
                "src": "819:5:81"
              },
              "referencedDeclaration": 44348,
              "src": "819:5:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPool_$44348",
                "typeString": "contract IPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46088,
            "nodeType": "VariableDeclaration",
            "src": "842:22:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "857:7:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Factory_$41496",
              "typeString": "contract Factory"
            },
            "typeName": {
              "id": 46087,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46086,
                "name": "Factory",
                "nameLocations": [
                  "842:7:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41496,
                "src": "842:7:81"
              },
              "referencedDeclaration": 41496,
              "src": "842:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Factory_$41496",
                "typeString": "contract Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46091,
            "nodeType": "VariableDeclaration",
            "src": "870:19:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9d35e78",
            "mutability": "mutable",
            "name": "fBTC",
            "nameLocation": "885:4:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FakeBTC_$44550",
              "typeString": "contract FakeBTC"
            },
            "typeName": {
              "id": 46090,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46089,
                "name": "FakeBTC",
                "nameLocations": [
                  "870:7:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44550,
                "src": "870:7:81"
              },
              "referencedDeclaration": 44550,
              "src": "870:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FakeBTC_$44550",
                "typeString": "contract FakeBTC"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46094,
            "nodeType": "VariableDeclaration",
            "src": "895:19:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "094e23f9",
            "mutability": "mutable",
            "name": "fUSD",
            "nameLocation": "910:4:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FakeUSD_$44589",
              "typeString": "contract FakeUSD"
            },
            "typeName": {
              "id": 46093,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46092,
                "name": "FakeUSD",
                "nameLocations": [
                  "895:7:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44589,
                "src": "895:7:81"
              },
              "referencedDeclaration": 44589,
              "src": "895:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FakeUSD_$44589",
                "typeString": "contract FakeUSD"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46097,
            "nodeType": "VariableDeclaration",
            "src": "920:22:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "4162169f",
            "mutability": "mutable",
            "name": "dao",
            "nameLocation": "939:3:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StairwayDAO_$43839",
              "typeString": "contract StairwayDAO"
            },
            "typeName": {
              "id": 46096,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46095,
                "name": "StairwayDAO",
                "nameLocations": [
                  "920:11:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43839,
                "src": "920:11:81"
              },
              "referencedDeclaration": 43839,
              "src": "920:11:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                "typeString": "contract StairwayDAO"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46100,
            "nodeType": "VariableDeclaration",
            "src": "948:32:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "d33219b4",
            "mutability": "mutable",
            "name": "timelock",
            "nameLocation": "972:8:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
              "typeString": "contract StairwayTimelock"
            },
            "typeName": {
              "id": 46099,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46098,
                "name": "StairwayTimelock",
                "nameLocations": [
                  "948:16:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43892,
                "src": "948:16:81"
              },
              "referencedDeclaration": 43892,
              "src": "948:16:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                "typeString": "contract StairwayTimelock"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46103,
            "nodeType": "VariableDeclaration",
            "src": "986:24:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "f2475ed0",
            "mutability": "mutable",
            "name": "daotoken",
            "nameLocation": "1002:8:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DAOToken_$43596",
              "typeString": "contract DAOToken"
            },
            "typeName": {
              "id": 46102,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46101,
                "name": "DAOToken",
                "nameLocations": [
                  "986:8:81"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43596,
                "src": "986:8:81"
              },
              "referencedDeclaration": 43596,
              "src": "986:8:81",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DAOToken_$43596",
                "typeString": "contract DAOToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46105,
            "nodeType": "VariableDeclaration",
            "src": "1017:31:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "6694c06c",
            "mutability": "mutable",
            "name": "protocol_address",
            "nameLocation": "1032:16:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46104,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1017:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46107,
            "nodeType": "VariableDeclaration",
            "src": "1054:27:81",
            "nodes": [],
            "constant": false,
            "functionSelector": "4755abbb",
            "mutability": "mutable",
            "name": "pool_address",
            "nameLocation": "1069:12:81",
            "scope": 47119,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46106,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1054:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46429,
            "nodeType": "FunctionDefinition",
            "src": "1088:2292:81",
            "nodes": [],
            "body": {
              "id": 46428,
              "nodeType": "Block",
              "src": "1112:2268:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46110,
                      "name": "daotoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46103,
                      "src": "1122:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DAOToken_$43596",
                        "typeString": "contract DAOToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "id": 46118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030",
                            "id": 46114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1146:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1152:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1158:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1152:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1146:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          }
                        ],
                        "id": 46113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1133:12:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_DAOToken_$43596_$",
                          "typeString": "function (uint256) returns (contract DAOToken)"
                        },
                        "typeName": {
                          "id": 46112,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46111,
                            "name": "DAOToken",
                            "nameLocations": [
                              "1137:8:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43596,
                            "src": "1137:8:81"
                          },
                          "referencedDeclaration": 43596,
                          "src": "1137:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DAOToken_$43596",
                            "typeString": "contract DAOToken"
                          }
                        }
                      },
                      "id": 46119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1133:28:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DAOToken_$43596",
                        "typeString": "contract DAOToken"
                      }
                    },
                    "src": "1122:39:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DAOToken_$43596",
                      "typeString": "contract DAOToken"
                    }
                  },
                  "id": 46121,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:39:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46127,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1207:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1199:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46125,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1199:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1199:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46123,
                            "name": "daotoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46103,
                            "src": "1180:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAOToken_$43596",
                              "typeString": "contract DAOToken"
                            }
                          },
                          "id": 46124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1189:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "1180:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1180:33:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 46134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 46130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1215:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1221:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1227:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1221:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1215:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620696e697469616c204c5020546f6b656e73",
                        "id": 46135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1231:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5849d75e486252d00b425f6f69027c8b1101977cb4daf6610b249577cc88bf2",
                          "typeString": "literal_string \"Wrong amount of initial LP Tokens\""
                        },
                        "value": "Wrong amount of initial LP Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5849d75e486252d00b425f6f69027c8b1101977cb4daf6610b249577cc88bf2",
                          "typeString": "literal_string \"Wrong amount of initial LP Tokens\""
                        }
                      ],
                      "id": 46122,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "1171:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:96:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46137,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:96:81"
                },
                {
                  "assignments": [
                    46139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46139,
                      "mutability": "mutable",
                      "name": "poolTemplate",
                      "nameLocation": "1285:12:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46428,
                      "src": "1277:20:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46138,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1277:7:81",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46147,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1308:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$43047_$",
                            "typeString": "function () returns (contract Pool)"
                          },
                          "typeName": {
                            "id": 46143,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46142,
                              "name": "Pool",
                              "nameLocations": [
                                "1312:4:81"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 43047,
                              "src": "1312:4:81"
                            },
                            "referencedDeclaration": 43047,
                            "src": "1312:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$43047",
                              "typeString": "contract Pool"
                            }
                          }
                        },
                        "id": 46145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:10:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$43047",
                          "typeString": "contract Pool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Pool_$43047",
                          "typeString": "contract Pool"
                        }
                      ],
                      "id": 46141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1300:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46140,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1300:7:81",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1300:19:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1277:42:81"
                },
                {
                  "assignments": [
                    46149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46149,
                      "mutability": "mutable",
                      "name": "tokenManagerTemplate",
                      "nameLocation": "1337:20:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46428,
                      "src": "1329:28:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46148,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1329:7:81",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46157,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1368:16:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenManager_$43398_$",
                            "typeString": "function () returns (contract TokenManager)"
                          },
                          "typeName": {
                            "id": 46153,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46152,
                              "name": "TokenManager",
                              "nameLocations": [
                                "1372:12:81"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 43398,
                              "src": "1372:12:81"
                            },
                            "referencedDeclaration": 43398,
                            "src": "1372:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenManager_$43398",
                              "typeString": "contract TokenManager"
                            }
                          }
                        },
                        "id": 46155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1368:18:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenManager_$43398",
                          "typeString": "contract TokenManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenManager_$43398",
                          "typeString": "contract TokenManager"
                        }
                      ],
                      "id": 46151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1360:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46150,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1360:7:81",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1360:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1329:58:81"
                },
                {
                  "assignments": [
                    46159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46159,
                      "mutability": "mutable",
                      "name": "clusterTemplate",
                      "nameLocation": "1405:15:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 46428,
                      "src": "1397:23:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46158,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1397:7:81",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46167,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1431:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Cluster_$40046_$",
                            "typeString": "function () returns (contract Cluster)"
                          },
                          "typeName": {
                            "id": 46163,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 46162,
                              "name": "Cluster",
                              "nameLocations": [
                                "1435:7:81"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 40046,
                              "src": "1435:7:81"
                            },
                            "referencedDeclaration": 40046,
                            "src": "1435:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cluster_$40046",
                              "typeString": "contract Cluster"
                            }
                          }
                        },
                        "id": 46165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1431:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cluster_$40046",
                          "typeString": "contract Cluster"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Cluster_$40046",
                          "typeString": "contract Cluster"
                        }
                      ],
                      "id": 46161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1423:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46160,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1423:7:81",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1423:22:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1397:48:81"
                },
                {
                  "expression": {
                    "id": 46180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46168,
                      "name": "timelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46100,
                      "src": "1455:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                        "typeString": "contract StairwayTimelock"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46174,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1495:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PoolTest_$47119",
                                "typeString": "contract PoolTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PoolTest_$47119",
                                "typeString": "contract PoolTest"
                              }
                            ],
                            "id": 46173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1487:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46172,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1487:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1487:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46176,
                          "name": "poolTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46139,
                          "src": "1502:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46177,
                          "name": "tokenManagerTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46149,
                          "src": "1516:20:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46178,
                          "name": "clusterTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46159,
                          "src": "1538:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1466:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StairwayTimelock_$43892_$",
                          "typeString": "function (address,address,address,address) returns (contract StairwayTimelock)"
                        },
                        "typeName": {
                          "id": 46170,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46169,
                            "name": "StairwayTimelock",
                            "nameLocations": [
                              "1470:16:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43892,
                            "src": "1470:16:81"
                          },
                          "referencedDeclaration": 43892,
                          "src": "1470:16:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                            "typeString": "contract StairwayTimelock"
                          }
                        }
                      },
                      "id": 46179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1466:88:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                        "typeString": "contract StairwayTimelock"
                      }
                    },
                    "src": "1455:99:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                      "typeString": "contract StairwayTimelock"
                    }
                  },
                  "id": 46181,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:99:81"
                },
                {
                  "expression": {
                    "id": 46192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46182,
                      "name": "dao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46097,
                      "src": "1564:3:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                        "typeString": "contract StairwayDAO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 46188,
                              "name": "daotoken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46103,
                              "src": "1594:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DAOToken_$43596",
                                "typeString": "contract DAOToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DAOToken_$43596",
                                "typeString": "contract DAOToken"
                              }
                            ],
                            "id": 46187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1586:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1586:7:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1586:17:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 46190,
                          "name": "timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46100,
                          "src": "1605:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                            "typeString": "contract StairwayTimelock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                            "typeString": "contract StairwayTimelock"
                          }
                        ],
                        "id": 46185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1570:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_TimelockController_$29952_$returns$_t_contract$_StairwayDAO_$43839_$",
                          "typeString": "function (address,contract TimelockController) returns (contract StairwayDAO)"
                        },
                        "typeName": {
                          "id": 46184,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46183,
                            "name": "StairwayDAO",
                            "nameLocations": [
                              "1574:11:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43839,
                            "src": "1574:11:81"
                          },
                          "referencedDeclaration": 43839,
                          "src": "1574:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                            "typeString": "contract StairwayDAO"
                          }
                        }
                      },
                      "id": 46191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1570:44:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                        "typeString": "contract StairwayDAO"
                      }
                    },
                    "src": "1564:50:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                      "typeString": "contract StairwayDAO"
                    }
                  },
                  "id": 46193,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:50:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "50524f504f5345525f524f4c45",
                            "id": 46198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1654:15:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
                              "typeString": "literal_string \"PROPOSER_ROLE\""
                            },
                            "value": "PROPOSER_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
                              "typeString": "literal_string \"PROPOSER_ROLE\""
                            }
                          ],
                          "id": 46197,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1644:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 46199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1644:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46202,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46097,
                            "src": "1680:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                              "typeString": "contract StairwayDAO"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                              "typeString": "contract StairwayDAO"
                            }
                          ],
                          "id": 46201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1672:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1672:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1672:12:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46194,
                        "name": "timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46100,
                        "src": "1625:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                          "typeString": "contract StairwayTimelock"
                        }
                      },
                      "id": 46196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1634:9:81",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27098,
                      "src": "1625:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 46204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:60:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46205,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:60:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4558454355544f525f524f4c45",
                            "id": 46210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1724:15:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
                              "typeString": "literal_string \"EXECUTOR_ROLE\""
                            },
                            "value": "EXECUTOR_ROLE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
                              "typeString": "literal_string \"EXECUTOR_ROLE\""
                            }
                          ],
                          "id": 46209,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1714:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 46211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1714:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46214,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46097,
                            "src": "1750:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                              "typeString": "contract StairwayDAO"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                              "typeString": "contract StairwayDAO"
                            }
                          ],
                          "id": 46213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1742:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1742:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1742:12:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46206,
                        "name": "timelock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46100,
                        "src": "1695:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                          "typeString": "contract StairwayTimelock"
                        }
                      },
                      "id": 46208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1704:9:81",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27098,
                      "src": "1695:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 46216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:60:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46217,
                  "nodeType": "ExpressionStatement",
                  "src": "1695:60:81"
                },
                {
                  "expression": {
                    "id": 46222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46218,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46088,
                      "src": "1766:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$41496",
                        "typeString": "contract Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 46219,
                          "name": "timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46100,
                          "src": "1776:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                            "typeString": "contract StairwayTimelock"
                          }
                        },
                        "id": 46220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1785:7:81",
                        "memberName": "factory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43851,
                        "src": "1776:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Factory_$41496_$",
                          "typeString": "function () view external returns (contract Factory)"
                        }
                      },
                      "id": 46221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1776:18:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$41496",
                        "typeString": "contract Factory"
                      }
                    },
                    "src": "1766:28:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Factory_$41496",
                      "typeString": "contract Factory"
                    }
                  },
                  "id": 46223,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:28:81"
                },
                {
                  "expression": {
                    "id": 46229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46224,
                      "name": "protocol_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46105,
                      "src": "1804:16:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46227,
                          "name": "timelock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46100,
                          "src": "1831:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                            "typeString": "contract StairwayTimelock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StairwayTimelock_$43892",
                            "typeString": "contract StairwayTimelock"
                          }
                        ],
                        "id": 46226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1823:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1823:7:81",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1823:17:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1804:36:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46230,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:36:81"
                },
                {
                  "expression": {
                    "id": 46242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46231,
                      "name": "fUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46094,
                      "src": "1851:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeUSD_$44589",
                        "typeString": "contract FakeUSD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1870:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1877:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1883:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1877:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1870:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        {
                          "hexValue": "3138",
                          "id": 46240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1887:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 46234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1858:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint8_$returns$_t_contract$_FakeUSD_$44589_$",
                          "typeString": "function (uint256,uint8) returns (contract FakeUSD)"
                        },
                        "typeName": {
                          "id": 46233,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46232,
                            "name": "FakeUSD",
                            "nameLocations": [
                              "1862:7:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44589,
                            "src": "1862:7:81"
                          },
                          "referencedDeclaration": 44589,
                          "src": "1862:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeUSD_$44589",
                            "typeString": "contract FakeUSD"
                          }
                        }
                      },
                      "id": 46241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1858:32:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeUSD_$44589",
                        "typeString": "contract FakeUSD"
                      }
                    },
                    "src": "1851:39:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FakeUSD_$44589",
                      "typeString": "contract FakeUSD"
                    }
                  },
                  "id": 46243,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:39:81"
                },
                {
                  "expression": {
                    "id": 46255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46244,
                      "name": "fBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46091,
                      "src": "1900:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeBTC_$44550",
                        "typeString": "contract FakeBTC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1919:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1926:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1932:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1926:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1919:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        {
                          "hexValue": "3138",
                          "id": 46253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1936:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 46247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1907:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint8_$returns$_t_contract$_FakeBTC_$44550_$",
                          "typeString": "function (uint256,uint8) returns (contract FakeBTC)"
                        },
                        "typeName": {
                          "id": 46246,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46245,
                            "name": "FakeBTC",
                            "nameLocations": [
                              "1911:7:81"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44550,
                            "src": "1911:7:81"
                          },
                          "referencedDeclaration": 44550,
                          "src": "1911:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeBTC_$44550",
                            "typeString": "contract FakeBTC"
                          }
                        }
                      },
                      "id": 46254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1907:32:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeBTC_$44550",
                        "typeString": "contract FakeBTC"
                      }
                    },
                    "src": "1900:39:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FakeBTC_$44550",
                      "typeString": "contract FakeBTC"
                    }
                  },
                  "id": 46256,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:39:81"
                },
                {
                  "expression": {
                    "id": 46263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46257,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46085,
                      "src": "1949:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPool_$44348",
                        "typeString": "contract IPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46260,
                          "name": "fUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46094,
                          "src": "1975:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeUSD_$44589",
                            "typeString": "contract FakeUSD"
                          }
                        },
                        {
                          "id": 46261,
                          "name": "fBTC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46091,
                          "src": "1981:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeBTC_$44550",
                            "typeString": "contract FakeBTC"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FakeUSD_$44589",
                            "typeString": "contract FakeUSD"
                          },
                          {
                            "typeIdentifier": "t_contract$_FakeBTC_$44550",
                            "typeString": "contract FakeBTC"
                          }
                        ],
                        "expression": {
                          "id": 46258,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46088,
                          "src": "1956:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Factory_$41496",
                            "typeString": "contract Factory"
                          }
                        },
                        "id": 46259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1964:10:81",
                        "memberName": "createPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41381,
                        "src": "1956:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_contract$_IPool_$44348_$",
                          "typeString": "function (contract IERC20,contract IERC20) external returns (contract IPool)"
                        }
                      },
                      "id": 46262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1956:30:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPool_$44348",
                        "typeString": "contract IPool"
                      }
                    },
                    "src": "1949:37:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$44348",
                      "typeString": "contract IPool"
                    }
                  },
                  "id": 46264,
                  "nodeType": "ExpressionStatement",
                  "src": "1949:37:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30786365643665373935",
                        "id": 46268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2101:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3470190485_by_1",
                          "typeString": "int_const 3470190485"
                        },
                        "value": "0xced6e795"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3470190485_by_1",
                          "typeString": "int_const 3470190485"
                        }
                      ],
                      "expression": {
                        "id": 46265,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "2085:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2088:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10377,
                      "src": "2085:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 46269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2085:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46270,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:27:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46276,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2172:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2164:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2164:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2164:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46271,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46085,
                        "src": "2146:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 46273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2151:12:81",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44313,
                      "src": "2146:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2146:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46279,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46287,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2231:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2223:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46285,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2223:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2223:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46281,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "2198:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2203:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "2198:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2198:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2213:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "2198:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2198:39:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 46290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2239:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "55736572206973206e6f74207374617274696e6720776974682030204c5020746f6b656e73",
                        "id": 46291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2242:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee4644e3f90d91132bf4d68db25cb8d50c78b1b5de838312a27168e3801b61c8",
                          "typeString": "literal_string \"User is not starting with 0 LP tokens\""
                        },
                        "value": "User is not starting with 0 LP tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee4644e3f90d91132bf4d68db25cb8d50c78b1b5de838312a27168e3801b61c8",
                          "typeString": "literal_string \"User is not starting with 0 LP tokens\""
                        }
                      ],
                      "id": 46280,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "2189:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:93:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46293,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:93:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46299,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46105,
                            "src": "2326:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46295,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "2301:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2306:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "2301:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2301:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2316:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "2301:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2301:42:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 46301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2345:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "5468652044414f206973206e6f74207374617274696e6720776974682030204c5020746f6b656e73",
                        "id": 46302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2348:42:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2c464930866a77c2143e195e7ede024668c5f0c4bc363ef9ac5d17131130299",
                          "typeString": "literal_string \"The DAO is not starting with 0 LP tokens\""
                        },
                        "value": "The DAO is not starting with 0 LP tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2c464930866a77c2143e195e7ede024668c5f0c4bc363ef9ac5d17131130299",
                          "typeString": "literal_string \"The DAO is not starting with 0 LP tokens\""
                        }
                      ],
                      "id": 46294,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "2292:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2292:99:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46304,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:99:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46310,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2433:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2425:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46308,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2425:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2425:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46306,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46094,
                            "src": "2410:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 46307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2415:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "2410:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2410:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 46317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 46313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2441:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2448:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2454:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2448:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2441:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206469646e2774207265636569766520746865697220696e697469616c20313030302066555344",
                        "id": 46318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2458:49:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c208b15700ebc0661fc5e99a15a7e4d20ec19a76b69881e3a64040aec89368c4",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fUSD\""
                        },
                        "value": "The user didn't receive their initial 1000 fUSD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c208b15700ebc0661fc5e99a15a7e4d20ec19a76b69881e3a64040aec89368c4",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fUSD\""
                        }
                      ],
                      "id": 46305,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "2401:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2401:107:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46320,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:107:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46326,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2550:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2542:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46324,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2542:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2542:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46322,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46091,
                            "src": "2527:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 46323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2532:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "2527:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2527:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 46333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 46329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2558:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2565:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2571:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2565:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2558:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206469646e2774207265636569766520746865697220696e697469616c20313030302066425443",
                        "id": 46334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2575:49:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e005c92541868449c38a0dcf3cd11d3e3ee65c854a91a979ce815bb01e8b03a6",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fBTC\""
                        },
                        "value": "The user didn't receive their initial 1000 fBTC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e005c92541868449c38a0dcf3cd11d3e3ee65c854a91a979ce815bb01e8b03a6",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fBTC\""
                        }
                      ],
                      "id": 46321,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "2518:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:107:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46336,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:107:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46342,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "2658:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 46341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2650:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2650:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2650:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 46348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 46344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2665:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2671:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2677:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2671:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2665:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 46337,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46094,
                        "src": "2636:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      "id": 46339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2641:8:81",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32321,
                      "src": "2636:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2636:44:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46350,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:44:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46356,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "2712:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 46355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2704:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46354,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2704:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2704:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 46362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 46358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2719:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2725:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2731:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2725:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2719:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 46351,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46091,
                        "src": "2690:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      "id": 46353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2695:8:81",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32321,
                      "src": "2690:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2690:44:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46364,
                  "nodeType": "ExpressionStatement",
                  "src": "2690:44:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46370,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2771:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2763:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2763:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2763:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46365,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46085,
                        "src": "2745:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 46367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2750:12:81",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44313,
                      "src": "2745:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2745:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46373,
                  "nodeType": "ExpressionStatement",
                  "src": "2745:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46379,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2820:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2812:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46377,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2812:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2812:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46375,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46094,
                            "src": "2797:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 46376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2802:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "2797:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2797:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        "id": 46386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "333030",
                          "id": 46382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2828:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2834:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2840:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2834:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2828:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656e64696e67206c6971756964697479",
                        "id": 46387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2844:53:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db5b2c3eea565b3089d7492fa110c5598c5d593f7e5cf70be6878f83a6eacac9",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after sending liquidity\""
                        },
                        "value": "Wrong amount of user's fUSD after sending liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db5b2c3eea565b3089d7492fa110c5598c5d593f7e5cf70be6878f83a6eacac9",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after sending liquidity\""
                        }
                      ],
                      "id": 46374,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "2788:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:110:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46389,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:110:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46395,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2940:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2932:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46393,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2932:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2932:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46391,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46091,
                            "src": "2917:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 46392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2922:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "2917:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2917:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        "id": 46402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "333030",
                          "id": 46398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2948:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2954:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2960:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2954:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2948:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656e64696e67206c6971756964697479",
                        "id": 46403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2964:53:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e42953c41a2e1b00ec8ece237a8a06b693ed07856ccd24e3e4cbcd8c47b55822",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after sending liquidity\""
                        },
                        "value": "Wrong amount of user's fBTC after sending liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e42953c41a2e1b00ec8ece237a8a06b693ed07856ccd24e3e4cbcd8c47b55822",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after sending liquidity\""
                        }
                      ],
                      "id": 46390,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "2908:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:110:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46405,
                  "nodeType": "ExpressionStatement",
                  "src": "2908:110:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46413,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3241:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3233:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46411,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3233:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3233:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46407,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "3208:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3213:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "3208:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3208:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3223:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "3208:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3208:39:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 46420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 46416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3261:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3267:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3273:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3267:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "3261:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46421,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "3278:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3283:13:81",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "3278:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 46423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3278:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3261:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773204c502061667465722073656e64696e67206c6971756964697479",
                        "id": 46425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3312:51:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a8091e13f897ebe30f66df018ed1c6d598a1dc961432f6518a33c2e455330fb",
                          "typeString": "literal_string \"Wrong amount of user's LP after sending liquidity\""
                        },
                        "value": "Wrong amount of user's LP after sending liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a8091e13f897ebe30f66df018ed1c6d598a1dc961432f6518a33c2e455330fb",
                          "typeString": "literal_string \"Wrong amount of user's LP after sending liquidity\""
                        }
                      ],
                      "id": 46406,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3186:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3186:187:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46427,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:187:81"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1097:5:81",
            "parameters": {
              "id": 46108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:2:81"
            },
            "returnParameters": {
              "id": 46109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:81"
            },
            "scope": 47119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46542,
            "nodeType": "FunctionDefinition",
            "src": "3386:1011:81",
            "nodes": [],
            "body": {
              "id": 46541,
              "nodeType": "Block",
              "src": "3424:973:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30786365643665373935",
                        "id": 46435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3450:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3470190485_by_1",
                          "typeString": "int_const 3470190485"
                        },
                        "value": "0xced6e795"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3470190485_by_1",
                          "typeString": "int_const 3470190485"
                        }
                      ],
                      "expression": {
                        "id": 46432,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "3434:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3437:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10377,
                      "src": "3434:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 46436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3434:27:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46437,
                  "nodeType": "ExpressionStatement",
                  "src": "3434:27:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3524:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3516:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3516:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3516:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46438,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46085,
                        "src": "3495:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 46440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3500:15:81",
                      "memberName": "redeemLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44323,
                      "src": "3495:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 46445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3495:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 46446,
                  "nodeType": "ExpressionStatement",
                  "src": "3495:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46454,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "3573:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 46453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3565:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46452,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3565:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3565:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 46460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 46456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3580:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3586:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3592:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3586:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "3580:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46461,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "3597:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3602:13:81",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "3597:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 46463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3597:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3580:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 46447,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "3541:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          },
                          "id": 46449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3546:7:81",
                          "memberName": "lpToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44274,
                          "src": "3541:12:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                            "typeString": "function () view external returns (contract ILPToken)"
                          }
                        },
                        "id": 46450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:14:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$44213",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "id": 46451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3556:8:81",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32829,
                      "src": "3541:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3541:77:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46466,
                  "nodeType": "ExpressionStatement",
                  "src": "3541:77:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46472,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3657:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3649:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46470,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3649:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3649:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46467,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46085,
                        "src": "3628:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 46469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3633:15:81",
                      "memberName": "redeemLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44323,
                      "src": "3628:20:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 46474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 46475,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:35:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46481,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3719:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3711:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46479,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3711:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3711:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46477,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46094,
                            "src": "3696:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 46478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3701:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "3696:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3696:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3739:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3746:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3752:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3746:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "3739:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46489,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "3757:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3762:13:81",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "3757:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 46491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3757:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3739:38:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320665553442061667465722072656465656d696e67206c6971756964697479",
                        "id": 46493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3791:55:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0751d4bb99b179c8a02365e00aa8b17221ac1166cb815751cab9f33dfb4a5b88",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after redeeming liquidity\""
                        },
                        "value": "Wrong amount of user's fUSD after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0751d4bb99b179c8a02365e00aa8b17221ac1166cb815751cab9f33dfb4a5b88",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after redeeming liquidity\""
                        }
                      ],
                      "id": 46476,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3674:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:182:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46495,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:182:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46501,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3911:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3903:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46499,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3903:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3903:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46497,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46091,
                            "src": "3888:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 46498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3893:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "3888:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3888:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 46508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 46504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3931:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3938:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3944:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3938:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "3931:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46509,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "3949:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3954:13:81",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "3949:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 46511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3949:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3931:38:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320664254432061667465722072656465656d696e67206c6971756964697479",
                        "id": 46513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3983:55:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282f82f56ca05c2c55577df0d79a9dc748089633ffb85dbd583391dce5e5f2ad",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after redeeming liquidity\""
                        },
                        "value": "Wrong amount of user's fBTC after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282f82f56ca05c2c55577df0d79a9dc748089633ffb85dbd583391dce5e5f2ad",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after redeeming liquidity\""
                        }
                      ],
                      "id": 46496,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3866:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3866:182:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46515,
                  "nodeType": "ExpressionStatement",
                  "src": "3866:182:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46523,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4113:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4105:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46521,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4105:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4105:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46517,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "4080:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4085:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "4080:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4080:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4095:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "4080:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4080:39:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 46526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4133:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773204c5020746f6b656e732061667465722072656465656d696e67206c6971756964697479",
                        "id": 46527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4148:60:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c46169ae107203b28e697d27c2c4768af8db7d0e8e7dcac720f9f6ac1a0278",
                          "typeString": "literal_string \"Wrong amount of user's LP tokens after redeeming liquidity\""
                        },
                        "value": "Wrong amount of user's LP tokens after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c46169ae107203b28e697d27c2c4768af8db7d0e8e7dcac720f9f6ac1a0278",
                          "typeString": "literal_string \"Wrong amount of user's LP tokens after redeeming liquidity\""
                        }
                      ],
                      "id": 46516,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "4058:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:160:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46529,
                  "nodeType": "ExpressionStatement",
                  "src": "4058:160:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46535,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46105,
                            "src": "4275:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46531,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "4250:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4255:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "4250:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4250:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4265:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "4250:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4250:42:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 46537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4306:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662044414f2773204c5020746f6b656e732061667465722072656465656d696e67206c6971756964697479",
                        "id": 46538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4321:59:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5b4d8bdb5f62cd0662311744f3b4eeddab733fef1961344c40de292c3efcf98",
                          "typeString": "literal_string \"Wrong amount of DAO's LP tokens after redeeming liquidity\""
                        },
                        "value": "Wrong amount of DAO's LP tokens after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5b4d8bdb5f62cd0662311744f3b4eeddab733fef1961344c40de292c3efcf98",
                          "typeString": "literal_string \"Wrong amount of DAO's LP tokens after redeeming liquidity\""
                        }
                      ],
                      "id": 46530,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "4228:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:162:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46540,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:162:81"
                }
              ]
            },
            "functionSelector": "f9c6b568",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRedeemLiquidity",
            "nameLocation": "3395:19:81",
            "parameters": {
              "id": 46430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3414:2:81"
            },
            "returnParameters": {
              "id": 46431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3424:0:81"
            },
            "scope": 47119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46644,
            "nodeType": "FunctionDefinition",
            "src": "4403:1046:81",
            "nodes": [],
            "body": {
              "id": 46643,
              "nodeType": "Block",
              "src": "4429:1020:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46550,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "4617:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 46549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4609:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4609:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4609:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130313937343835303030303030303030303032",
                        "id": 46552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4624:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10197485000000000002_by_1",
                          "typeString": "int_const 10197485000000000002"
                        },
                        "value": "10197485000000000002"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10197485000000000002_by_1",
                          "typeString": "int_const 10197485000000000002"
                        }
                      ],
                      "expression": {
                        "id": 46545,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46091,
                        "src": "4595:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      "id": 46547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4600:8:81",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32321,
                      "src": "4595:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:50:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46554,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:50:81"
                },
                {
                  "body": {
                    "id": 46574,
                    "nodeType": "Block",
                    "src": "4753:49:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 46570,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4785:4:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolTest_$47119",
                                    "typeString": "contract PoolTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolTest_$47119",
                                    "typeString": "contract PoolTest"
                                  }
                                ],
                                "id": 46569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4777:7:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 46568,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4777:7:81",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 46571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4777:13:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 46565,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "4767:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4772:4:81",
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44347,
                            "src": "4767:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 46572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4767:24:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46573,
                        "nodeType": "ExpressionStatement",
                        "src": "4767:24:81"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46559,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46556,
                      "src": "4740:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 46560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4744:2:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "4740:6:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46575,
                  "initializationExpression": {
                    "assignments": [
                      46556
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 46556,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4733:1:81",
                        "nodeType": "VariableDeclaration",
                        "scope": 46575,
                        "src": "4725:9:81",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4725:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 46558,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 46557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4737:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4725:13:81"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 46563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4748:3:81",
                      "subExpression": {
                        "id": 46562,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46556,
                        "src": "4748:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 46564,
                    "nodeType": "ExpressionStatement",
                    "src": "4748:3:81"
                  },
                  "nodeType": "ForStatement",
                  "src": "4720:82:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46579,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46091,
                        "src": "4821:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46582,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4835:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4827:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46580,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4827:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4827:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46576,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46085,
                        "src": "4811:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 46578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4816:4:81",
                      "memberName": "skim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44332,
                      "src": "4811:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,address) external"
                      }
                    },
                    "id": 46584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:30:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46585,
                  "nodeType": "ExpressionStatement",
                  "src": "4811:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46591,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4884:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4876:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46589,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4876:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4876:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46587,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46094,
                            "src": "4861:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 46588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4866:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "4861:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4861:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333130303030303030303030303030303030303030",
                        "id": 46594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4892:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_310000000000000000000_by_1",
                          "typeString": "int_const 310000000000000000000"
                        },
                        "value": "310000000000000000000"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773206655534420616674657220627579696e67",
                        "id": 46595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4915:42:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_060c87c65c835a6c95a9e0260619d97b1fc5d2f29a1fd6639cfe14db3e44d16e",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after buying\""
                        },
                        "value": "Wrong amount of user's fUSD after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_310000000000000000000_by_1",
                          "typeString": "int_const 310000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_060c87c65c835a6c95a9e0260619d97b1fc5d2f29a1fd6639cfe14db3e44d16e",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after buying\""
                        }
                      ],
                      "id": 46586,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "4852:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:106:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46597,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:106:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46603,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5000:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4992:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46601,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4992:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4992:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46599,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46091,
                            "src": "4977:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 46600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4982:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "4977:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4977:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323839383032353134393939393939393939393938",
                        "id": 46606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5008:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_289802514999999999998_by_1",
                          "typeString": "int_const 289802514999999999998"
                        },
                        "value": "289802514999999999998"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773206642544320616674657220627579696e67",
                        "id": 46607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5031:42:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70bec4c8b8a5e8fd1d7f8b0a0a983d2b0483ccb0a4d45a483e03e9187ee6231f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after buying\""
                        },
                        "value": "Wrong amount of user's fBTC after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_289802514999999999998_by_1",
                          "typeString": "int_const 289802514999999999998"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70bec4c8b8a5e8fd1d7f8b0a0a983d2b0483ccb0a4d45a483e03e9187ee6231f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after buying\""
                        }
                      ],
                      "id": 46598,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "4968:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4968:106:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46609,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:106:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46617,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5140:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5132:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5132:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5132:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46611,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "5107:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5112:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "5107:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5107:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5122:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "5107:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5107:39:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 46624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 46620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5160:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5166:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5172:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "5166:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5160:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46625,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "5177:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5182:13:81",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "5177:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 46627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5177:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5160:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773204c5020546f6b656e7320616674657220627579696e67",
                        "id": 46629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5211:47:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7069a8236ad3c64353cda760c05ffd1db7992118e8a096bab8a655087c765165",
                          "typeString": "literal_string \"Wrong amount of user's LP Tokens after buying\""
                        },
                        "value": "Wrong amount of user's LP Tokens after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7069a8236ad3c64353cda760c05ffd1db7992118e8a096bab8a655087c765165",
                          "typeString": "literal_string \"Wrong amount of user's LP Tokens after buying\""
                        }
                      ],
                      "id": 46610,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5085:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5085:183:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46631,
                  "nodeType": "ExpressionStatement",
                  "src": "5085:183:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46637,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46105,
                            "src": "5325:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46633,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "5300:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5305:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "5300:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5300:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5315:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "5300:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5300:42:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32353930323236373037393330303334",
                        "id": 46639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5356:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2590226707930034_by_1",
                          "typeString": "int_const 2590226707930034"
                        },
                        "value": "2590226707930034"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e7320616674657220627579696e67",
                        "id": 46640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5386:46:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_964d7bd09fc0b9efe70edb2b2b928cb8ffd758fe7a6e3430f745af02fd93812c",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after buying\""
                        },
                        "value": "Wrong amount of DAO's LP Tokens after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2590226707930034_by_1",
                          "typeString": "int_const 2590226707930034"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_964d7bd09fc0b9efe70edb2b2b928cb8ffd758fe7a6e3430f745af02fd93812c",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after buying\""
                        }
                      ],
                      "id": 46632,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5278:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5278:164:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46642,
                  "nodeType": "ExpressionStatement",
                  "src": "5278:164:81"
                }
              ]
            },
            "functionSelector": "0b586cc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuy",
            "nameLocation": "4412:7:81",
            "parameters": {
              "id": 46543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4419:2:81"
            },
            "returnParameters": {
              "id": 46544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4429:0:81"
            },
            "scope": 47119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46746,
            "nodeType": "FunctionDefinition",
            "src": "5455:929:81",
            "nodes": [],
            "body": {
              "id": 46745,
              "nodeType": "Block",
              "src": "5482:902:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46652,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "5614:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 46651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5606:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5606:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5606:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130313937343835303030303030303030303032",
                        "id": 46654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5621:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10197485000000000002_by_1",
                          "typeString": "int_const 10197485000000000002"
                        },
                        "value": "10197485000000000002"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10197485000000000002_by_1",
                          "typeString": "int_const 10197485000000000002"
                        }
                      ],
                      "expression": {
                        "id": 46647,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46094,
                        "src": "5592:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      "id": 46649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5597:8:81",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32321,
                      "src": "5592:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5592:50:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46656,
                  "nodeType": "ExpressionStatement",
                  "src": "5592:50:81"
                },
                {
                  "body": {
                    "id": 46676,
                    "nodeType": "Block",
                    "src": "5684:49:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 46672,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5716:4:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PoolTest_$47119",
                                    "typeString": "contract PoolTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PoolTest_$47119",
                                    "typeString": "contract PoolTest"
                                  }
                                ],
                                "id": 46671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5708:7:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 46670,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5708:7:81",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 46673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5708:13:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 46667,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "5698:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5703:4:81",
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44347,
                            "src": "5698:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 46674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5698:24:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46675,
                        "nodeType": "ExpressionStatement",
                        "src": "5698:24:81"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46661,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46658,
                      "src": "5672:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "39",
                      "id": 46662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5676:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "src": "5672:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46677,
                  "initializationExpression": {
                    "assignments": [
                      46658
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 46658,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5665:1:81",
                        "nodeType": "VariableDeclaration",
                        "scope": 46677,
                        "src": "5657:9:81",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 46657,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5657:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 46660,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 46659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5669:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5657:13:81"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 46665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5679:3:81",
                      "subExpression": {
                        "id": 46664,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46658,
                        "src": "5679:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 46666,
                    "nodeType": "ExpressionStatement",
                    "src": "5679:3:81"
                  },
                  "nodeType": "ForStatement",
                  "src": "5652:81:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46681,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46094,
                        "src": "5752:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46684,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5766:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5758:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46682,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5758:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5758:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46678,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46085,
                        "src": "5742:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 46680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5747:4:81",
                      "memberName": "skim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44332,
                      "src": "5742:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,address) external"
                      }
                    },
                    "id": 46686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5742:30:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46687,
                  "nodeType": "ExpressionStatement",
                  "src": "5742:30:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46693,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5815:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5807:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46691,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5807:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5807:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46689,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46094,
                            "src": "5792:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 46690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5797:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "5792:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5792:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323839383032353134393939393939393939393938",
                        "id": 46696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5823:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_289802514999999999998_by_1",
                          "typeString": "int_const 289802514999999999998"
                        },
                        "value": "289802514999999999998"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656c6c696e67",
                        "id": 46697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5846:43:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76029cf0a7c1192871532329050a63f9186fe5e4c6c69e7500fc37df7b3e2742",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after selling\""
                        },
                        "value": "Wrong amount of user's fUSD after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_289802514999999999998_by_1",
                          "typeString": "int_const 289802514999999999998"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76029cf0a7c1192871532329050a63f9186fe5e4c6c69e7500fc37df7b3e2742",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after selling\""
                        }
                      ],
                      "id": 46688,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5783:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:107:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46699,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:107:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46705,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5932:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5924:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5924:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5924:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46701,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46091,
                            "src": "5909:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 46702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5914:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "5909:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5909:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333130303030303030303030303030303030303030",
                        "id": 46708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5940:21:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_310000000000000000000_by_1",
                          "typeString": "int_const 310000000000000000000"
                        },
                        "value": "310000000000000000000"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656c6c696e67",
                        "id": 46709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5963:43:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2b34fabcbf50aaff7cfc8b94836b479cfc1715aa159672de65a201e7db6eb0f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after selling\""
                        },
                        "value": "Wrong amount of user's fBTC after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_310000000000000000000_by_1",
                          "typeString": "int_const 310000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2b34fabcbf50aaff7cfc8b94836b479cfc1715aa159672de65a201e7db6eb0f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after selling\""
                        }
                      ],
                      "id": 46700,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5900:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:107:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46711,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:107:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46719,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6073:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6065:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46717,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6065:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6065:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46713,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "6040:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6045:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "6040:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6040:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6055:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "6040:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6040:39:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 46726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 46722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6093:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 46725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 46723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6099:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 46724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6105:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "6099:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "6093:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 46727,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46085,
                              "src": "6110:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 46728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6115:13:81",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "6110:18:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 46729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6110:20:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6093:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773204c5020546f6b656e732061667465722073656c6c696e67",
                        "id": 46731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6144:48:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61473f2f67778778affc529bdfe7a6b83ab34a0730887d0ee9f0aa3655094544",
                          "typeString": "literal_string \"Wrong amount of user's LP Tokens after selling\""
                        },
                        "value": "Wrong amount of user's LP Tokens after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61473f2f67778778affc529bdfe7a6b83ab34a0730887d0ee9f0aa3655094544",
                          "typeString": "literal_string \"Wrong amount of user's LP Tokens after selling\""
                        }
                      ],
                      "id": 46712,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6018:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:184:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46733,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:184:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46739,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46105,
                            "src": "6259:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46735,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46085,
                                "src": "6234:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPool_$44348",
                                  "typeString": "contract IPool"
                                }
                              },
                              "id": 46736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6239:7:81",
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 44274,
                              "src": "6234:12:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                                "typeString": "function () view external returns (contract ILPToken)"
                              }
                            },
                            "id": 46737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6234:14:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6249:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "6234:24:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6234:42:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32353930323236373037393330303334",
                        "id": 46741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6290:16:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2590226707930034_by_1",
                          "typeString": "int_const 2590226707930034"
                        },
                        "value": "2590226707930034"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e732061667465722073656c6c696e67",
                        "id": 46742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6320:47:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5e9b702d6b3494a5bdfe4c6f23d9a7d0e10edc01220c3b92b60199098f44ea5",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after selling\""
                        },
                        "value": "Wrong amount of DAO's LP Tokens after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2590226707930034_by_1",
                          "typeString": "int_const 2590226707930034"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5e9b702d6b3494a5bdfe4c6f23d9a7d0e10edc01220c3b92b60199098f44ea5",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after selling\""
                        }
                      ],
                      "id": 46734,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6212:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6212:165:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46744,
                  "nodeType": "ExpressionStatement",
                  "src": "6212:165:81"
                }
              ]
            },
            "functionSelector": "31c42ca6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSell",
            "nameLocation": "5464:8:81",
            "parameters": {
              "id": 46645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5472:2:81"
            },
            "returnParameters": {
              "id": 46646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5482:0:81"
            },
            "scope": 47119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46829,
            "nodeType": "FunctionDefinition",
            "src": "6390:712:81",
            "nodes": [],
            "body": {
              "id": 46828,
              "nodeType": "Block",
              "src": "6441:661:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46754,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46085,
                            "src": "6477:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 46753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6469:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46752,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6469:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6469:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "id": 46760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530",
                          "id": 46756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6484:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6489:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6495:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "6489:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "6484:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 46749,
                        "name": "daotoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46103,
                        "src": "6451:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DAOToken_$43596",
                          "typeString": "contract DAOToken"
                        }
                      },
                      "id": 46751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6460:8:81",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32321,
                      "src": "6451:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 46761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6451:47:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46762,
                  "nodeType": "ExpressionStatement",
                  "src": "6451:47:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46768,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6544:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6536:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46766,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6536:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6536:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46764,
                            "name": "daotoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46103,
                            "src": "6517:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAOToken_$43596",
                              "typeString": "contract DAOToken"
                            }
                          },
                          "id": 46765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6526:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "6517:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6517:33:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "id": 46775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530",
                          "id": 46771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6552:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6557:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6563:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "6557:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "6552:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620746f6b656e732073656e7420746f2074686520706f6f6c",
                        "id": 46776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6567:41:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2b4bbebff64f6b4dfd9311273cdcf6ffe39bc5d3ea7ded585b68a6329e810e9",
                          "typeString": "literal_string \"Wrong amount of tokens sent to the pool\""
                        },
                        "value": "Wrong amount of tokens sent to the pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2b4bbebff64f6b4dfd9311273cdcf6ffe39bc5d3ea7ded585b68a6329e810e9",
                          "typeString": "literal_string \"Wrong amount of tokens sent to the pool\""
                        }
                      ],
                      "id": 46763,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6508:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6508:101:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46778,
                  "nodeType": "ExpressionStatement",
                  "src": "6508:101:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420307837666139333835626531303261633365616332393734383364643632333364363262336531343936206973206d697373696e6720726f6c6520307836626536323639666365303865373462306666616566626230373937653163396562303264346632323532643937343230653061653837663939613234666330",
                        "id": 46782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6649:150:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a34f4a51dc11ed38a9ec12c5023349401144eb8163a885b9e3e56b731c68e207",
                          "typeString": "literal_string \"AccessControl: account 0x7fa9385be102ac3eac297483dd6233d62b3e1496 is missing role 0x6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc0\""
                        },
                        "value": "AccessControl: account 0x7fa9385be102ac3eac297483dd6233d62b3e1496 is missing role 0x6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a34f4a51dc11ed38a9ec12c5023349401144eb8163a885b9e3e56b731c68e207",
                          "typeString": "literal_string \"AccessControl: account 0x7fa9385be102ac3eac297483dd6233d62b3e1496 is missing role 0x6be6269fce08e74b0ffaefbb0797e1c9eb02d4f2252d97420e0ae87f99a24fc0\""
                        }
                      ],
                      "expression": {
                        "id": 46779,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "6620:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6623:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10372,
                      "src": "6620:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 46783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6620:189:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46784,
                  "nodeType": "ExpressionStatement",
                  "src": "6620:189:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46788,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46094,
                        "src": "6841:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 46789,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46091,
                        "src": "6847:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 46790,
                        "name": "daotoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46103,
                        "src": "6853:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DAOToken_$43596",
                          "typeString": "contract DAOToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46793,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6871:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6863:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6863:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6863:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_DAOToken_$43596",
                          "typeString": "contract DAOToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46785,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46088,
                        "src": "6819:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$41496",
                          "typeString": "contract Factory"
                        }
                      },
                      "id": 46787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6827:13:81",
                      "memberName": "recoverTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41495,
                      "src": "6819:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,contract IERC20,address) external"
                      }
                    },
                    "id": 46795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6819:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46796,
                  "nodeType": "ExpressionStatement",
                  "src": "6819:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46802,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6923:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6915:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46800,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6915:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6915:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46798,
                            "name": "daotoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46103,
                            "src": "6896:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAOToken_$43596",
                              "typeString": "contract DAOToken"
                            }
                          },
                          "id": 46799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6905:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "6896:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6896:33:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "id": 46809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530",
                          "id": 46805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6931:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6936:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6942:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "6936:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "6931:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616d6f756e742073686f756c64207374696c6c206265207468652073616d65",
                        "id": 46810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6946:39:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bf54fd06d677750c70568304cd160f4f31694350b6b53bbb13b30584c5c6806",
                          "typeString": "literal_string \"Token amount should still be the same\""
                        },
                        "value": "Token amount should still be the same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bf54fd06d677750c70568304cd160f4f31694350b6b53bbb13b30584c5c6806",
                          "typeString": "literal_string \"Token amount should still be the same\""
                        }
                      ],
                      "id": 46797,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6887:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6887:99:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46812,
                  "nodeType": "ExpressionStatement",
                  "src": "6887:99:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 46816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7013:34:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 46813,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "6997:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7000:12:81",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10372,
                      "src": "6997:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 46817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6997:51:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46818,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:51:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46824,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7089:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7081:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7081:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7081:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46819,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46088,
                        "src": "7058:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$41496",
                          "typeString": "contract Factory"
                        }
                      },
                      "id": 46821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7066:14:81",
                      "memberName": "grantPrivilege",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41161,
                      "src": "7058:22:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7058:37:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46827,
                  "nodeType": "ExpressionStatement",
                  "src": "7058:37:81"
                }
              ]
            },
            "functionSelector": "74a9f165",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRecoverStuckTokensWithoutDAO",
            "nameLocation": "6399:32:81",
            "parameters": {
              "id": 46747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6431:2:81"
            },
            "returnParameters": {
              "id": 46748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6441:0:81"
            },
            "scope": 47119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47118,
            "nodeType": "FunctionDefinition",
            "src": "7108:2164:81",
            "nodes": [],
            "body": {
              "id": 47117,
              "nodeType": "Block",
              "src": "7156:2116:81",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46837,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7320:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 46836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7312:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46835,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7312:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7312:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46833,
                            "name": "daotoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46103,
                            "src": "7293:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAOToken_$43596",
                              "typeString": "contract DAOToken"
                            }
                          },
                          "id": 46834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7302:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "7293:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7293:33:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 46844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 46840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7328:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 46843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 46841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7334:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 46842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7340:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7334:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7328:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620746f6b656e73207265636569766564",
                        "id": 46845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7344:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0448b287e4e4af1beb99206d2c450c43291dc5b9e450a27836c6e0bba9e5c89f",
                          "typeString": "literal_string \"Wrong amount of tokens received\""
                        },
                        "value": "Wrong amount of tokens received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0448b287e4e4af1beb99206d2c450c43291dc5b9e450a27836c6e0bba9e5c89f",
                          "typeString": "literal_string \"Wrong amount of tokens received\""
                        }
                      ],
                      "id": 46832,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "7284:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7284:94:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46847,
                  "nodeType": "ExpressionStatement",
                  "src": "7284:94:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 46851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 46848,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7524:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 46849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7530:6:81",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "7524:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 46850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7540:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7524:17:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46858,
                  "nodeType": "IfStatement",
                  "src": "7520:34:81",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 46855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7551:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "expression": {
                          "id": 46852,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2267,
                          "src": "7543:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$10608",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 46854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7546:4:81",
                        "memberName": "roll",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10295,
                        "src": "7543:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      },
                      "id": 46856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7543:11:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46857,
                    "nodeType": "ExpressionStatement",
                    "src": "7543:11:81"
                  }
                },
                {
                  "assignments": [
                    46860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46860,
                      "mutability": "mutable",
                      "name": "receiverCallData",
                      "nameLocation": "7606:16:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47117,
                      "src": "7593:29:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 46859,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7593:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46869,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6772616e7450726976696c656765286164647265737329",
                        "id": 46863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7649:25:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42b735e660643a25d4497404ba1971961200b96e8241bfd2449a9654947d3243",
                          "typeString": "literal_string \"grantPrivilege(address)\""
                        },
                        "value": "grantPrivilege(address)"
                      },
                      {
                        "arguments": [
                          {
                            "id": 46866,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7684:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7676:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46864,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7676:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7676:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42b735e660643a25d4497404ba1971961200b96e8241bfd2449a9654947d3243",
                          "typeString": "literal_string \"grantPrivilege(address)\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46861,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7625:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 46862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7629:19:81",
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "src": "7625:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 46868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7625:65:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7593:97:81"
                },
                {
                  "assignments": [
                    46874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46874,
                      "mutability": "mutable",
                      "name": "targets",
                      "nameLocation": "7718:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47117,
                      "src": "7701:24:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7701:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46873,
                        "nodeType": "ArrayTypeName",
                        "src": "7701:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46880,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7742:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 46877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7728:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7732:7:81",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46876,
                        "nodeType": "ArrayTypeName",
                        "src": "7732:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 46879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7728:16:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7701:43:81"
                },
                {
                  "assignments": [
                    46885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46885,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "7771:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47117,
                      "src": "7754:23:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46883,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7754:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 46884,
                        "nodeType": "ArrayTypeName",
                        "src": "7754:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46891,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7794:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 46888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7780:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46886,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7784:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 46887,
                        "nodeType": "ArrayTypeName",
                        "src": "7784:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 46890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7780:16:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7754:42:81"
                },
                {
                  "assignments": [
                    46896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46896,
                      "mutability": "mutable",
                      "name": "calldatas",
                      "nameLocation": "7821:9:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47117,
                      "src": "7806:24:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46894,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7806:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 46895,
                        "nodeType": "ArrayTypeName",
                        "src": "7806:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46902,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 46900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7845:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 46899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7833:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46897,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7837:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 46898,
                        "nodeType": "ArrayTypeName",
                        "src": "7837:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 46901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7833:14:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7806:41:81"
                },
                {
                  "expression": {
                    "id": 46910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46903,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46874,
                        "src": "7857:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 46905,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7865:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7857:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46908,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46088,
                          "src": "7878:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Factory_$41496",
                            "typeString": "contract Factory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Factory_$41496",
                            "typeString": "contract Factory"
                          }
                        ],
                        "id": 46907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7870:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7870:7:81",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7870:16:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7857:29:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46911,
                  "nodeType": "ExpressionStatement",
                  "src": "7857:29:81"
                },
                {
                  "expression": {
                    "id": 46916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46912,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46885,
                        "src": "7896:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 46914,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7903:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7896:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 46915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7908:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7896:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46917,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:13:81"
                },
                {
                  "expression": {
                    "id": 46922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 46918,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46896,
                        "src": "7942:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 46920,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 46919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7952:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7942:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46921,
                      "name": "receiverCallData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46860,
                      "src": "7957:16:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "7942:31:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 46923,
                  "nodeType": "ExpressionStatement",
                  "src": "7942:31:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46929,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8010:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 46928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8002:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46927,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8002:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8002:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46924,
                        "name": "daotoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46103,
                        "src": "7984:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DAOToken_$43596",
                          "typeString": "contract DAOToken"
                        }
                      },
                      "id": 46926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7993:8:81",
                      "memberName": "delegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33192,
                      "src": "7984:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7984:32:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46932,
                  "nodeType": "ExpressionStatement",
                  "src": "7984:32:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 46936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8034:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "id": 46933,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "8026:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8029:4:81",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10295,
                      "src": "8026:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 46937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:11:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46938,
                  "nodeType": "ExpressionStatement",
                  "src": "8026:11:81"
                },
                {
                  "assignments": [
                    46940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46940,
                      "mutability": "mutable",
                      "name": "proposalId",
                      "nameLocation": "8056:10:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 47117,
                      "src": "8048:18:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8048:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46941,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8048:18:81"
                },
                {
                  "expression": {
                    "id": 46950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46942,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46940,
                      "src": "8076:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46945,
                          "name": "targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46874,
                          "src": "8101:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 46946,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46885,
                          "src": "8110:6:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 46947,
                          "name": "calldatas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46896,
                          "src": "8118:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        {
                          "hexValue": "4772616e742070726976696c6567657320746f207265636f76657220737475636b20746f6b656e73",
                          "id": 46948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8129:42:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec",
                            "typeString": "literal_string \"Grant privileges to recover stuck tokens\""
                          },
                          "value": "Grant privileges to recover stuck tokens"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec",
                            "typeString": "literal_string \"Grant privileges to recover stuck tokens\""
                          }
                        ],
                        "expression": {
                          "id": 46943,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46097,
                          "src": "8089:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                            "typeString": "contract StairwayDAO"
                          }
                        },
                        "id": 46944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8093:7:81",
                        "memberName": "propose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43738,
                        "src": "8089:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,string memory) external returns (uint256)"
                        }
                      },
                      "id": 46949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8089:83:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8076:96:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46951,
                  "nodeType": "ExpressionStatement",
                  "src": "8076:96:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46957,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46940,
                                "src": "8210:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 46955,
                                "name": "dao",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46097,
                                "src": "8200:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                                  "typeString": "contract StairwayDAO"
                                }
                              },
                              "id": 46956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8204:5:81",
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43710,
                              "src": "8200:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$28756_$",
                                "typeString": "function (uint256) view external returns (enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 46958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8200:21:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          ],
                          "id": 46954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8192:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46953,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8192:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8192:30:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46962,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46078,
                              "src": "8232:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$46078_$",
                                "typeString": "type(enum PoolTest.ProposalState)"
                              }
                            },
                            "id": 46963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8246:7:81",
                            "memberName": "Pending",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46070,
                            "src": "8232:21:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          ],
                          "id": 46961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8224:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46960,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8224:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8224:30:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46952,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 942,
                      "src": "8183:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 46965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8183:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46966,
                  "nodeType": "ExpressionStatement",
                  "src": "8183:72:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 46972,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46940,
                              "src": "8339:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 46970,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46097,
                              "src": "8318:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                                "typeString": "contract StairwayDAO"
                              }
                            },
                            "id": 46971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8322:16:81",
                            "memberName": "proposalSnapshot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27776,
                            "src": "8318:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 46973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8318:32:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 46974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8353:2:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "8318:37:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 46967,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "8310:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8313:4:81",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10295,
                      "src": "8310:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 46976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8310:46:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46977,
                  "nodeType": "ExpressionStatement",
                  "src": "8310:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46983,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46940,
                                "src": "8393:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 46981,
                                "name": "dao",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46097,
                                "src": "8383:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                                  "typeString": "contract StairwayDAO"
                                }
                              },
                              "id": 46982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8387:5:81",
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43710,
                              "src": "8383:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$28756_$",
                                "typeString": "function (uint256) view external returns (enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 46984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8383:21:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          ],
                          "id": 46980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8375:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46979,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8375:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8375:30:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46988,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46078,
                              "src": "8415:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$46078_$",
                                "typeString": "type(enum PoolTest.ProposalState)"
                              }
                            },
                            "id": 46989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8429:6:81",
                            "memberName": "Active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46071,
                            "src": "8415:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          ],
                          "id": 46987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8407:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 46986,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8407:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8407:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 46978,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 942,
                      "src": "8366:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 46991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8366:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46992,
                  "nodeType": "ExpressionStatement",
                  "src": "8366:71:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46996,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46940,
                        "src": "8461:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46999,
                              "name": "VoteType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46082,
                              "src": "8479:8:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_VoteType_$46082_$",
                                "typeString": "type(enum PoolTest.VoteType)"
                              }
                            },
                            "id": 47000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8488:3:81",
                            "memberName": "For",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46080,
                            "src": "8479:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteType_$46082",
                              "typeString": "enum PoolTest.VoteType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_VoteType_$46082",
                              "typeString": "enum PoolTest.VoteType"
                            }
                          ],
                          "id": 46998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8473:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 46997,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "8473:5:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8473:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 46993,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46097,
                        "src": "8448:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                          "typeString": "contract StairwayDAO"
                        }
                      },
                      "id": 46995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8452:8:81",
                      "memberName": "castVote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28370,
                      "src": "8448:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint8) external returns (uint256)"
                      }
                    },
                    "id": 47002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8448:45:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47003,
                  "nodeType": "ExpressionStatement",
                  "src": "8448:45:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "353030303030",
                        "id": 47007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8511:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        "value": "500000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        }
                      ],
                      "expression": {
                        "id": 47004,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "8503:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8506:4:81",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10295,
                      "src": "8503:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 47008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8503:15:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47009,
                  "nodeType": "ExpressionStatement",
                  "src": "8503:15:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47015,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46940,
                                "src": "8555:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 47013,
                                "name": "dao",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46097,
                                "src": "8545:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                                  "typeString": "contract StairwayDAO"
                                }
                              },
                              "id": 47014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8549:5:81",
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43710,
                              "src": "8545:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$28756_$",
                                "typeString": "function (uint256) view external returns (enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 47016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8545:21:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          ],
                          "id": 47012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8537:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 47011,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8537:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8537:30:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 47020,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46078,
                              "src": "8577:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$46078_$",
                                "typeString": "type(enum PoolTest.ProposalState)"
                              }
                            },
                            "id": 47021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8591:9:81",
                            "memberName": "Succeeded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46074,
                            "src": "8577:23:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          ],
                          "id": 47019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8569:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 47018,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8569:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8569:32:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47010,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 942,
                      "src": "8528:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8528:74:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47024,
                  "nodeType": "ExpressionStatement",
                  "src": "8528:74:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47028,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46874,
                        "src": "8623:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 47029,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46885,
                        "src": "8632:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 47030,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46896,
                        "src": "8640:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4772616e742070726976696c6567657320746f207265636f76657220737475636b20746f6b656e73",
                            "id": 47032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8661:42:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec",
                              "typeString": "literal_string \"Grant privileges to recover stuck tokens\""
                            },
                            "value": "Grant privileges to recover stuck tokens"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec",
                              "typeString": "literal_string \"Grant privileges to recover stuck tokens\""
                            }
                          ],
                          "id": 47031,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8651:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 47033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8651:53:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 47025,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46097,
                        "src": "8613:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                          "typeString": "contract StairwayDAO"
                        }
                      },
                      "id": 47027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8617:5:81",
                      "memberName": "queue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31525,
                      "src": "8613:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) external returns (uint256)"
                      }
                    },
                    "id": 47034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8613:92:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47035,
                  "nodeType": "ExpressionStatement",
                  "src": "8613:92:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47041,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46940,
                                "src": "8742:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 47039,
                                "name": "dao",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46097,
                                "src": "8732:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                                  "typeString": "contract StairwayDAO"
                                }
                              },
                              "id": 47040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8736:5:81",
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43710,
                              "src": "8732:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$28756_$",
                                "typeString": "function (uint256) view external returns (enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 47042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8732:21:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          ],
                          "id": 47038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8724:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 47037,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8724:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8724:30:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 47046,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46078,
                              "src": "8764:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$46078_$",
                                "typeString": "type(enum PoolTest.ProposalState)"
                              }
                            },
                            "id": 47047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8778:6:81",
                            "memberName": "Queued",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46075,
                            "src": "8764:20:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          ],
                          "id": 47045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8756:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 47044,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8756:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8756:29:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47036,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 942,
                      "src": "8715:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8715:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47050,
                  "nodeType": "ExpressionStatement",
                  "src": "8715:71:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31333030303030",
                        "id": 47054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8868:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1300000_by_1",
                          "typeString": "int_const 1300000"
                        },
                        "value": "1300000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1300000_by_1",
                          "typeString": "int_const 1300000"
                        }
                      ],
                      "expression": {
                        "id": 47051,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "8860:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8863:4:81",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10290,
                      "src": "8860:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 47055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8860:16:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47056,
                  "nodeType": "ExpressionStatement",
                  "src": "8860:16:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47060,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46874,
                        "src": "8898:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 47061,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46885,
                        "src": "8907:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 47062,
                        "name": "calldatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46896,
                        "src": "8915:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4772616e742070726976696c6567657320746f207265636f76657220737475636b20746f6b656e73",
                            "id": 47064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8936:42:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec",
                              "typeString": "literal_string \"Grant privileges to recover stuck tokens\""
                            },
                            "value": "Grant privileges to recover stuck tokens"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e343f9799114ebec4938ec3b477b5f9ad8bacbce4bea12e0fc7c81e64c3185ec",
                              "typeString": "literal_string \"Grant privileges to recover stuck tokens\""
                            }
                          ],
                          "id": 47063,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "8926:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 47065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8926:53:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 47057,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46097,
                        "src": "8886:3:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                          "typeString": "contract StairwayDAO"
                        }
                      },
                      "id": 47059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8890:7:81",
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28084,
                      "src": "8886:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (address[] memory,uint256[] memory,bytes memory[] memory,bytes32) payable external returns (uint256)"
                      }
                    },
                    "id": 47066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8886:94:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47067,
                  "nodeType": "ExpressionStatement",
                  "src": "8886:94:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47073,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46940,
                                "src": "9017:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 47071,
                                "name": "dao",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46097,
                                "src": "9007:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StairwayDAO_$43839",
                                  "typeString": "contract StairwayDAO"
                                }
                              },
                              "id": 47072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9011:5:81",
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43710,
                              "src": "9007:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_enum$_ProposalState_$28756_$",
                                "typeString": "function (uint256) view external returns (enum IGovernor.ProposalState)"
                              }
                            },
                            "id": 47074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9007:21:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$28756",
                              "typeString": "enum IGovernor.ProposalState"
                            }
                          ],
                          "id": 47070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8999:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 47069,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8999:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8999:30:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 47078,
                              "name": "ProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46078,
                              "src": "9039:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProposalState_$46078_$",
                                "typeString": "type(enum PoolTest.ProposalState)"
                              }
                            },
                            "id": 47079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9053:8:81",
                            "memberName": "Executed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46077,
                            "src": "9039:22:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_ProposalState_$46078",
                              "typeString": "enum PoolTest.ProposalState"
                            }
                          ],
                          "id": 47077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9031:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 47076,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9031:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9031:31:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47068,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 942,
                      "src": "8990:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 47081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8990:73:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47082,
                  "nodeType": "ExpressionStatement",
                  "src": "8990:73:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31343030303030",
                        "id": 47086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9081:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1400000_by_1",
                          "typeString": "int_const 1400000"
                        },
                        "value": "1400000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1400000_by_1",
                          "typeString": "int_const 1400000"
                        }
                      ],
                      "expression": {
                        "id": 47083,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "9073:2:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 47085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9076:4:81",
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10290,
                      "src": "9073:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 47087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9073:16:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47088,
                  "nodeType": "ExpressionStatement",
                  "src": "9073:16:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47092,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46094,
                        "src": "9122:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 47093,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46091,
                        "src": "9128:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 47094,
                        "name": "daotoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46103,
                        "src": "9134:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DAOToken_$43596",
                          "typeString": "contract DAOToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47097,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9152:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PoolTest_$47119",
                              "typeString": "contract PoolTest"
                            }
                          ],
                          "id": 47096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9144:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9144:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9144:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_DAOToken_$43596",
                          "typeString": "contract DAOToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47089,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46088,
                        "src": "9100:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Factory_$41496",
                          "typeString": "contract Factory"
                        }
                      },
                      "id": 47091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9108:13:81",
                      "memberName": "recoverTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41495,
                      "src": "9100:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,contract IERC20,address) external"
                      }
                    },
                    "id": 47099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9100:58:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47100,
                  "nodeType": "ExpressionStatement",
                  "src": "9100:58:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47106,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9204:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PoolTest_$47119",
                                  "typeString": "contract PoolTest"
                                }
                              ],
                              "id": 47105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9196:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47104,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9196:7:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9196:13:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47102,
                            "name": "daotoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46103,
                            "src": "9177:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DAOToken_$43596",
                              "typeString": "contract DAOToken"
                            }
                          },
                          "id": 47103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9186:9:81",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "9177:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 47108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9177:33:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 47113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 47109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9212:3:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 47112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 47110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9218:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 47111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9224:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "9218:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "9212:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616d6f756e742073686f756c642062652074686520696e697469616c",
                        "id": 47114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9228:36:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0463498ee7fa600a7b7373fa83e2113e1b891157cf39135ba5113658fe0630f",
                          "typeString": "literal_string \"Token amount should be the initial\""
                        },
                        "value": "Token amount should be the initial"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0463498ee7fa600a7b7373fa83e2113e1b891157cf39135ba5113658fe0630f",
                          "typeString": "literal_string \"Token amount should be the initial\""
                        }
                      ],
                      "id": 47101,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "9168:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 47115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9168:97:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47116,
                  "nodeType": "ExpressionStatement",
                  "src": "9168:97:81"
                }
              ]
            },
            "functionSelector": "29e8d788",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRecoverStuckTokensWithDAO",
            "nameLocation": "7117:29:81",
            "parameters": {
              "id": 46830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7146:2:81"
            },
            "returnParameters": {
              "id": 46831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7156:0:81"
            },
            "scope": 47119,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46068,
              "name": "Test",
              "nameLocations": [
                "565:4:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9318,
              "src": "565:4:81"
            },
            "id": 46069,
            "nodeType": "InheritanceSpecifier",
            "src": "565:4:81"
          }
        ],
        "canonicalName": "PoolTest",
        "contractDependencies": [
          40046,
          43047,
          43398,
          43596,
          43839,
          43892,
          44550,
          44589
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47119,
          9318,
          2274,
          2271,
          9276,
          6182,
          5793,
          4221,
          3557,
          2214
        ],
        "name": "PoolTest",
        "nameLocation": "553:8:81",
        "scope": 47120,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 81
}