{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "acceptedSlippage",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "desiredAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateBaseTokenReceived",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBase",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "desiredAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateTotalCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "getBidAsk",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ask",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxPrice",
          "type": "uint256"
        }
      ],
      "name": "getDepth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "desiredAmountTokenA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "desiredAmountTokenB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lpTokenQty",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "acceptedSlippage",
          "type": "uint256"
        }
      ],
      "name": "redeemLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "unredeemedLpTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "ba9f20b8",
    "buy(address,address,uint256,uint256,address,uint256)": "09aa45a0",
    "calculateBaseTokenReceived(address,address,uint256)": "a6b57fc8",
    "calculateTotalCost(address,address,uint256)": "db9c3033",
    "getBidAsk(address,address)": "8924d15c",
    "getDepth(address,address,uint256)": "9f5fe72b",
    "redeemLiquidity(address,address,uint256,uint256,uint256,address,uint256,uint256)": "3118b3c8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"acceptedSlippage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"desiredAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"calculateBaseTokenReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBase\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"desiredAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTotalCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getBidAsk\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ask\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPrice\",\"type\":\"uint256\"}],\"name\":\"getDepth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"desiredAmountTokenA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"desiredAmountTokenB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenQty\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"acceptedSlippage\",\"type\":\"uint256\"}],\"name\":\"redeemLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unredeemedLpTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for a decentralized exchange (DEX2) defining essential functions for token trading, liquidity provision, and liquidity redemption.\",\"kind\":\"dev\",\"methods\":{\"buy(address,address,uint256,uint256,address,uint256)\":{\"details\":\"Executes a buy transaction on the decentralized exchange. The function first ensures that the desired base tokens amount and maximum allowed quote tokens price are within the limits. It then executes the buy transaction via a helper function. NOTE: This function could potentially run out of gas if the limits set by the liquidity manager are too high, as it performs several computations and an external function call.\",\"params\":{\"baseToken\":\"The base token the user wants to buy.\",\"deadline\":\"The time after which the transaction should not be executable.\",\"desiredAmount\":\"The amount of base tokens the user desires to buy.\",\"maxPrice\":\"The maximum price (in quote tokens) the user is willing to pay for each base token.\",\"quoteToken\":\"The quote token the user wants to spend.\",\"recipient\":\"The address to receive the base tokens.\"},\"returns\":{\"totalIn\":\"The total amount of quote tokens that was spent.\",\"totalOut\":\"The total amount of base tokens that was received.\"}},\"calculateBaseTokenReceived(address,address,uint256)\":{\"details\":\"Calculates the total base tokens a user would receive for a given amount of quote tokens. The function steps through each price level until the entire amount of quote tokens would be spent, accumulating the base tokens that would be received at each price level. NOTE: This function uses a while loop which could potentially run out of gas if the given quote token amount is too high. Users should ensure that the quote token amount is set to a reasonable level before calling this function. Furthermore, when the remaining quote token amount becomes less than the current price, the function stops to prevent purchasing fractional tokens or running into a situation where the remaining quote amount cannot be fully utilized.\",\"params\":{\"baseToken\":\"The base token that the user wants to receive.\",\"quoteAmount\":\"The total amount of quote tokens that the user wants to spend.\",\"quoteToken\":\"The quote token that would be used to buy the base token.\"},\"returns\":{\"totalBase\":\"The total base tokens the user would receive for the given quote token amount.\"}},\"calculateTotalCost(address,address,uint256)\":{\"details\":\"Calculates the total quote tokens required to buy a specific amount of base tokens. This function steps through prices and their corresponding depths to determine the exact cost to buy a certain amount of base tokens. NOTE: The function uses a while loop which could potentially run out of gas if the desired amount is significantly larger than the available liquidity in the pool. Users should ensure the pool has sufficient liquidity for their order before calling this function.\",\"params\":{\"baseToken\":\"The base token that the user wants to buy.\",\"desiredAmount\":\"The amount of base tokens the user wants to buy.\",\"quoteToken\":\"The quote token that the user wants to spend.\"},\"returns\":{\"totalCost\":\"The exact total cost in quote tokens to buy the desired amount of base tokens.\"}},\"getDepth(address,address,uint256)\":{\"details\":\"Calculates the total depth of base tokens available for a given maximum price. The function steps through each price level until the maximum price is reached, accumulating the depth available at each price level. NOTE: This function uses a while loop which could potentially run out of gas if the maximum price is set too high compared to the current price. Users should ensure that the maximum price is set to a reasonable level relative to the current price before calling this function.\",\"params\":{\"baseToken\":\"The base token that the user is interested in.\",\"maxPrice\":\"The maximum price the user is willing to pay per base token.\",\"quoteToken\":\"The quote token that would be used to buy the base token.\"},\"returns\":{\"depth\":\"The total depth of base tokens available for the given maximum price.\"}}},\"title\":\"IDEX2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IDEX2.sol\":\"IDEX2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"src/interfaces/IDEX2.sol\":{\"keccak256\":\"0xa186b416ee2cb794dab69866432cbf029b038833078210ec24c64af63fb744e7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1cd15501b796ef2814b974bc69c47774e5d5219e8f478720e1a80f65a6bb45b9\",\"dweb:/ipfs/QmVgVd9Wdhvqtdmf6SLdvYBSLHbgxK65zudoCo2qfor4Zs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "acceptedSlippage",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "desiredAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateBaseTokenReceived",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalBase",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "desiredAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTotalCost",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalCost",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "quoteToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBidAsk",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ask",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepth",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "depth",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "desiredAmountTokenA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "desiredAmountTokenB",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lpTokenQty",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "acceptedSlippage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "unredeemedLpTokens",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buy(address,address,uint256,uint256,address,uint256)": {
            "details": "Executes a buy transaction on the decentralized exchange. The function first ensures that the desired base tokens amount and maximum allowed quote tokens price are within the limits. It then executes the buy transaction via a helper function. NOTE: This function could potentially run out of gas if the limits set by the liquidity manager are too high, as it performs several computations and an external function call.",
            "params": {
              "baseToken": "The base token the user wants to buy.",
              "deadline": "The time after which the transaction should not be executable.",
              "desiredAmount": "The amount of base tokens the user desires to buy.",
              "maxPrice": "The maximum price (in quote tokens) the user is willing to pay for each base token.",
              "quoteToken": "The quote token the user wants to spend.",
              "recipient": "The address to receive the base tokens."
            },
            "returns": {
              "totalIn": "The total amount of quote tokens that was spent.",
              "totalOut": "The total amount of base tokens that was received."
            }
          },
          "calculateBaseTokenReceived(address,address,uint256)": {
            "details": "Calculates the total base tokens a user would receive for a given amount of quote tokens. The function steps through each price level until the entire amount of quote tokens would be spent, accumulating the base tokens that would be received at each price level. NOTE: This function uses a while loop which could potentially run out of gas if the given quote token amount is too high. Users should ensure that the quote token amount is set to a reasonable level before calling this function. Furthermore, when the remaining quote token amount becomes less than the current price, the function stops to prevent purchasing fractional tokens or running into a situation where the remaining quote amount cannot be fully utilized.",
            "params": {
              "baseToken": "The base token that the user wants to receive.",
              "quoteAmount": "The total amount of quote tokens that the user wants to spend.",
              "quoteToken": "The quote token that would be used to buy the base token."
            },
            "returns": {
              "totalBase": "The total base tokens the user would receive for the given quote token amount."
            }
          },
          "calculateTotalCost(address,address,uint256)": {
            "details": "Calculates the total quote tokens required to buy a specific amount of base tokens. This function steps through prices and their corresponding depths to determine the exact cost to buy a certain amount of base tokens. NOTE: The function uses a while loop which could potentially run out of gas if the desired amount is significantly larger than the available liquidity in the pool. Users should ensure the pool has sufficient liquidity for their order before calling this function.",
            "params": {
              "baseToken": "The base token that the user wants to buy.",
              "desiredAmount": "The amount of base tokens the user wants to buy.",
              "quoteToken": "The quote token that the user wants to spend."
            },
            "returns": {
              "totalCost": "The exact total cost in quote tokens to buy the desired amount of base tokens."
            }
          },
          "getDepth(address,address,uint256)": {
            "details": "Calculates the total depth of base tokens available for a given maximum price. The function steps through each price level until the maximum price is reached, accumulating the depth available at each price level. NOTE: This function uses a while loop which could potentially run out of gas if the maximum price is set too high compared to the current price. Users should ensure that the maximum price is set to a reasonable level relative to the current price before calling this function.",
            "params": {
              "baseToken": "The base token that the user is interested in.",
              "maxPrice": "The maximum price the user is willing to pay per base token.",
              "quoteToken": "The quote token that would be used to buy the base token."
            },
            "returns": {
              "depth": "The total depth of base tokens available for the given maximum price."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IDEX2.sol": "IDEX2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "src/interfaces/IDEX2.sol": {
        "keccak256": "0xa186b416ee2cb794dab69866432cbf029b038833078210ec24c64af63fb744e7",
        "urls": [
          "bzz-raw://1cd15501b796ef2814b974bc69c47774e5d5219e8f478720e1a80f65a6bb45b9",
          "dweb:/ipfs/QmVgVd9Wdhvqtdmf6SLdvYBSLHbgxK65zudoCo2qfor4Zs"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IDEX2.sol",
    "id": 65129,
    "exportedSymbols": {
      "IDEX2": [
        65128
      ],
      "IERC20": [
        48295
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:5875:82",
    "nodes": [
      {
        "id": 65002,
        "nodeType": "PragmaDirective",
        "src": "46:24:82",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 65003,
        "nodeType": "ImportDirective",
        "src": "74:56:82",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 65129,
        "sourceUnit": 48296,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 65128,
        "nodeType": "ContractDefinition",
        "src": "311:5608:82",
        "nodes": [
          {
            "id": 65017,
            "nodeType": "FunctionDefinition",
            "src": "334:130:82",
            "nodes": [],
            "functionSelector": "8924d15c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBidAsk",
            "nameLocation": "343:9:82",
            "parameters": {
              "id": 65011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65007,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "370:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65017,
                  "src": "363:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65006,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65005,
                      "name": "IERC20",
                      "nameLocations": [
                        "363:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "363:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "363:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65010,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "397:10:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65017,
                  "src": "390:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65009,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65008,
                      "name": "IERC20",
                      "nameLocations": [
                        "390:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "390:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "390:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:62:82"
            },
            "returnParameters": {
              "id": 65016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65013,
                  "mutability": "mutable",
                  "name": "bid",
                  "nameLocation": "446:3:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65017,
                  "src": "438:11:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65015,
                  "mutability": "mutable",
                  "name": "ask",
                  "nameLocation": "459:3:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65017,
                  "src": "451:11:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "437:26:82"
            },
            "scope": 65128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65031,
            "nodeType": "FunctionDefinition",
            "src": "1390:145:82",
            "nodes": [],
            "documentation": {
              "id": 65018,
              "nodeType": "StructuredDocumentation",
              "src": "472:912:82",
              "text": " @dev Calculates the total depth of base tokens available for a given maximum price.\n The function steps through each price level until the maximum price is reached,\n accumulating the depth available at each price level.\n NOTE: This function uses a while loop which could potentially run out of gas if the\n maximum price is set too high compared to the current price. Users should ensure that\n the maximum price is set to a reasonable level relative to the current price before calling\n this function.\n @param baseToken The base token that the user is interested in.\n @param quoteToken The quote token that would be used to buy the base token.\n @param maxPrice The maximum price the user is willing to pay per base token.\n @return depth The total depth of base tokens available for the given maximum price."
            },
            "functionSelector": "9f5fe72b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDepth",
            "nameLocation": "1399:8:82",
            "parameters": {
              "id": 65027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65021,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "1425:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "1418:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65020,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65019,
                      "name": "IERC20",
                      "nameLocations": [
                        "1418:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1418:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1418:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65024,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "1452:10:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "1445:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65023,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65022,
                      "name": "IERC20",
                      "nameLocations": [
                        "1445:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1445:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1445:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65026,
                  "mutability": "mutable",
                  "name": "maxPrice",
                  "nameLocation": "1481:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "1473:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:89:82"
            },
            "returnParameters": {
              "id": 65030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65029,
                  "mutability": "mutable",
                  "name": "depth",
                  "nameLocation": "1528:5:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "1520:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:15:82"
            },
            "scope": 65128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65045,
            "nodeType": "FunctionDefinition",
            "src": "2435:164:82",
            "nodes": [],
            "documentation": {
              "id": 65032,
              "nodeType": "StructuredDocumentation",
              "src": "1543:886:82",
              "text": " @dev Calculates the total quote tokens required to buy a specific amount of base tokens.\n This function steps through prices and their corresponding depths to determine the exact cost\n to buy a certain amount of base tokens.\n NOTE: The function uses a while loop which could potentially run out of gas if the desired\n amount is significantly larger than the available liquidity in the pool. Users should ensure\n the pool has sufficient liquidity for their order before calling this function.\n @param baseToken The base token that the user wants to buy.\n @param quoteToken The quote token that the user wants to spend.\n @param desiredAmount The amount of base tokens the user wants to buy.\n @return totalCost The exact total cost in quote tokens to buy the desired amount of base tokens."
            },
            "functionSelector": "db9c3033",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTotalCost",
            "nameLocation": "2444:18:82",
            "parameters": {
              "id": 65041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65035,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "2480:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65045,
                  "src": "2473:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65033,
                      "name": "IERC20",
                      "nameLocations": [
                        "2473:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2473:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2473:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65038,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "2507:10:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65045,
                  "src": "2500:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65037,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65036,
                      "name": "IERC20",
                      "nameLocations": [
                        "2500:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2500:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2500:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65040,
                  "mutability": "mutable",
                  "name": "desiredAmount",
                  "nameLocation": "2536:13:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65045,
                  "src": "2528:21:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:94:82"
            },
            "returnParameters": {
              "id": 65044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65043,
                  "mutability": "mutable",
                  "name": "totalCost",
                  "nameLocation": "2588:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65045,
                  "src": "2580:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2579:19:82"
            },
            "scope": 65128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65059,
            "nodeType": "FunctionDefinition",
            "src": "3787:170:82",
            "nodes": [],
            "documentation": {
              "id": 65046,
              "nodeType": "StructuredDocumentation",
              "src": "2607:1174:82",
              "text": " @dev Calculates the total base tokens a user would receive for a given amount of quote tokens.\n The function steps through each price level until the entire amount of quote tokens would be spent,\n accumulating the base tokens that would be received at each price level.\n NOTE: This function uses a while loop which could potentially run out of gas if the given\n quote token amount is too high. Users should ensure that the quote token amount is set to\n a reasonable level before calling this function. Furthermore, when the remaining quote token amount\n becomes less than the current price, the function stops to prevent purchasing fractional tokens or running\n into a situation where the remaining quote amount cannot be fully utilized.\n @param baseToken The base token that the user wants to receive.\n @param quoteToken The quote token that would be used to buy the base token.\n @param quoteAmount The total amount of quote tokens that the user wants to spend.\n @return totalBase The total base tokens the user would receive for the given quote token amount."
            },
            "functionSelector": "a6b57fc8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateBaseTokenReceived",
            "nameLocation": "3796:26:82",
            "parameters": {
              "id": 65055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65049,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "3840:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65059,
                  "src": "3833:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65048,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65047,
                      "name": "IERC20",
                      "nameLocations": [
                        "3833:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3833:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3833:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65052,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "3867:10:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65059,
                  "src": "3860:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65051,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65050,
                      "name": "IERC20",
                      "nameLocations": [
                        "3860:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3860:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3860:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65054,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "3896:11:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65059,
                  "src": "3888:19:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3888:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3822:92:82"
            },
            "returnParameters": {
              "id": 65058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65057,
                  "mutability": "mutable",
                  "name": "totalBase",
                  "nameLocation": "3946:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65059,
                  "src": "3938:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3937:19:82"
            },
            "scope": 65128,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65082,
            "nodeType": "FunctionDefinition",
            "src": "3965:254:82",
            "nodes": [],
            "functionSelector": "ba9f20b8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "3974:12:82",
            "parameters": {
              "id": 65076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65062,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "4004:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "3997:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65061,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65060,
                      "name": "IERC20",
                      "nameLocations": [
                        "3997:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3997:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3997:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65065,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "4028:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4021:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65064,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65063,
                      "name": "IERC20",
                      "nameLocations": [
                        "4021:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "4021:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "4021:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65067,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "4053:7:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4045:15:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4045:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65069,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "4079:7:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4071:15:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65071,
                  "mutability": "mutable",
                  "name": "acceptedSlippage",
                  "nameLocation": "4105:16:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4097:24:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65073,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "4140:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4132:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4132:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65075,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "4167:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4159:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4159:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3986:196:82"
            },
            "returnParameters": {
              "id": 65081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4201:7:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4201:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65082,
                  "src": "4210:7:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4210:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4200:18:82"
            },
            "scope": 65128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65105,
            "nodeType": "FunctionDefinition",
            "src": "4227:321:82",
            "nodes": [],
            "functionSelector": "3118b3c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemLiquidity",
            "nameLocation": "4236:15:82",
            "parameters": {
              "id": 65101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65085,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "4269:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4262:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65084,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65083,
                      "name": "IERC20",
                      "nameLocations": [
                        "4262:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "4262:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "4262:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65088,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "4293:6:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4286:13:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65087,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65086,
                      "name": "IERC20",
                      "nameLocations": [
                        "4286:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "4286:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "4286:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65090,
                  "mutability": "mutable",
                  "name": "desiredAmountTokenA",
                  "nameLocation": "4318:19:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4310:27:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65092,
                  "mutability": "mutable",
                  "name": "desiredAmountTokenB",
                  "nameLocation": "4356:19:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4348:27:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65094,
                  "mutability": "mutable",
                  "name": "lpTokenQty",
                  "nameLocation": "4394:10:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4386:18:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4386:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65096,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4423:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4415:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65098,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "4451:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4443:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65100,
                  "mutability": "mutable",
                  "name": "acceptedSlippage",
                  "nameLocation": "4478:16:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4470:24:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4251:250:82"
            },
            "returnParameters": {
              "id": 65104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65103,
                  "mutability": "mutable",
                  "name": "unredeemedLpTokens",
                  "nameLocation": "4528:18:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65105,
                  "src": "4520:26:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4519:28:82"
            },
            "scope": 65128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65127,
            "nodeType": "FunctionDefinition",
            "src": "5674:242:82",
            "nodes": [],
            "documentation": {
              "id": 65106,
              "nodeType": "StructuredDocumentation",
              "src": "4556:1112:82",
              "text": " @dev Executes a buy transaction on the decentralized exchange.\n The function first ensures that the desired base tokens amount and maximum allowed quote tokens price are within the limits.\n It then executes the buy transaction via a helper function.\n NOTE: This function could potentially run out of gas if the limits set by the liquidity manager are too high,\n as it performs several computations and an external function call.\n @param baseToken The base token the user wants to buy.\n @param quoteToken The quote token the user wants to spend.\n @param desiredAmount The amount of base tokens the user desires to buy.\n @param maxPrice The maximum price (in quote tokens) the user is willing to pay for each base token.\n @param recipient The address to receive the base tokens.\n @param deadline The time after which the transaction should not be executable.\n @return totalIn The total amount of quote tokens that was spent.\n @return totalOut The total amount of base tokens that was received."
            },
            "functionSelector": "09aa45a0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "5683:3:82",
            "parameters": {
              "id": 65121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65109,
                  "mutability": "mutable",
                  "name": "baseToken",
                  "nameLocation": "5704:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5697:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65107,
                      "name": "IERC20",
                      "nameLocations": [
                        "5697:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "5697:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "5697:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65112,
                  "mutability": "mutable",
                  "name": "quoteToken",
                  "nameLocation": "5731:10:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5724:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 65111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65110,
                      "name": "IERC20",
                      "nameLocations": [
                        "5724:6:82"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "5724:6:82"
                    },
                    "referencedDeclaration": 48295,
                    "src": "5724:6:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65114,
                  "mutability": "mutable",
                  "name": "desiredAmount",
                  "nameLocation": "5760:13:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5752:21:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5752:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65116,
                  "mutability": "mutable",
                  "name": "maxPrice",
                  "nameLocation": "5792:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5784:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5784:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65118,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5819:9:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5811:17:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5811:7:82",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65120,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "5847:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5839:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5839:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5686:176:82"
            },
            "returnParameters": {
              "id": 65126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65123,
                  "mutability": "mutable",
                  "name": "totalIn",
                  "nameLocation": "5889:7:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5881:15:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5881:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65125,
                  "mutability": "mutable",
                  "name": "totalOut",
                  "nameLocation": "5906:8:82",
                  "nodeType": "VariableDeclaration",
                  "scope": 65127,
                  "src": "5898:16:82",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5898:7:82",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5880:35:82"
            },
            "scope": 65128,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDEX2",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 65004,
          "nodeType": "StructuredDocumentation",
          "src": "134:175:82",
          "text": " @title IDEX2\n @dev Interface for a decentralized exchange (DEX2) defining essential functions for token trading, liquidity provision, and liquidity redemption."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          65128
        ],
        "name": "IDEX2",
        "nameLocation": "321:5:82",
        "scope": 65129,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 82
}