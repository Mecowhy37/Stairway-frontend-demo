{
  "abi": [
    {
      "inputs": [],
      "name": "SwapManager__BadAllocation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapManager__MismatchedPoolIdx",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapManager__PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SwapManager__Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAllocation",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAllocation",
          "type": "uint256"
        }
      ],
      "name": "MaintenanceAllocationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAllocation",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAllocation",
          "type": "uint256"
        }
      ],
      "name": "RoutingAllocationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "routingAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "name": "initializePrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "prices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityManager",
          "name": "_liquidityManager",
          "type": "address"
        }
      ],
      "name": "setLiquidityManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "_liquidityRamp",
          "type": "address"
        }
      ],
      "name": "setLiquidityRamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maintenanceAllocation",
          "type": "uint256"
        }
      ],
      "name": "setMaintenanceAllocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "_poolManager",
          "type": "address"
        }
      ],
      "name": "setPoolManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_routingAllocation",
          "type": "uint256"
        }
      ],
      "name": "setRoutingAllocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routingAgent",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "initializePrices(uint256)": "cb77b8fc",
    "prices(uint256,address)": "fd02dac0",
    "setLiquidityManager(address)": "3c1624d4",
    "setLiquidityRamp(address)": "23bae8a7",
    "setMaintenanceAllocation(uint256)": "15550a15",
    "setPoolManager(address)": "7aef6715",
    "setRoutingAllocation(uint256)": "c20e783d",
    "swap(uint256,address,address,address,uint256)": "10e2df9b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SwapManager__BadAllocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapManager__MismatchedPoolIdx\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapManager__PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapManager__Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAllocation\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"MaintenanceAllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAllocation\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocation\",\"type\":\"uint256\"}],\"name\":\"RoutingAllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"routingAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"name\":\"initializePrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityManager\",\"name\":\"_liquidityManager\",\"type\":\"address\"}],\"name\":\"setLiquidityManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"_liquidityRamp\",\"type\":\"address\"}],\"name\":\"setLiquidityRamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maintenanceAllocation\",\"type\":\"uint256\"}],\"name\":\"setMaintenanceAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"name\":\"setPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_routingAllocation\",\"type\":\"uint256\"}],\"name\":\"setRoutingAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routingAgent\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is responsible for managing token swaps in the system.\",\"events\":{\"MaintenanceAllocationUpdated(uint256,uint256)\":{\"details\":\"Emitted when the maintenance allocation is updated.\",\"params\":{\"newAllocation\":\"New maintenance allocation.\",\"oldAllocation\":\"Previous maintenance allocation.\"}},\"RoutingAllocationUpdated(uint256,uint256)\":{\"details\":\"Emitted when the routing allocation is updated.\",\"params\":{\"newAllocation\":\"New routing allocation.\",\"oldAllocation\":\"Previous routing allocation.\"}},\"Swap(uint256,address,address,address,address,uint256,uint256)\":{\"details\":\"Emitted when a token swap is successfully performed.\",\"params\":{\"amountIn\":\"Amount of the input token provided.\",\"amountOut\":\"Amount of the output token received.\",\"beneficiary\":\"Address that received the swapped tokens.\",\"poolIdx\":\"The index of the pool utilized for the swap.\",\"routingAgent\":\"Address of the routingAgent used for the swap.\",\"tokenIn\":\"Token provided as input for the swap.\",\"tokenOut\":\"Token received as output from the swap.\"}}},\"kind\":\"dev\",\"methods\":{\"initializePrices(uint256)\":{\"params\":{\"poolIdx\":\"The index of the pool for which prices are initialized.\"}},\"prices(uint256,address)\":{\"params\":{\"poolIdx\":\"The index of the pool.\",\"token\":\"The token for which the price is queried.\"},\"returns\":{\"_0\":\"The current price of the token in the pool.\"}},\"setLiquidityManager(address)\":{\"params\":{\"_liquidityManager\":\"The address of the new LiquidityManager.\"}},\"setLiquidityRamp(address)\":{\"params\":{\"_liquidityRamp\":\"The address of the new LiquidityRamp.\"}},\"setMaintenanceAllocation(uint256)\":{\"params\":{\"_maintenanceAllocation\":\"The new maintenance allocation.\"}},\"setPoolManager(address)\":{\"params\":{\"_poolManager\":\"The address of the new PoolManager.\"}},\"setRoutingAllocation(uint256)\":{\"params\":{\"_routingAllocation\":\"The new routing allocation.\"}},\"swap(uint256,address,address,address,uint256)\":{\"details\":\"This function is protected against re-entrancy attacks by the nonReentrant modifier.\",\"params\":{\"amountIn\":\"Amount of the input token to be swapped.\",\"poolIdx\":\"The index of the pool utilized for the swap.\",\"recipient\":\"Address that will receive the swapped tokens.\",\"routingAgent\":\"Address of the routingAgent used for the swap.\",\"tokenIn\":\"Token to be provided as input for the swap.\"},\"returns\":{\"amountOut\":\"The amount of tokens the recipient will receive.\"}}},\"title\":\"ISwapManager Interface\",\"version\":1},\"userdoc\":{\"errors\":{\"SwapManager__BadAllocation()\":[{\"notice\":\"Emitted when an invalid allocation is provided.\"}],\"SwapManager__MismatchedPoolIdx()\":[{\"notice\":\"Emitted when a pool index does not match the one expected.\"}],\"SwapManager__PoolDoesNotExist()\":[{\"notice\":\"Emitted when a pool does not exist but is referenced.\"}],\"SwapManager__Unauthorized()\":[{\"notice\":\"Emitted when an unauthorized action is attempted.\"}]},\"kind\":\"user\",\"methods\":{\"initializePrices(uint256)\":{\"notice\":\"Initializes prices for a given pool.\"},\"prices(uint256,address)\":{\"notice\":\"Retrieves the price for a given token in a specific pool.\"},\"setLiquidityManager(address)\":{\"notice\":\"Sets the LiquidityManager contract.\"},\"setLiquidityRamp(address)\":{\"notice\":\"Sets the LiquidityRamp contract.\"},\"setMaintenanceAllocation(uint256)\":{\"notice\":\"Sets a new maintenance allocation.\"},\"setPoolManager(address)\":{\"notice\":\"Sets the PoolManager contract.\"},\"setRoutingAllocation(uint256)\":{\"notice\":\"Sets a new routing allocation.\"},\"swap(uint256,address,address,address,uint256)\":{\"notice\":\"Performs a token swap using a specified routingAgent.\"}},\"notice\":\"This interface defines the contract structure for SwapManager.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISwapManager.sol\":\"ISwapManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db\",\"dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811\",\"dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda\",\"dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd\",\"dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7\",\"dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45\",\"dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935\",\"dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc\",\"dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f\",\"dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07\",\"dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SwapManager__BadAllocation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapManager__MismatchedPoolIdx"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapManager__PoolDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SwapManager__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAllocation",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAllocation",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaintenanceAllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldAllocation",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newAllocation",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoutingAllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "routingAgent",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenOut",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializePrices"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "prices",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityManager",
              "name": "_liquidityManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "_liquidityRamp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityRamp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_maintenanceAllocation",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaintenanceAllocation"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "_poolManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolManager"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_routingAllocation",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoutingAllocation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "routingAgent",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "initializePrices(uint256)": {
            "params": {
              "poolIdx": "The index of the pool for which prices are initialized."
            }
          },
          "prices(uint256,address)": {
            "params": {
              "poolIdx": "The index of the pool.",
              "token": "The token for which the price is queried."
            },
            "returns": {
              "_0": "The current price of the token in the pool."
            }
          },
          "setLiquidityManager(address)": {
            "params": {
              "_liquidityManager": "The address of the new LiquidityManager."
            }
          },
          "setLiquidityRamp(address)": {
            "params": {
              "_liquidityRamp": "The address of the new LiquidityRamp."
            }
          },
          "setMaintenanceAllocation(uint256)": {
            "params": {
              "_maintenanceAllocation": "The new maintenance allocation."
            }
          },
          "setPoolManager(address)": {
            "params": {
              "_poolManager": "The address of the new PoolManager."
            }
          },
          "setRoutingAllocation(uint256)": {
            "params": {
              "_routingAllocation": "The new routing allocation."
            }
          },
          "swap(uint256,address,address,address,uint256)": {
            "details": "This function is protected against re-entrancy attacks by the nonReentrant modifier.",
            "params": {
              "amountIn": "Amount of the input token to be swapped.",
              "poolIdx": "The index of the pool utilized for the swap.",
              "recipient": "Address that will receive the swapped tokens.",
              "routingAgent": "Address of the routingAgent used for the swap.",
              "tokenIn": "Token to be provided as input for the swap."
            },
            "returns": {
              "amountOut": "The amount of tokens the recipient will receive."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initializePrices(uint256)": {
            "notice": "Initializes prices for a given pool."
          },
          "prices(uint256,address)": {
            "notice": "Retrieves the price for a given token in a specific pool."
          },
          "setLiquidityManager(address)": {
            "notice": "Sets the LiquidityManager contract."
          },
          "setLiquidityRamp(address)": {
            "notice": "Sets the LiquidityRamp contract."
          },
          "setMaintenanceAllocation(uint256)": {
            "notice": "Sets a new maintenance allocation."
          },
          "setPoolManager(address)": {
            "notice": "Sets the PoolManager contract."
          },
          "setRoutingAllocation(uint256)": {
            "notice": "Sets a new routing allocation."
          },
          "swap(uint256,address,address,address,uint256)": {
            "notice": "Performs a token swap using a specified routingAgent."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/ISwapManager.sol": "ISwapManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193",
        "urls": [
          "bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db",
          "dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821",
        "urls": [
          "bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811",
          "dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f",
        "urls": [
          "bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3",
          "dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59",
        "urls": [
          "bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda",
          "dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e",
        "urls": [
          "bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5",
          "dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae",
        "urls": [
          "bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd",
          "dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552",
        "urls": [
          "bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7",
          "dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def",
        "urls": [
          "bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45",
          "dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af",
        "urls": [
          "bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935",
          "dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065",
        "urls": [
          "bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc",
          "dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4",
        "urls": [
          "bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f",
          "dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74",
        "urls": [
          "bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07",
          "dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/ISwapManager.sol",
    "id": 62912,
    "exportedSymbols": {
      "ICluster": [
        61999
      ],
      "IClusterRegistry": [
        62023
      ],
      "IERC165": [
        52787
      ],
      "IERC20": [
        48295
      ],
      "IERC6372": [
        47524
      ],
      "IGovernor": [
        45314
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityManager": [
        62605
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "ISwapManager": [
        62911
      ],
      "IVotes": [
        47472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4810:87",
    "nodes": [
      {
        "id": 62793,
        "nodeType": "PragmaDirective",
        "src": "37:24:87",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 62794,
        "nodeType": "ImportDirective",
        "src": "65:45:87",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityManager.sol",
        "file": "../interfaces/ILiquidityManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62912,
        "sourceUnit": 62606,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62795,
        "nodeType": "ImportDirective",
        "src": "112:42:87",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityRamp.sol",
        "file": "../interfaces/ILiquidityRamp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62912,
        "sourceUnit": 62722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62796,
        "nodeType": "ImportDirective",
        "src": "156:40:87",
        "nodes": [],
        "absolutePath": "src/interfaces/IPoolManager.sol",
        "file": "../interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62912,
        "sourceUnit": 62792,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62797,
        "nodeType": "ImportDirective",
        "src": "198:56:87",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62912,
        "sourceUnit": 48296,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62911,
        "nodeType": "ContractDefinition",
        "src": "455:4390:87",
        "nodes": [
          {
            "id": 62801,
            "nodeType": "ErrorDefinition",
            "src": "577:34:87",
            "nodes": [],
            "documentation": {
              "id": 62799,
              "nodeType": "StructuredDocumentation",
              "src": "510:61:87",
              "text": "@notice Emitted when an unauthorized action is attempted."
            },
            "errorSelector": "48e4fd1e",
            "name": "SwapManager__Unauthorized",
            "nameLocation": "583:25:87",
            "parameters": {
              "id": 62800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:2:87"
            }
          },
          {
            "id": 62804,
            "nodeType": "ErrorDefinition",
            "src": "684:35:87",
            "nodes": [],
            "documentation": {
              "id": 62802,
              "nodeType": "StructuredDocumentation",
              "src": "619:59:87",
              "text": "@notice Emitted when an invalid allocation is provided."
            },
            "errorSelector": "c4910a3d",
            "name": "SwapManager__BadAllocation",
            "nameLocation": "690:26:87",
            "parameters": {
              "id": 62803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:87"
            }
          },
          {
            "id": 62807,
            "nodeType": "ErrorDefinition",
            "src": "798:38:87",
            "nodes": [],
            "documentation": {
              "id": 62805,
              "nodeType": "StructuredDocumentation",
              "src": "727:65:87",
              "text": "@notice Emitted when a pool does not exist but is referenced."
            },
            "errorSelector": "2d285c63",
            "name": "SwapManager__PoolDoesNotExist",
            "nameLocation": "804:29:87",
            "parameters": {
              "id": 62806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "833:2:87"
            }
          },
          {
            "id": 62810,
            "nodeType": "ErrorDefinition",
            "src": "920:39:87",
            "nodes": [],
            "documentation": {
              "id": 62808,
              "nodeType": "StructuredDocumentation",
              "src": "844:70:87",
              "text": "@notice Emitted when a pool index does not match the one expected."
            },
            "errorSelector": "ebff5063",
            "name": "SwapManager__MismatchedPoolIdx",
            "nameLocation": "926:30:87",
            "parameters": {
              "id": 62809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "956:2:87"
            }
          },
          {
            "id": 62817,
            "nodeType": "EventDefinition",
            "src": "1187:106:87",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62811,
              "nodeType": "StructuredDocumentation",
              "src": "985:196:87",
              "text": " @dev Emitted when the maintenance allocation is updated.\n @param oldAllocation Previous maintenance allocation.\n @param newAllocation New maintenance allocation."
            },
            "eventSelector": "cf7ab7f4b447283d3f185f28d5a518b565e20331c39c7f8c3f8bd9adb54b4c24",
            "name": "MaintenanceAllocationUpdated",
            "nameLocation": "1193:28:87",
            "parameters": {
              "id": 62816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62813,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAllocation",
                  "nameLocation": "1240:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62817,
                  "src": "1232:21:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAllocation",
                  "nameLocation": "1272:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62817,
                  "src": "1264:21:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1221:71:87"
            }
          },
          {
            "id": 62824,
            "nodeType": "EventDefinition",
            "src": "1491:102:87",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62818,
              "nodeType": "StructuredDocumentation",
              "src": "1301:184:87",
              "text": " @dev Emitted when the routing allocation is updated.\n @param oldAllocation Previous routing allocation.\n @param newAllocation New routing allocation."
            },
            "eventSelector": "2163cc98c2e8650c8b966e6dac8d59694192c58e9f362d8e2b70867d23418d76",
            "name": "RoutingAllocationUpdated",
            "nameLocation": "1497:24:87",
            "parameters": {
              "id": 62823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAllocation",
                  "nameLocation": "1540:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62824,
                  "src": "1532:21:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAllocation",
                  "nameLocation": "1572:13:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62824,
                  "src": "1564:21:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:71:87"
            }
          },
          {
            "id": 62843,
            "nodeType": "EventDefinition",
            "src": "2144:227:87",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62825,
              "nodeType": "StructuredDocumentation",
              "src": "1601:537:87",
              "text": " @dev Emitted when a token swap is successfully performed.\n @param poolIdx The index of the pool utilized for the swap.\n @param beneficiary Address that received the swapped tokens.\n @param routingAgent Address of the routingAgent used for the swap.\n @param tokenIn Token provided as input for the swap.\n @param tokenOut Token received as output from the swap.\n @param amountIn Amount of the input token provided.\n @param amountOut Amount of the output token received."
            },
            "eventSelector": "c6887c51c37a61649529f34b82c5b1f312aee8702f4b13149e7c40d74830f458",
            "name": "Swap",
            "nameLocation": "2150:4:87",
            "parameters": {
              "id": 62842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62827,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "2181:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2165:23:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "2215:11:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2199:27:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62831,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "routingAgent",
                  "nameLocation": "2245:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2237:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "2275:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2268:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62833,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62832,
                      "name": "IERC20",
                      "nameLocations": [
                        "2268:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2268:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2268:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62837,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "2300:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2293:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62836,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62835,
                      "name": "IERC20",
                      "nameLocations": [
                        "2293:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2293:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2293:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62839,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2327:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2319:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62841,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2354:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62843,
                  "src": "2346:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2154:216:87"
            }
          },
          {
            "id": 62850,
            "nodeType": "FunctionDefinition",
            "src": "2544:75:87",
            "nodes": [],
            "documentation": {
              "id": 62844,
              "nodeType": "StructuredDocumentation",
              "src": "2400:138:87",
              "text": " @notice Sets the LiquidityManager contract.\n @param _liquidityManager The address of the new LiquidityManager."
            },
            "functionSelector": "3c1624d4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidityManager",
            "nameLocation": "2553:19:87",
            "parameters": {
              "id": 62848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62847,
                  "mutability": "mutable",
                  "name": "_liquidityManager",
                  "nameLocation": "2591:17:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62850,
                  "src": "2573:35:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityManager_$62605",
                    "typeString": "contract ILiquidityManager"
                  },
                  "typeName": {
                    "id": 62846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62845,
                      "name": "ILiquidityManager",
                      "nameLocations": [
                        "2573:17:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62605,
                      "src": "2573:17:87"
                    },
                    "referencedDeclaration": 62605,
                    "src": "2573:17:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityManager_$62605",
                      "typeString": "contract ILiquidityManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:37:87"
            },
            "returnParameters": {
              "id": 62849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2618:0:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62857,
            "nodeType": "FunctionDefinition",
            "src": "2762:66:87",
            "nodes": [],
            "documentation": {
              "id": 62851,
              "nodeType": "StructuredDocumentation",
              "src": "2627:129:87",
              "text": " @notice Sets the LiquidityRamp contract.\n @param _liquidityRamp The address of the new LiquidityRamp."
            },
            "functionSelector": "23bae8a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidityRamp",
            "nameLocation": "2771:16:87",
            "parameters": {
              "id": 62855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62854,
                  "mutability": "mutable",
                  "name": "_liquidityRamp",
                  "nameLocation": "2803:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62857,
                  "src": "2788:29:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                    "typeString": "contract ILiquidityRamp"
                  },
                  "typeName": {
                    "id": 62853,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62852,
                      "name": "ILiquidityRamp",
                      "nameLocations": [
                        "2788:14:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62721,
                      "src": "2788:14:87"
                    },
                    "referencedDeclaration": 62721,
                    "src": "2788:14:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2787:31:87"
            },
            "returnParameters": {
              "id": 62856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:0:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62864,
            "nodeType": "FunctionDefinition",
            "src": "2965:60:87",
            "nodes": [],
            "documentation": {
              "id": 62858,
              "nodeType": "StructuredDocumentation",
              "src": "2836:123:87",
              "text": " @notice Sets the PoolManager contract.\n @param _poolManager The address of the new PoolManager."
            },
            "functionSelector": "7aef6715",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPoolManager",
            "nameLocation": "2974:14:87",
            "parameters": {
              "id": 62862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62861,
                  "mutability": "mutable",
                  "name": "_poolManager",
                  "nameLocation": "3002:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62864,
                  "src": "2989:25:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$62791",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 62860,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62859,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "2989:12:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62791,
                      "src": "2989:12:87"
                    },
                    "referencedDeclaration": 62791,
                    "src": "2989:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$62791",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2988:27:87"
            },
            "returnParameters": {
              "id": 62863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62870,
            "nodeType": "FunctionDefinition",
            "src": "3183:52:87",
            "nodes": [],
            "documentation": {
              "id": 62865,
              "nodeType": "StructuredDocumentation",
              "src": "3033:144:87",
              "text": " @notice Initializes prices for a given pool.\n @param poolIdx The index of the pool for which prices are initialized."
            },
            "functionSelector": "cb77b8fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initializePrices",
            "nameLocation": "3192:16:87",
            "parameters": {
              "id": 62868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62867,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "3217:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62870,
                  "src": "3209:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:17:87"
            },
            "returnParameters": {
              "id": 62869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3234:0:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62876,
            "nodeType": "FunctionDefinition",
            "src": "3382:75:87",
            "nodes": [],
            "documentation": {
              "id": 62871,
              "nodeType": "StructuredDocumentation",
              "src": "3243:133:87",
              "text": " @notice Sets a new maintenance allocation.\n @param _maintenanceAllocation The new maintenance allocation."
            },
            "functionSelector": "15550a15",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaintenanceAllocation",
            "nameLocation": "3391:24:87",
            "parameters": {
              "id": 62874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62873,
                  "mutability": "mutable",
                  "name": "_maintenanceAllocation",
                  "nameLocation": "3424:22:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62876,
                  "src": "3416:30:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3415:32:87"
            },
            "returnParameters": {
              "id": 62875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3456:0:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62882,
            "nodeType": "FunctionDefinition",
            "src": "3592:67:87",
            "nodes": [],
            "documentation": {
              "id": 62877,
              "nodeType": "StructuredDocumentation",
              "src": "3465:121:87",
              "text": " @notice Sets a new routing allocation.\n @param _routingAllocation The new routing allocation."
            },
            "functionSelector": "c20e783d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRoutingAllocation",
            "nameLocation": "3601:20:87",
            "parameters": {
              "id": 62880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62879,
                  "mutability": "mutable",
                  "name": "_routingAllocation",
                  "nameLocation": "3630:18:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62882,
                  "src": "3622:26:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3621:28:87"
            },
            "returnParameters": {
              "id": 62881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3658:0:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62899,
            "nodeType": "FunctionDefinition",
            "src": "4274:195:87",
            "nodes": [],
            "documentation": {
              "id": 62883,
              "nodeType": "StructuredDocumentation",
              "src": "3667:601:87",
              "text": " @notice Performs a token swap using a specified routingAgent.\n @param poolIdx The index of the pool utilized for the swap.\n @param recipient Address that will receive the swapped tokens.\n @param routingAgent Address of the routingAgent used for the swap.\n @param tokenIn Token to be provided as input for the swap.\n @param amountIn Amount of the input token to be swapped.\n @return amountOut The amount of tokens the recipient will receive.\n @dev This function is protected against re-entrancy attacks by the nonReentrant modifier."
            },
            "functionSelector": "10e2df9b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "4283:4:87",
            "parameters": {
              "id": 62895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62885,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "4306:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62899,
                  "src": "4298:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4298:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62887,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4332:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62899,
                  "src": "4324:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4324:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62889,
                  "mutability": "mutable",
                  "name": "routingAgent",
                  "nameLocation": "4360:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62899,
                  "src": "4352:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62892,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "4390:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62899,
                  "src": "4383:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62891,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62890,
                      "name": "IERC20",
                      "nameLocations": [
                        "4383:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "4383:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "4383:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62894,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "4416:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62899,
                  "src": "4408:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4408:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4287:144:87"
            },
            "returnParameters": {
              "id": 62898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62897,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "4458:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62899,
                  "src": "4450:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4449:19:87"
            },
            "scope": 62911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62910,
            "nodeType": "FunctionDefinition",
            "src": "4738:104:87",
            "nodes": [],
            "documentation": {
              "id": 62900,
              "nodeType": "StructuredDocumentation",
              "src": "4477:255:87",
              "text": " @notice Retrieves the price for a given token in a specific pool.\n @param poolIdx The index of the pool.\n @param token The token for which the price is queried.\n @return The current price of the token in the pool."
            },
            "functionSelector": "fd02dac0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "prices",
            "nameLocation": "4747:6:87",
            "parameters": {
              "id": 62906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62902,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "4772:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62910,
                  "src": "4764:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62905,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4797:5:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 62910,
                  "src": "4790:12:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62903,
                      "name": "IERC20",
                      "nameLocations": [
                        "4790:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "4790:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "4790:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4753:56:87"
            },
            "returnParameters": {
              "id": 62909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62908,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62910,
                  "src": "4833:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4833:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4832:9:87"
            },
            "scope": 62911,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISwapManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 62798,
          "nodeType": "StructuredDocumentation",
          "src": "258:195:87",
          "text": " @title ISwapManager Interface\n @notice This interface defines the contract structure for SwapManager.\n @dev This contract is responsible for managing token swaps in the system."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          62911
        ],
        "name": "ISwapManager",
        "nameLocation": "465:12:87",
        "scope": 62912,
        "usedErrors": [
          62801,
          62804,
          62807,
          62810
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 87
}