{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dao",
      "outputs": [
        {
          "internalType": "contract DAO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dex",
      "outputs": [
        {
          "internalType": "contract DEX",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fBTC",
      "outputs": [
        {
          "internalType": "contract FakeBTC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fUSD",
      "outputs": [
        {
          "internalType": "contract FakeUSD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lptoken",
      "outputs": [
        {
          "internalType": "contract ILPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocol_address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeemLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "603:7416:80:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;1594:4;1572:26;;;603:7416:80;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "603:7416:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:19;;;;;-1:-1:-1;;;;;659:19:80;;;;;;-1:-1:-1;;;;;195:32:84;;;177:51;;165:2;150:18;659:19:80;;;;;;;;821:3001;;;:::i;:::-;;5977:1020;;;:::i;3828:740::-;;;:::i;7003:1014::-;;;:::i;685:14::-;;;;;-1:-1:-1;;;;;685:14:80;;;783:31;;;;;-1:-1:-1;;;;;783:31:80;;;733:14;;;;;-1:-1:-1;;;;;733:14:80;;;634:19;;;;;-1:-1:-1;;;;;634:19:80;;;1819:584:1;;;:::i;:::-;;;1279:14:84;;1272:22;1254:41;;1242:2;1227:18;1819:584:1;1114:187:84;705:22:80;;;;;-1:-1:-1;;;;;705:22:80;;;753:23;;;;;-1:-1:-1;;;;;753:23:80;;;4574:1397;;;:::i;1572:26:1:-;;;;;;;;;821:3001:80;992:20;1023:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;992:42;;1044:28;1083:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1044:58;;1112:23;1146:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1112:48;;1184:12;1198:20;1220:15;1176:60;;;;;:::i;:::-;-1:-1:-1;;;;;2015:15:84;;;1997:34;;2067:15;;;2062:2;2047:18;;2040:43;2119:15;;;2114:2;2099:18;;2092:43;1947:2;1932:18;1176:60:80;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1170:3:80;:66;;-1:-1:-1;;;;;;1170:66:80;-1:-1:-1;;;;;1170:66:80;;;;;;;;;1256:13;;;-1:-1:-1;;;1256:13:80;;;;:11;;:13;;;;;;;;;;;;;;;1170:66;1256:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1246:7;:23;;-1:-1:-1;;;;;;1246:23:80;;;-1:-1:-1;;;;;1246:23:80;;;;;;;1306:3;;1279:16;:31;;1306:3;;;;1279:31;;;;;1327:32;;1339:15;;1356:2;;1327:32;;;:::i;:::-;2783:25:84;;;2856:4;2844:17;2839:2;2824:18;;2817:45;2771:2;2756:18;1327:32:80;;;;;;;;;;;;;;;;;;;;;;;1320:4;;:39;;;;;-1:-1:-1;;;;;1320:39:80;;;;;-1:-1:-1;;;;;1320:39:80;;;;;;1388:15;1405:2;1376:32;;;;;:::i;:::-;2783:25:84;;;2856:4;2844:17;2839:2;2824:18;;2817:45;2771:2;2756:18;1376:32:80;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1369:4:80;:39;;-1:-1:-1;;;;;;1369:39:80;-1:-1:-1;;;;;1369:39:80;;;;;;1440:7;;1424:25;;1440:7;;;1424:25;;;:::i;:::-;-1:-1:-1;;;;;195:32:84;;;177:51;;165:2;150:18;1424:25:80;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1418:3:80;:31;;-1:-1:-1;;;;;;1418:31:80;-1:-1:-1;;;;;1418:31:80;;;;;;1614:7;;1630:4;;1636;;1614:27;;-1:-1:-1;;;1614:27:80;;1630:4;;;1614:27;;;3119:34:84;1636:4:80;;3169:18:84;;;3162:43;1584:189:80;;1614:7;;;;;:15;;3054:18:84;;1614:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1656:42;1584:189;;;;;;;;;;;;;;;;;:8;:189::i;:::-;1792:4;;:29;;-1:-1:-1;;;1792:29:80;;1815:4;1792:29;;;177:51:84;1783:107:80;;-1:-1:-1;;;;;1792:4:80;;:14;;150:18:84;;1792:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1823:15;1783:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;1909:4;;:29;;-1:-1:-1;;;1909:29:80;;1932:4;1909:29;;;177:51:84;1900:107:80;;-1:-1:-1;;;;;1909:4:80;;:14;;150:18:84;;1909:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1940:15;1900:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;2018:48;;-1:-1:-1;;;2018:48:80;;:15;;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2076:3:80;;2106:4;;2124;;-1:-1:-1;;;;;2076:3:80;;;;-1:-1:-1;2076:16:80;;-1:-1:-1;2106:4:80;;;;2124;2142:14;;;;2262:4;2281:20;:15;2299:2;2281:20;:::i;:::-;2076:235;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2322:4:80;;2343:3;;2322:43;;-1:-1:-1;;;2322:43:80;;-1:-1:-1;;;;;2322:4:80;;;;-1:-1:-1;2322:12:80;;-1:-1:-1;2322:43:80;;2343:3;;;;2349:15;;2322:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2375:4:80;;2396:3;;2375:43;;-1:-1:-1;;;2375:43:80;;-1:-1:-1;;;;;2375:4:80;;;;:12;;:43;;2396:3;;;2402:15;;2375:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2428:3:80;;2458:4;;2476;;-1:-1:-1;;;;;2428:3:80;;;;:16;;2458:4;;;2476;2494:14;;;;2614:4;2633:20;:15;2651:2;2633:20;:::i;:::-;2428:235;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2705:7:80;;2721:4;;2727;;2705:27;;-1:-1:-1;;;2705:27:80;;-1:-1:-1;;;;;2721:4:80;;;2705:27;;;3119:34:84;2727:4:80;;;3169:18:84;;;3162:43;2674:20:80;;-1:-1:-1;2705:7:80;;;-1:-1:-1;2705:15:80;;3054:18:84;;2705:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2760:7;;2776:4;;2782;;2760:27;;-1:-1:-1;;;2760:27:80;;-1:-1:-1;;;;;2776:4:80;;;2760:27;;;3119:34:84;2782:4:80;;;3169:18:84;;;3162:43;2674:59:80;;-1:-1:-1;2743:94:80;;2760:7;;;:15;;3054:18:84;;2760:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2790:12;2743:94;;;;;;;;;;;;;;;;;:8;:94::i;:::-;2864:7;;2880:4;;2886;;2864:27;;-1:-1:-1;;;2864:27:80;;-1:-1:-1;;;;;2880:4:80;;;2864:27;;;3119:34:84;2886:4:80;;;3169:18:84;;;3162:43;2847:94:80;;2864:7;;;;;:15;;3054:18:84;;2864:27:80;2873:338:84;2847:94:80;2968:12;-1:-1:-1;;;;;2962:27:80;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2952:7;:39;;-1:-1:-1;;;;;;2952:39:80;-1:-1:-1;;;;;2952:39:80;;;;;;;;;3037:3;;3011:31;;-1:-1:-1;;;3011:31:80;;3037:3;;3011:31;;;177:51:84;3002:88:80;;3011:17;;150:18:84;;3011:31:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3044:1;3002:88;;;;;;;;;;;;;;;;;:8;:88::i;:::-;3109:4;;:29;;-1:-1:-1;;;3109:29:80;;3132:4;3109:29;;;177:51:84;3100:100:80;;-1:-1:-1;;;;;3109:4:80;;:14;;150:18:84;;3109:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3140:14;3100:100;;;;;;;;;;;;;;;;;:8;:100::i;:::-;3219:4;;:29;;-1:-1:-1;;;3219:29:80;;3242:4;3219:29;;;177:51:84;3210:100:80;;-1:-1:-1;;;;;3219:4:80;;:14;;150:18:84;;3219:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3250:14;3210:100;;;;;;;;;;;;;;;;;:8;:100::i;:::-;3481:7;;:32;;-1:-1:-1;;;3481:32:80;;3507:4;3481:32;;;177:51:84;3459:201:80;;-1:-1:-1;;;;;3481:7:80;;:17;;150:18:84;;3481:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3550:12;-1:-1:-1;;;;;3544:33:80;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3527:52;;:14;:52;:::i;:::-;3459:201;;;;;;;;;;;;;;;;;:8;:201::i;:::-;3705:4;;3726:3;;3705:29;;-1:-1:-1;;;3705:29:80;;-1:-1:-1;;;;;3705:4:80;;;;:12;;:29;;3726:3;;;3705:4;;:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3744:4:80;;3765:3;;3744:29;;-1:-1:-1;;;3744:29:80;;-1:-1:-1;;;;;3744:4:80;;;;:12;;:29;;3765:3;;;3744:4;;:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3783:7:80;;3807:3;;3783:32;;-1:-1:-1;;;3783:32:80;;-1:-1:-1;;;;;3783:7:80;;;;:15;;:32;;3807:3;;;3783:7;;:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;845:2977;;;;821:3001::o;5977:1020::-;6036:7;;:32;;-1:-1:-1;;;6036:32:80;;6062:4;6036:32;;;177:51:84;6013:20:80;;-1:-1:-1;;;;;6036:7:80;;:17;;150:18:84;;6036:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6108:3;;6122:4;;6128;;6108:25;;-1:-1:-1;;;6108:25:80;;-1:-1:-1;;;;;6122:4:80;;;6108:25;;;3119:34:84;6128:4:80;;;3169:18:84;;;3162:43;6013:55:80;;-1:-1:-1;6080:11:80;;;;6108:3;;;;;:13;;3054:18:84;;6108:25:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6196:48;;-1:-1:-1;;;6196:48:80;;6079:54;;-1:-1:-1;6079:54:80;-1:-1:-1;6196:15:80;;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6254:3:80;;6262:4;;6268;;-1:-1:-1;;;;;6254:3:80;;;;-1:-1:-1;6254:7:80;;-1:-1:-1;6262:4:80;;;;6268;6254:3;6277:9;:3;6283;6277:9;:::i;:::-;6296:4;6303:20;:15;6321:2;6303:20;:::i;:::-;6254:70;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6335:4:80;;6356:3;;6335:42;;-1:-1:-1;;;6335:42:80;;-1:-1:-1;;;;;6335:4:80;;;;-1:-1:-1;6335:12:80;;-1:-1:-1;6335:42:80;;6356:3;;;;6362:14;;6335:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6387:3:80;;6395:4;;6401;;-1:-1:-1;;;;;6387:3:80;;;;:7;;6395:4;;;6401;6407:13;6422:7;:3;6428:1;6422:7;:::i;:::-;6439:4;6446:20;:15;6464:2;6446:20;:::i;:::-;6387:80;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6487:4:80;;:29;;-1:-1:-1;;;6487:29:80;;6510:4;6487:29;;;177:51:84;6478:106:80;;-1:-1:-1;;;;;;6487:4:80;;;;-1:-1:-1;6487:14:80;;150:18:84;;6487:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6518:21;6478:106;;;;;;;;;;;;;;;;;:8;:106::i;:::-;6603:4;;:29;;-1:-1:-1;;;6603:29:80;;6626:4;6603:29;;;177:51:84;6594:106:80;;-1:-1:-1;;;;;6603:4:80;;:14;;150:18:84;;6603:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6634:21;6594:106;;;;;;;;;;;;;;;;;:8;:106::i;:::-;6733:7;;:32;;-1:-1:-1;;;6733:32:80;;6759:4;6733:32;;;177:51:84;6711:158:80;;-1:-1:-1;;;;;6733:7:80;;:17;;150:18:84;;6733:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6779:12;6711:158;;;;;;;;;;;;;;;;;:8;:158::i;:::-;6888:7;;6906:16;;6888:35;;-1:-1:-1;;;6888:35:80;;-1:-1:-1;;;;;6906:16:80;;;6888:35;;;177:51:84;6879:111:80;;6888:7;;;;;:17;;150:18:84;;6888:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6925:16;6879:111;;;;;;;;;;;;;;;;;:8;:111::i;:::-;6003:994;;;5977:1020::o;3828:740::-;3869:4;;3890:3;;3869:43;;-1:-1:-1;;;3869:43:80;;-1:-1:-1;;;;;3869:4:80;;;;:12;;:43;;3890:3;;;3896:15;;3869:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3922:4:80;;3943:3;;3922:43;;-1:-1:-1;;;3922:43:80;;-1:-1:-1;;;;;3922:4:80;;;;:12;;:43;;3943:3;;;3949:15;;3922:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3976:27:80;;-1:-1:-1;;;3976:27:80;;-1:-1:-1;;;3976:27:80;;;9040:62:84;3976:15:80;;;;9013:18:84;;3976:27:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4032:3:80;;4062:4;;4080;;-1:-1:-1;;;;;4032:3:80;;;;-1:-1:-1;4032:16:80;;-1:-1:-1;4062:4:80;;;;4080;4098:20;;;;4242:4;4261:20;:15;4279:2;4261:20;:::i;:::-;4032:259;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4302:3:80;;4332:4;;4350;;-1:-1:-1;;;;;4302:3:80;;;;-1:-1:-1;4302:16:80;;-1:-1:-1;4332:4:80;;;;4350;4368:20;4402;4368;4402;4512:4;4531:20;:15;4549:2;4531:20;:::i;:::-;4302:259;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3828:740::o;7003:1014::-;7063:7;;:32;;-1:-1:-1;;;7063:32:80;;7089:4;7063:32;;;177:51:84;7040:20:80;;-1:-1:-1;;;;;7063:7:80;;:17;;150:18:84;;7063:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7135:3;;7149:4;;7155;;7135:25;;-1:-1:-1;;;7135:25:80;;-1:-1:-1;;;;;7149:4:80;;;7135:25;;;3119:34:84;7155:4:80;;;3169:18:84;;;3162:43;7040:55:80;;-1:-1:-1;7107:11:80;;;;7135:3;;;;;:13;;3054:18:84;;7135:25:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7223:48;;-1:-1:-1;;;7223:48:80;;7106:54;;-1:-1:-1;7106:54:80;-1:-1:-1;7223:15:80;;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7281:3:80;;7290:4;;7296;;-1:-1:-1;;;;;7281:3:80;;;;-1:-1:-1;7281:8:80;;-1:-1:-1;7290:4:80;;;;7296;7281:3;7305;7318:4;7325:20;:15;7343:2;7325:20;:::i;:::-;7281:65;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7357:4:80;;7378:3;;7357:42;;-1:-1:-1;;;7357:42:80;;-1:-1:-1;;;;;7357:4:80;;;;-1:-1:-1;7357:12:80;;-1:-1:-1;7357:42:80;;7378:3;;;;7384:14;;7357:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7409:3:80;;7418:4;;7424;;-1:-1:-1;;;;;7409:3:80;;;;:8;;7418:4;;;7424;7430:13;424:8:75;7409:3:80;7430:13;:::i;:::-;7445:1;7456:4;7463:20;:15;7481:2;7463:20;:::i;:::-;7409:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7504:4:80;;:29;;-1:-1:-1;;;7504:29:80;;7527:4;7504:29;;;177:51:84;7495:107:80;;-1:-1:-1;;;;;;7504:4:80;;;;-1:-1:-1;7504:14:80;;150:18:84;;7504:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7535:21;7495:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;7621:4;;:29;;-1:-1:-1;;;7621:29:80;;7644:4;7621:29;;;177:51:84;7612:107:80;;-1:-1:-1;;;;;7621:4:80;;:14;;150:18:84;;7621:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7652:21;7612:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;7752:7;;:32;;-1:-1:-1;;;7752:32:80;;7778:4;7752:32;;;177:51:84;7730:159:80;;-1:-1:-1;;;;;7752:7:80;;:17;;150:18:84;;7752:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7798:12;7730:159;;;;;;;;;;;;;;;;;:8;:159::i;:::-;7908:7;;7926:16;;7908:35;;-1:-1:-1;;;7908:35:80;;-1:-1:-1;;;;;7926:16:80;;;7908:35;;;177:51:84;7899:111:80;;7908:7;;;;;:17;;150:18:84;;7908:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7945:15;7899:111;;;;;;;;;;;;;;;;;:8;:111::i;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;2023:20;;1671:64;;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:1;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:1;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;4574:1397:80:-;4622:48;;-1:-1:-1;;;4622:48:80;;:15;;;;:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4680:3:80;;4713:4;;4731;;-1:-1:-1;;;;;4680:3:80;;;;-1:-1:-1;4680:19:80;;-1:-1:-1;4713:4:80;;;;4731;4749:21;;;4862:4;4881:20;:15;4899:2;4881:20;:::i;:::-;4680:231;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4922:7:80;;4946:3;;4922:52;;-1:-1:-1;;;4922:52:80;;-1:-1:-1;;;;;4922:7:80;;;;-1:-1:-1;4922:15:80;;-1:-1:-1;4922:52:80;;4946:3;;;;4952:21;;4922:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4984:3:80;;5017:4;;5035;;-1:-1:-1;;;;;4984:3:80;;;;:19;;5017:4;;;5035;5053:21;;;5166:4;5185:20;:15;5203:2;5185:20;:::i;:::-;4984:231;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5248:4:80;;:29;;-1:-1:-1;;;5248:29:80;;5271:4;5248:29;;;177:51:84;5226:246:80;;-1:-1:-1;;;;;;5248:4:80;;;;-1:-1:-1;5248:14:80;;150:18:84;;5248:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5371:22;5226:246;;;;;;;;;;;;;;;;;:8;:246::i;:::-;5504:4;;:29;;-1:-1:-1;;;5504:29:80;;5527:4;5504:29;;;177:51:84;5482:246:80;;-1:-1:-1;;;;;5504:4:80;;:14;;150:18:84;;5504:29:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5627:22;5482:246;;;;;;;;;;;;;;;;;:8;:246::i;:::-;5747:7;;:32;;-1:-1:-1;;;5747:32:80;;5773:4;5747:32;;;177:51:84;5738:107:80;;-1:-1:-1;;;;;5747:7:80;;:17;;150:18:84;;5747:32:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5781:1;5738:107;;;;;;;;;;;;;;;;;:8;:107::i;:::-;5864:7;;5882:16;;5864:35;;-1:-1:-1;;;5864:35:80;;-1:-1:-1;;;;;5882:16:80;;;5864:35;;;177:51:84;5855:109:80;;5864:7;;;;;:17;;150:18:84;;5864:35:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5901:1;5855:109;;;;;;;;;;;;;;;;;:8;:109::i;:::-;4574:1397::o;3897:185:1:-;3984:1;-1:-1:-1;;;;;3979:6:1;:1;-1:-1:-1;;;;;3979:6:1;;3975:101;;4006:31;4033:3;4006:31;;;;;;:::i;:::-;;;;;;;;4051:14;4060:1;4063;4051:8;:14::i;5469:178::-;5550:1;5545;:6;5541:100;;5572:30;5598:3;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:1;:1;-1:-1:-1;;;;;3678:6:1;;3674:212;;3705:44;;;;;14684:2:84;14666:21;;;14723:2;14703:18;;;14696:30;14762:34;14757:2;14742:18;;14735:62;-1:-1:-1;;;14828:2:84;14813:18;;14806:35;14873:3;14858:19;;14482:401;3705:44:1;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;:::-;3615:277;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;16176:2:84;16158:21;;;16215:2;16195:18;;;16188:30;16254:34;16249:2;16234:18;;16227:62;-1:-1:-1;;;16320:2:84;16305:18;;16298:32;16362:3;16347:19;;15974:398;5286:41:1;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;17285:51:84;;;-1:-1:-1;;;17352:18:84;;;17345:34;;;;2705:4:1;17395:18:84;;;17388:34;2482:11:1;;1671:64;2579:43;;17258:18:84;;2645:67:1;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;2146:140:84:-;-1:-1:-1;;;;;2230:31:84;;2220:42;;2210:70;;2276:1;2273;2266:12;2210:70;2146:140;:::o;2291:277::-;2378:6;2431:2;2419:9;2410:7;2406:23;2402:32;2399:52;;;2447:1;2444;2437:12;2399:52;2479:9;2473:16;2498:40;2532:5;2498:40;:::i;:::-;2557:5;2291:277;-1:-1:-1;;;2291:277:84:o;3496:184::-;3566:6;3619:2;3607:9;3598:7;3594:23;3590:32;3587:52;;;3635:1;3632;3625:12;3587:52;-1:-1:-1;3658:16:84;;3496:184;-1:-1:-1;3496:184:84:o;3685:352::-;3886:2;3868:21;;;3925:2;3905:18;;;3898:30;3964:31;3959:2;3944:18;;3937:59;4028:2;4013:18;;3685:352::o;4042:127::-;4103:10;4098:3;4094:20;4091:1;4084:31;4134:4;4131:1;4124:15;4158:4;4155:1;4148:15;4174:125;4239:9;;;4260:10;;;4257:36;;;4273:18;;:::i;:::-;4174:125;;;;:::o;4304:890::-;-1:-1:-1;;;;;4849:15:84;;;4831:34;;4901:15;;;4896:2;4881:18;;4874:43;4948:2;4933:18;;4926:34;;;;4991:2;4976:18;;4969:34;;;;5034:3;5019:19;;5012:35;;;;4811:3;5063:19;;5056:35;5128:15;;;5122:3;5107:19;;5100:44;5175:3;5160:19;;5153:35;;;;4780:3;4765:19;;4304:890::o;5199:303::-;-1:-1:-1;;;;;5420:32:84;;;;5402:51;;5484:2;5469:18;;5462:34;5390:2;5375:18;;5199:303::o;5507:277::-;5574:6;5627:2;5615:9;5606:7;5602:23;5598:32;5595:52;;;5643:1;5640;5633:12;5595:52;5675:9;5669:16;5728:5;5721:13;5714:21;5707:5;5704:32;5694:60;;5750:1;5747;5740:12;6415:128;6482:9;;;6503:11;;;6500:37;;;6517:18;;:::i;6835:245::-;6914:6;6922;6975:2;6963:9;6954:7;6950:23;6946:32;6943:52;;;6991:1;6988;6981:12;6943:52;-1:-1:-1;;7014:16:84;;7070:2;7055:18;;;7049:25;7014:16;;7049:25;;-1:-1:-1;6835:245:84:o;7085:168::-;7125:7;7191:1;7187;7183:6;7179:14;7176:1;7173:21;7168:1;7161:9;7154:17;7150:45;7147:71;;;7198:18;;:::i;:::-;-1:-1:-1;7238:9:84;;7085:168::o;7258:642::-;-1:-1:-1;;;;;7643:15:84;;;7625:34;;7695:15;;;7690:2;7675:18;;7668:43;7742:2;7727:18;;7720:34;;;;7785:2;7770:18;;7763:34;;;;7834:15;;;7828:3;7813:19;;7806:44;7605:3;7866:19;;7859:35;;;;7574:3;7559:19;;7258:642::o;11813:250::-;11898:1;11908:113;11922:6;11919:1;11916:13;11908:113;;;11998:11;;;11992:18;11979:11;;;11972:39;11944:2;11937:10;11908:113;;;-1:-1:-1;;12055:1:84;12037:16;;12030:27;11813:250::o;12068:384::-;-1:-1:-1;;;;;;12253:33:84;;12241:46;;12310:13;;12223:3;;12332:74;12310:13;12395:1;12386:11;;12379:4;12367:17;;12332:74;:::i;:::-;12426:16;;;;12444:1;12422:24;;12068:384;-1:-1:-1;;;12068:384:84:o;12457:287::-;12586:3;12624:6;12618:13;12640:66;12699:6;12694:3;12687:4;12679:6;12675:17;12640:66;:::i;:::-;12722:16;;;;;12457:287;-1:-1:-1;;12457:287:84:o;12749:790::-;-1:-1:-1;;;;;13238:15:84;;;13220:34;;13290:15;;;13285:2;13270:18;;13263:43;13337:2;13322:18;;13315:34;;;;13380:2;13365:18;;13358:34;;;;13423:3;13408:19;;13401:35;13473:15;;;13200:3;13452:19;;13445:44;13520:3;13505:19;;13498:35;;;;13169:3;13154:19;;12749:790::o;13851:626::-;14101:2;14090:9;14083:21;14140:1;14135:2;14124:9;14120:18;14113:29;-1:-1:-1;;;14173:2:84;14162:9;14158:18;14151:35;14224:3;14217:4;14206:9;14202:20;14195:33;14064:4;14257:6;14251:13;14301:6;14295:3;14284:9;14280:19;14273:35;14317:82;14392:6;14386:3;14375:9;14371:19;14364:4;14356:6;14352:17;14317:82;:::i;:::-;14460:2;14439:15;-1:-1:-1;;14435:29:84;14420:45;;;;14467:3;14416:55;;13851:626;-1:-1:-1;;13851:626:84:o;15052:374::-;15282:2;15271:9;15264:21;15245:4;15302:49;15347:2;15336:9;15332:18;14965:2;14953:15;;-1:-1:-1;;;14993:4:84;14984:14;;14977:36;15038:2;15029:12;;14888:159;15302:49;-1:-1:-1;;;;;15387:32:84;;;;15382:2;15367:18;;;;15360:60;;;;-1:-1:-1;15294:57:84;15052:374::o;15595:::-;15825:2;15814:9;15807:21;15788:4;15845:49;15890:2;15879:9;15875:18;15508:2;15496:15;;-1:-1:-1;;;15536:4:84;15527:14;;15520:36;15581:2;15572:12;;15431:159;16377:348;16607:2;16596:9;16589:21;16570:4;16627:49;16672:2;16661:9;16657:18;14965:2;14953:15;;-1:-1:-1;;;14993:4:84;14984:14;;14977:36;15038:2;15029:12;;14888:159;16627:49;16619:57;;16712:6;16707:2;16696:9;16692:18;16685:34;16377:348;;;;:::o;16730:::-;16960:2;16949:9;16942:21;16923:4;16980:49;17025:2;17014:9;17010:18;15508:2;15496:15;;-1:-1:-1;;;15536:4:84;15527:14;;15520:36;15581:2;15572:12;;15431:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "dao()": "4162169f",
    "dex()": "692058c2",
    "fBTC()": "b9d35e78",
    "fUSD()": "094e23f9",
    "factory()": "c45a0155",
    "failed()": "ba414fa6",
    "lptoken()": "f363393b",
    "protocol_address()": "6694c06c",
    "setUp()": "0a9254e4",
    "testBuy()": "0b586cc8",
    "testRedeemLiquidity()": "f9c6b568",
    "testSell()": "31c42ca6",
    "testSlippage()": "1846040e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"contract DAO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dex\",\"outputs\":[{\"internalType\":\"contract DEX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fBTC\",\"outputs\":[{\"internalType\":\"contract FakeBTC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fUSD\",\"outputs\":[{\"internalType\":\"contract FakeUSD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lptoken\",\"outputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocol_address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBuy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRedeemLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSlippage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/DEX.t.sol\":\"DEXTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":flexible-voting/=lib/flexible-voting/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbf2c734ffcc665d175a4b239d90a6ceb873d613c26ce7dc5c4d3131b76a0e92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53e1caed2b51fc82c3050f37cb6ee1fb9a2627baaae4cb08919b795a7216db2d\",\"dweb:/ipfs/Qmepc4Zd44EpqBjLHVAGzu6B5QqY1zqecHgfBTpZcQ7HZ7\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf1076813373cbd519d03411288590a8d9729592934718b0f6b54ca281c855dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cc7c5c97c15c4adb648fbc35d4909f81b09e52410ffb4e8010a0f1e272a7fb5\",\"dweb:/ipfs/QmV3oNjq9tZmQBZMtaEEwaXdfcNSzu8KhupXEzcZ3BHMsc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xe3955cfd5a73fbf56acf7a7709cc9db1dfdd70e6a969bb6b19106de6f1049b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30db8c85f6a04f5433d876859c89e51ecbea5ef6cdcadd5f2a342f216e6f6a9\",\"dweb:/ipfs/QmUm6cbRKtYcSSH2uib2f2aJ5qd6wBzkQUbPTP7jKW2Ayz\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8\",\"dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80\",\"dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"src/core/Cluster.sol\":{\"keccak256\":\"0x67b50370ea13680db8484419548058eae192c602d6cd53362a4eb82fa11d8952\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ed193bf12fe7b4a6f6d832b77996ee39ce81435dac1e3695734b88b40d2da26d\",\"dweb:/ipfs/QmZcPyzZ7jpLpdvqenfpZsQNRmNvAxeqqfvcLs3U7RafkG\"]},\"src/core/DEX.sol\":{\"keccak256\":\"0x2057ac3cd2e5e18050fe5c59113b794329e83b407000828fb68d1cd5951182eb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ef6b5f591dc91b842cd3ab7b8decc57893e2e9b082eaa6a5140c1ee0e83f660e\",\"dweb:/ipfs/QmcafMUbjQ5AZxCwTGasLiCFXJ4Y9v2jFTc1xn1ej3mKTq\"]},\"src/core/Factory.sol\":{\"keccak256\":\"0x86c80361d7c2106de34eb20ce52b9154cffed40ef29a4832604b6f9bd19e73ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ab56f672e710572fd10e408aec0b3f92e3b2110fdebece983888be59aa8c4f66\",\"dweb:/ipfs/QmdJDs46dQyqjrjXFM23YXZCciRgnzzgfEZho97hyJs2bA\"]},\"src/core/LPToken.sol\":{\"keccak256\":\"0x7314e14aaa8d58ee0dcb685955bf49d0b2ce1321e56e5473426632cad1056823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0dd2f5b3f94e1616784997786efcad723bf5ac4380a78fff7e620f7d730ddf7\",\"dweb:/ipfs/QmVp93dEPkJzuboA5oDDKpPBbyAR2CKap2Ty4X6qFkrx7i\"]},\"src/core/Pool.sol\":{\"keccak256\":\"0x4c6f2a49f2b8436078081481947207c30f64850f49452a6fe11209ce19e3bfb3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c32f4c49f169e2d0d164f2c3be7d07b6c4906f6f3ffbeaf5382e670820abb154\",\"dweb:/ipfs/QmSBxWHKYXAuZL6p2jmJvbLdgtoxVXDk9t8w86CdvPAEZ5\"]},\"src/core/TokenManager.sol\":{\"keccak256\":\"0x5a4776dba46cfb42e650fc278ea56d8402882fcb7d3ab0d4d8a1dd2c6632beae\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://178c0da0b599d3711427f411f338e291f8da6f06de824ac30997a6d255d37162\",\"dweb:/ipfs/QmTSE4PvcXVpCLS77WQAK7rFfJGZUkKV2ggjeua6EEuwde\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x010c49c10c0bf0c2fd8e8080b9c4fa44f744e9075f0c88a12e35c4305f030388\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://b5c5ec966cd4746b6173c125dd49e9d6fdff6dc18cf45ceafd8c3a895577062c\",\"dweb:/ipfs/QmVjJo2bNi7T9LR7EpiZ3yVFiWZosceKtjMxNXJnj6dKuk\"]},\"src/interfaces/IDEX.sol\":{\"keccak256\":\"0x0297bf398cf43743213fb339591a472a2f81be946c405f3956db98b4db4e5f20\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4d2f1a919d227b01bd187935ca4c7101a1b05c39b62cd5ec358220d783b046b7\",\"dweb:/ipfs/QmeQuKk1PcaRTfAL7c7gHCvUUXkU6eYvt2wF96PhQfBy8z\"]},\"src/interfaces/IFactory.sol\":{\"keccak256\":\"0x9364b6983e159ebec20ffa3d08c340f2a9fd3900a9f374b5419d76b1d4dbee18\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fdb86076fc2d799ddd14f1ec6dbd2a5f8e3135aabbdce2abdf8753963b2bce51\",\"dweb:/ipfs/QmVMu42N1Dq31Qkb9BFmrQx4iMmZ3e3ZtuCoH8DmSZSXE7\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0x80da8a452a4ea032813cb66ada33361d2600b6b8fcbe223d118f2c07b2ff5a1c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://69b7c93551336048aed6216ab95f453953253fd7b654f4b4ef54273e18e3ed5e\",\"dweb:/ipfs/QmWW83nYTAEBTtf3SQHoJYvry42joC2DprW3MPhAxCRCZF\"]},\"src/interfaces/IPool.sol\":{\"keccak256\":\"0x66989357228fb04ef48c16664c02b32ebd49175765589899722b7240af0fac15\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e228280bef41d4423afdf40a058e88fbc0f2a938be44344a50bb5b20fa4aa4f2\",\"dweb:/ipfs/QmYMsZM15on278E6P7EydVhA9tjXDu5pWDSqhk9sW2SZWt\"]},\"src/interfaces/ITokenManager.sol\":{\"keccak256\":\"0x9f49b8172c0e2b9e917837a97e73e3935a57fb2b65fbf26d117c37e391d10d5e\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://68ed4b9c51d8a33014f66ae5ec24e9c0386735a9bbc9ae51a8893a98839d89f2\",\"dweb:/ipfs/QmNcidWmNob8DoU4UchesPk6fX1BaasDNdijDon4He83Ay\"]},\"src/libraries/Fundamentals.sol\":{\"keccak256\":\"0x9d4e9b5091f5bcdb0fa9bb08231833f827bcda452a1cce04b0d8009c2a89b4a7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://84c53f41ebc42ab79a70188a174fefa9a09a3f849bf37dcd1a280c40896c0805\",\"dweb:/ipfs/QmZoD4itGT1DTCDXjgGT3gbLpSYtQreniT1iGzX591KqmL\"]},\"src/test/FakeBTC.sol\":{\"keccak256\":\"0xb819ab0da26575515179a74a565dcd14186f1b01a9cebef3fedd0cd8bf3259ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://014d36752c53e1799c0b74c682e7da227c1f15ed7b3032a10eea8a51f448de36\",\"dweb:/ipfs/QmeJaDVES1nWPwsLe5tZWC2iv42dSB8nPkTGHJCACB9ef9\"]},\"src/test/FakeUSD.sol\":{\"keccak256\":\"0xe30c661cf527613792b803d1df5b3210103fa846a990891a5e62f56c5838d5d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10de1cf6d75a68e821a9c5ffae73afb4877702183220076cdeb529e7126c4945\",\"dweb:/ipfs/QmQDsHj4Pg7SYWSGwgigwBLgdwrb5qsnL6g4gRxWRhLxFV\"]},\"test/DEX.t.sol\":{\"keccak256\":\"0x9d38ca59d9bc99e601a6b7c39ce80aa1e2a5bbf76fbebe0bcba48c0216e8633c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5e954e7cbc8dc5bd84f8533fd8d1f957c066a0757547035be89379fc290ba808\",\"dweb:/ipfs/QmcrauL3xDwVKaoYAH8zvihxqhc3cijaQATEH9WYKnKz1X\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dao",
          "outputs": [
            {
              "internalType": "contract DAO",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dex",
          "outputs": [
            {
              "internalType": "contract DEX",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fBTC",
          "outputs": [
            {
              "internalType": "contract FakeBTC",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fUSD",
          "outputs": [
            {
              "internalType": "contract FakeUSD",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract Factory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lptoken",
          "outputs": [
            {
              "internalType": "contract ILPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocol_address",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBuy"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRedeemLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSell"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSlippage"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":flexible-voting/=lib/flexible-voting/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/DEX.t.sol": "DEXTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbf2c734ffcc665d175a4b239d90a6ceb873d613c26ce7dc5c4d3131b76a0e92",
        "urls": [
          "bzz-raw://53e1caed2b51fc82c3050f37cb6ee1fb9a2627baaae4cb08919b795a7216db2d",
          "dweb:/ipfs/Qmepc4Zd44EpqBjLHVAGzu6B5QqY1zqecHgfBTpZcQ7HZ7"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf1076813373cbd519d03411288590a8d9729592934718b0f6b54ca281c855dd7",
        "urls": [
          "bzz-raw://9cc7c5c97c15c4adb648fbc35d4909f81b09e52410ffb4e8010a0f1e272a7fb5",
          "dweb:/ipfs/QmV3oNjq9tZmQBZMtaEEwaXdfcNSzu8KhupXEzcZ3BHMsc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xe3955cfd5a73fbf56acf7a7709cc9db1dfdd70e6a969bb6b19106de6f1049b4c",
        "urls": [
          "bzz-raw://f30db8c85f6a04f5433d876859c89e51ecbea5ef6cdcadd5f2a342f216e6f6a9",
          "dweb:/ipfs/QmUm6cbRKtYcSSH2uib2f2aJ5qd6wBzkQUbPTP7jKW2Ayz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0xa52d593ff06a2353f78fa149da31f2ca94f03d1eff99bde41977fa2fe985a92f",
        "urls": [
          "bzz-raw://4d275abef31363d629e2a1a06f439bb7d2f26f66545ddb61f74b174de6f034a8",
          "dweb:/ipfs/QmPfjkyNcfiiZnPtYCvGfSHikbYzZxut3D4pBhBZ2VwfoT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
        "urls": [
          "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
          "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x2f67d32babbb1619ed0cdd9c3833d76151316d6e1e7f2f30e67e15a1ed1fafc9",
        "urls": [
          "bzz-raw://d5788b9ba7ea2967b5d5d9e3ffad5a5ffa66f1f186f615f9ae098b01452b1e80",
          "dweb:/ipfs/QmZXM98X2gXtHN9W9EW5tU9EBrCmi82zmSSuUCK6YsGMpc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36",
        "urls": [
          "bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7",
          "dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "src/core/Cluster.sol": {
        "keccak256": "0x67b50370ea13680db8484419548058eae192c602d6cd53362a4eb82fa11d8952",
        "urls": [
          "bzz-raw://ed193bf12fe7b4a6f6d832b77996ee39ce81435dac1e3695734b88b40d2da26d",
          "dweb:/ipfs/QmZcPyzZ7jpLpdvqenfpZsQNRmNvAxeqqfvcLs3U7RafkG"
        ],
        "license": "BSL-1.1"
      },
      "src/core/DEX.sol": {
        "keccak256": "0x2057ac3cd2e5e18050fe5c59113b794329e83b407000828fb68d1cd5951182eb",
        "urls": [
          "bzz-raw://ef6b5f591dc91b842cd3ab7b8decc57893e2e9b082eaa6a5140c1ee0e83f660e",
          "dweb:/ipfs/QmcafMUbjQ5AZxCwTGasLiCFXJ4Y9v2jFTc1xn1ej3mKTq"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/core/Factory.sol": {
        "keccak256": "0x86c80361d7c2106de34eb20ce52b9154cffed40ef29a4832604b6f9bd19e73ee",
        "urls": [
          "bzz-raw://ab56f672e710572fd10e408aec0b3f92e3b2110fdebece983888be59aa8c4f66",
          "dweb:/ipfs/QmdJDs46dQyqjrjXFM23YXZCciRgnzzgfEZho97hyJs2bA"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/core/LPToken.sol": {
        "keccak256": "0x7314e14aaa8d58ee0dcb685955bf49d0b2ce1321e56e5473426632cad1056823",
        "urls": [
          "bzz-raw://f0dd2f5b3f94e1616784997786efcad723bf5ac4380a78fff7e620f7d730ddf7",
          "dweb:/ipfs/QmVp93dEPkJzuboA5oDDKpPBbyAR2CKap2Ty4X6qFkrx7i"
        ],
        "license": "MIT"
      },
      "src/core/Pool.sol": {
        "keccak256": "0x4c6f2a49f2b8436078081481947207c30f64850f49452a6fe11209ce19e3bfb3",
        "urls": [
          "bzz-raw://c32f4c49f169e2d0d164f2c3be7d07b6c4906f6f3ffbeaf5382e670820abb154",
          "dweb:/ipfs/QmSBxWHKYXAuZL6p2jmJvbLdgtoxVXDk9t8w86CdvPAEZ5"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/core/TokenManager.sol": {
        "keccak256": "0x5a4776dba46cfb42e650fc278ea56d8402882fcb7d3ab0d4d8a1dd2c6632beae",
        "urls": [
          "bzz-raw://178c0da0b599d3711427f411f338e291f8da6f06de824ac30997a6d255d37162",
          "dweb:/ipfs/QmTSE4PvcXVpCLS77WQAK7rFfJGZUkKV2ggjeua6EEuwde"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x010c49c10c0bf0c2fd8e8080b9c4fa44f744e9075f0c88a12e35c4305f030388",
        "urls": [
          "bzz-raw://b5c5ec966cd4746b6173c125dd49e9d6fdff6dc18cf45ceafd8c3a895577062c",
          "dweb:/ipfs/QmVjJo2bNi7T9LR7EpiZ3yVFiWZosceKtjMxNXJnj6dKuk"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IDEX.sol": {
        "keccak256": "0x0297bf398cf43743213fb339591a472a2f81be946c405f3956db98b4db4e5f20",
        "urls": [
          "bzz-raw://4d2f1a919d227b01bd187935ca4c7101a1b05c39b62cd5ec358220d783b046b7",
          "dweb:/ipfs/QmeQuKk1PcaRTfAL7c7gHCvUUXkU6eYvt2wF96PhQfBy8z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IFactory.sol": {
        "keccak256": "0x9364b6983e159ebec20ffa3d08c340f2a9fd3900a9f374b5419d76b1d4dbee18",
        "urls": [
          "bzz-raw://fdb86076fc2d799ddd14f1ec6dbd2a5f8e3135aabbdce2abdf8753963b2bce51",
          "dweb:/ipfs/QmVMu42N1Dq31Qkb9BFmrQx4iMmZ3e3ZtuCoH8DmSZSXE7"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0x80da8a452a4ea032813cb66ada33361d2600b6b8fcbe223d118f2c07b2ff5a1c",
        "urls": [
          "bzz-raw://69b7c93551336048aed6216ab95f453953253fd7b654f4b4ef54273e18e3ed5e",
          "dweb:/ipfs/QmWW83nYTAEBTtf3SQHoJYvry42joC2DprW3MPhAxCRCZF"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IPool.sol": {
        "keccak256": "0x66989357228fb04ef48c16664c02b32ebd49175765589899722b7240af0fac15",
        "urls": [
          "bzz-raw://e228280bef41d4423afdf40a058e88fbc0f2a938be44344a50bb5b20fa4aa4f2",
          "dweb:/ipfs/QmYMsZM15on278E6P7EydVhA9tjXDu5pWDSqhk9sW2SZWt"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/ITokenManager.sol": {
        "keccak256": "0x9f49b8172c0e2b9e917837a97e73e3935a57fb2b65fbf26d117c37e391d10d5e",
        "urls": [
          "bzz-raw://68ed4b9c51d8a33014f66ae5ec24e9c0386735a9bbc9ae51a8893a98839d89f2",
          "dweb:/ipfs/QmNcidWmNob8DoU4UchesPk6fX1BaasDNdijDon4He83Ay"
        ],
        "license": "BSL-1.1"
      },
      "src/libraries/Fundamentals.sol": {
        "keccak256": "0x9d4e9b5091f5bcdb0fa9bb08231833f827bcda452a1cce04b0d8009c2a89b4a7",
        "urls": [
          "bzz-raw://84c53f41ebc42ab79a70188a174fefa9a09a3f849bf37dcd1a280c40896c0805",
          "dweb:/ipfs/QmZoD4itGT1DTCDXjgGT3gbLpSYtQreniT1iGzX591KqmL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/test/FakeBTC.sol": {
        "keccak256": "0xb819ab0da26575515179a74a565dcd14186f1b01a9cebef3fedd0cd8bf3259ab",
        "urls": [
          "bzz-raw://014d36752c53e1799c0b74c682e7da227c1f15ed7b3032a10eea8a51f448de36",
          "dweb:/ipfs/QmeJaDVES1nWPwsLe5tZWC2iv42dSB8nPkTGHJCACB9ef9"
        ],
        "license": "UNLICENSED"
      },
      "src/test/FakeUSD.sol": {
        "keccak256": "0xe30c661cf527613792b803d1df5b3210103fa846a990891a5e62f56c5838d5d4",
        "urls": [
          "bzz-raw://10de1cf6d75a68e821a9c5ffae73afb4877702183220076cdeb529e7126c4945",
          "dweb:/ipfs/QmQDsHj4Pg7SYWSGwgigwBLgdwrb5qsnL6g4gRxWRhLxFV"
        ],
        "license": "UNLICENSED"
      },
      "test/DEX.t.sol": {
        "keccak256": "0x9d38ca59d9bc99e601a6b7c39ce80aa1e2a5bbf76fbebe0bcba48c0216e8633c",
        "urls": [
          "bzz-raw://5e954e7cbc8dc5bd84f8533fd8d1f957c066a0757547035be89379fc290ba808",
          "dweb:/ipfs/QmcrauL3xDwVKaoYAH8zvihxqhc3cijaQATEH9WYKnKz1X"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/DEX.t.sol",
    "id": 46052,
    "exportedSymbols": {
      "AccessControl": [
        27247
      ],
      "Address": [
        34466
      ],
      "Clones": [
        32102
      ],
      "Cluster": [
        40046
      ],
      "Cluster__AlreadyInitialized": [
        39943
      ],
      "Cluster__InsufficientLiquidity": [
        39939
      ],
      "Cluster__NotAdmin": [
        39941
      ],
      "Context": [
        35859
      ],
      "Counters": [
        35933
      ],
      "DAO": [
        45125
      ],
      "DEX": [
        41038
      ],
      "DEXTest": [
        46051
      ],
      "DEX__Deadline": [
        40057
      ],
      "DEX__MinPrice": [
        40061
      ],
      "DEX__PoolNotFound": [
        40059
      ],
      "DEX__Slippage": [
        40065
      ],
      "DEX__ZeroAmount": [
        40063
      ],
      "DSTest": [
        2214
      ],
      "ECDSA": [
        36683
      ],
      "EIP712": [
        36837
      ],
      "ERC165": [
        36861
      ],
      "ERC20": [
        32784
      ],
      "ERC20Burnable": [
        32906
      ],
      "ERC20Permit": [
        33801
      ],
      "ERC20Votes": [
        33604
      ],
      "Factory": [
        41496
      ],
      "Factory__GovernorExists": [
        41058
      ],
      "Factory__GovernorTokenNotInPool": [
        41060
      ],
      "Factory__IdenticalAddresses": [
        41048
      ],
      "Factory__OverAllocation": [
        41056
      ],
      "Factory__PoolExists": [
        41052
      ],
      "Factory__PoolNotFound": [
        41054
      ],
      "Factory__ZeroAddress": [
        41050
      ],
      "FakeBTC": [
        44550
      ],
      "FakeUSD": [
        44589
      ],
      "Fundamentals": [
        44511
      ],
      "IAccessControl": [
        27320
      ],
      "ICluster": [
        43923
      ],
      "IDEX": [
        44037
      ],
      "IERC165": [
        36873
      ],
      "IERC20": [
        32862
      ],
      "IERC20Metadata": [
        33629
      ],
      "IERC20Permit": [
        33837
      ],
      "IFactory": [
        44138
      ],
      "IGovernor": [
        29038
      ],
      "ILPToken": [
        44213
      ],
      "IPool": [
        44348
      ],
      "ITokenManager": [
        44419
      ],
      "IVotes": [
        32022
      ],
      "LPToken": [
        41944
      ],
      "Math": [
        37738
      ],
      "Ownable": [
        27433
      ],
      "PRECISION": [
        44426
      ],
      "Pool": [
        43047
      ],
      "Pool__AlreadyInitialized": [
        41967
      ],
      "Pool__AmountIsZero": [
        41959
      ],
      "Pool__ForbiddenTokenInteraction": [
        41963
      ],
      "Pool__LowSurplus": [
        41957
      ],
      "Pool__MinLiquidity": [
        41961
      ],
      "Pool__OnlyFactory": [
        41965
      ],
      "ReentrancyGuard": [
        32156
      ],
      "SafeCast": [
        39279
      ],
      "SafeERC20": [
        34118
      ],
      "StdAssertions": [
        3557
      ],
      "StdChains": [
        4221
      ],
      "StdCheats": [
        6182
      ],
      "StdStorage": [
        7089
      ],
      "StdUtils": [
        9276
      ],
      "Strings": [
        36108
      ],
      "Test": [
        9318
      ],
      "TestBase": [
        2274
      ],
      "TokenManager": [
        43398
      ],
      "TokenManager__AlreadyInitialized": [
        43057
      ],
      "TokenManager__ClusterAlreadyExists": [
        43059
      ],
      "TokenManager__InsufficientLiquidity": [
        43055
      ],
      "Vm": [
        10608
      ],
      "console": [
        18672
      ],
      "console2": [
        26768
      ],
      "stdError": [
        6248
      ],
      "stdJson": [
        6915
      ],
      "stdMath": [
        7057
      ],
      "stdStorage": [
        8522
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7981:80",
    "nodes": [
      {
        "id": 45092,
        "nodeType": "PragmaDirective",
        "src": "39:23:80",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 45093,
        "nodeType": "ImportDirective",
        "src": "64:28:80",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 9319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45094,
        "nodeType": "ImportDirective",
        "src": "94:33:80",
        "nodes": [],
        "absolutePath": "src/test/FakeBTC.sol",
        "file": "../src/test/FakeBTC.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 44551,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45095,
        "nodeType": "ImportDirective",
        "src": "128:33:80",
        "nodes": [],
        "absolutePath": "src/test/FakeUSD.sol",
        "file": "../src/test/FakeUSD.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 44590,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45096,
        "nodeType": "ImportDirective",
        "src": "163:33:80",
        "nodes": [],
        "absolutePath": "src/core/Factory.sol",
        "file": "../src/core/Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 41497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45097,
        "nodeType": "ImportDirective",
        "src": "197:30:80",
        "nodes": [],
        "absolutePath": "src/core/Pool.sol",
        "file": "../src/core/Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 43048,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45098,
        "nodeType": "ImportDirective",
        "src": "228:29:80",
        "nodes": [],
        "absolutePath": "src/core/DEX.sol",
        "file": "../src/core/DEX.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 41039,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45099,
        "nodeType": "ImportDirective",
        "src": "258:38:80",
        "nodes": [],
        "absolutePath": "src/core/TokenManager.sol",
        "file": "../src/core/TokenManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 43399,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45100,
        "nodeType": "ImportDirective",
        "src": "297:33:80",
        "nodes": [],
        "absolutePath": "src/core/Cluster.sol",
        "file": "../src/core/Cluster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 40047,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45101,
        "nodeType": "ImportDirective",
        "src": "332:37:80",
        "nodes": [],
        "absolutePath": "src/interfaces/IPool.sol",
        "file": "../src/interfaces/IPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46052,
        "sourceUnit": 44349,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45125,
        "nodeType": "ContractDefinition",
        "src": "371:230:80",
        "nodes": [
          {
            "id": 45104,
            "nodeType": "VariableDeclaration",
            "src": "390:22:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "405:7:80",
            "scope": 45125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Factory_$41496",
              "typeString": "contract Factory"
            },
            "typeName": {
              "id": 45103,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45102,
                "name": "Factory",
                "nameLocations": [
                  "390:7:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41496,
                "src": "390:7:80"
              },
              "referencedDeclaration": 41496,
              "src": "390:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Factory_$41496",
                "typeString": "contract Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45124,
            "nodeType": "FunctionDefinition",
            "src": "419:180:80",
            "nodes": [],
            "body": {
              "id": 45123,
              "nodeType": "Block",
              "src": "508:91:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45113,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45104,
                      "src": "518:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$41496",
                        "typeString": "contract Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45117,
                          "name": "poolTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45106,
                          "src": "540:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45118,
                          "name": "tokenManagerTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45108,
                          "src": "554:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45119,
                          "name": "clusterTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45110,
                          "src": "576:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "528:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_Factory_$41496_$",
                          "typeString": "function (address,address,address) returns (contract Factory)"
                        },
                        "typeName": {
                          "id": 45115,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45114,
                            "name": "Factory",
                            "nameLocations": [
                              "532:7:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41496,
                            "src": "532:7:80"
                          },
                          "referencedDeclaration": 41496,
                          "src": "532:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Factory_$41496",
                            "typeString": "contract Factory"
                          }
                        }
                      },
                      "id": 45120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "528:64:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$41496",
                        "typeString": "contract Factory"
                      }
                    },
                    "src": "518:74:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Factory_$41496",
                      "typeString": "contract Factory"
                    }
                  },
                  "id": 45122,
                  "nodeType": "ExpressionStatement",
                  "src": "518:74:80"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45106,
                  "mutability": "mutable",
                  "name": "poolTemplate",
                  "nameLocation": "439:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45124,
                  "src": "431:20:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45108,
                  "mutability": "mutable",
                  "name": "tokenManagerTemplate",
                  "nameLocation": "461:20:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45124,
                  "src": "453:28:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45110,
                  "mutability": "mutable",
                  "name": "clusterTemplate",
                  "nameLocation": "491:15:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 45124,
                  "src": "483:23:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:77:80"
            },
            "returnParameters": {
              "id": 45112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:80"
            },
            "scope": 45125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DAO",
        "contractDependencies": [
          41496
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45125
        ],
        "name": "DAO",
        "nameLocation": "380:3:80",
        "scope": 46052,
        "usedErrors": []
      },
      {
        "id": 46051,
        "nodeType": "ContractDefinition",
        "src": "603:7416:80",
        "nodes": [
          {
            "id": 45130,
            "nodeType": "VariableDeclaration",
            "src": "634:19:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9d35e78",
            "mutability": "mutable",
            "name": "fBTC",
            "nameLocation": "649:4:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FakeBTC_$44550",
              "typeString": "contract FakeBTC"
            },
            "typeName": {
              "id": 45129,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45128,
                "name": "FakeBTC",
                "nameLocations": [
                  "634:7:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44550,
                "src": "634:7:80"
              },
              "referencedDeclaration": 44550,
              "src": "634:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FakeBTC_$44550",
                "typeString": "contract FakeBTC"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45133,
            "nodeType": "VariableDeclaration",
            "src": "659:19:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "094e23f9",
            "mutability": "mutable",
            "name": "fUSD",
            "nameLocation": "674:4:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FakeUSD_$44589",
              "typeString": "contract FakeUSD"
            },
            "typeName": {
              "id": 45132,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45131,
                "name": "FakeUSD",
                "nameLocations": [
                  "659:7:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44589,
                "src": "659:7:80"
              },
              "referencedDeclaration": 44589,
              "src": "659:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FakeUSD_$44589",
                "typeString": "contract FakeUSD"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45136,
            "nodeType": "VariableDeclaration",
            "src": "685:14:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "4162169f",
            "mutability": "mutable",
            "name": "dao",
            "nameLocation": "696:3:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DAO_$45125",
              "typeString": "contract DAO"
            },
            "typeName": {
              "id": 45135,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45134,
                "name": "DAO",
                "nameLocations": [
                  "685:3:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45125,
                "src": "685:3:80"
              },
              "referencedDeclaration": 45125,
              "src": "685:3:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DAO_$45125",
                "typeString": "contract DAO"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45139,
            "nodeType": "VariableDeclaration",
            "src": "705:22:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "720:7:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Factory_$41496",
              "typeString": "contract Factory"
            },
            "typeName": {
              "id": 45138,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45137,
                "name": "Factory",
                "nameLocations": [
                  "705:7:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41496,
                "src": "705:7:80"
              },
              "referencedDeclaration": 41496,
              "src": "705:7:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Factory_$41496",
                "typeString": "contract Factory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45142,
            "nodeType": "VariableDeclaration",
            "src": "733:14:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "692058c2",
            "mutability": "mutable",
            "name": "dex",
            "nameLocation": "744:3:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DEX_$41038",
              "typeString": "contract DEX"
            },
            "typeName": {
              "id": 45141,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45140,
                "name": "DEX",
                "nameLocations": [
                  "733:3:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41038,
                "src": "733:3:80"
              },
              "referencedDeclaration": 41038,
              "src": "733:3:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DEX_$41038",
                "typeString": "contract DEX"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45145,
            "nodeType": "VariableDeclaration",
            "src": "753:23:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "f363393b",
            "mutability": "mutable",
            "name": "lptoken",
            "nameLocation": "769:7:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILPToken_$44213",
              "typeString": "contract ILPToken"
            },
            "typeName": {
              "id": 45144,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45143,
                "name": "ILPToken",
                "nameLocations": [
                  "753:8:80"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44213,
                "src": "753:8:80"
              },
              "referencedDeclaration": 44213,
              "src": "753:8:80",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILPToken_$44213",
                "typeString": "contract ILPToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45147,
            "nodeType": "VariableDeclaration",
            "src": "783:31:80",
            "nodes": [],
            "constant": false,
            "functionSelector": "6694c06c",
            "mutability": "mutable",
            "name": "protocol_address",
            "nameLocation": "798:16:80",
            "scope": 46051,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45146,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "783:7:80",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45531,
            "nodeType": "FunctionDefinition",
            "src": "821:3001:80",
            "nodes": [],
            "body": {
              "id": 45530,
              "nodeType": "Block",
              "src": "845:2977:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45151,
                      "mutability": "mutable",
                      "name": "poolTemplate",
                      "nameLocation": "1000:12:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45530,
                      "src": "992:20:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45150,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "992:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45159,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 45156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1023:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$43047_$",
                            "typeString": "function () returns (contract Pool)"
                          },
                          "typeName": {
                            "id": 45155,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 45154,
                              "name": "Pool",
                              "nameLocations": [
                                "1027:4:80"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 43047,
                              "src": "1027:4:80"
                            },
                            "referencedDeclaration": 43047,
                            "src": "1027:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$43047",
                              "typeString": "contract Pool"
                            }
                          }
                        },
                        "id": 45157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1023:10:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$43047",
                          "typeString": "contract Pool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Pool_$43047",
                          "typeString": "contract Pool"
                        }
                      ],
                      "id": 45153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1015:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 45152,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1015:7:80",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 45158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1015:19:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:42:80"
                },
                {
                  "assignments": [
                    45161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45161,
                      "mutability": "mutable",
                      "name": "tokenManagerTemplate",
                      "nameLocation": "1052:20:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45530,
                      "src": "1044:28:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45160,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1044:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45169,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 45166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1083:16:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenManager_$43398_$",
                            "typeString": "function () returns (contract TokenManager)"
                          },
                          "typeName": {
                            "id": 45165,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 45164,
                              "name": "TokenManager",
                              "nameLocations": [
                                "1087:12:80"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 43398,
                              "src": "1087:12:80"
                            },
                            "referencedDeclaration": 43398,
                            "src": "1087:12:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenManager_$43398",
                              "typeString": "contract TokenManager"
                            }
                          }
                        },
                        "id": 45167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:18:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenManager_$43398",
                          "typeString": "contract TokenManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenManager_$43398",
                          "typeString": "contract TokenManager"
                        }
                      ],
                      "id": 45163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1075:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 45162,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:7:80",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 45168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1044:58:80"
                },
                {
                  "assignments": [
                    45171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45171,
                      "mutability": "mutable",
                      "name": "clusterTemplate",
                      "nameLocation": "1120:15:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45530,
                      "src": "1112:23:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1112:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45179,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 45176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1146:11:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Cluster_$40046_$",
                            "typeString": "function () returns (contract Cluster)"
                          },
                          "typeName": {
                            "id": 45175,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 45174,
                              "name": "Cluster",
                              "nameLocations": [
                                "1150:7:80"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 40046,
                              "src": "1150:7:80"
                            },
                            "referencedDeclaration": 40046,
                            "src": "1150:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cluster_$40046",
                              "typeString": "contract Cluster"
                            }
                          }
                        },
                        "id": 45177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1146:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Cluster_$40046",
                          "typeString": "contract Cluster"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Cluster_$40046",
                          "typeString": "contract Cluster"
                        }
                      ],
                      "id": 45173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1138:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 45172,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1138:7:80",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 45178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:22:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1112:48:80"
                },
                {
                  "expression": {
                    "id": 45188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45180,
                      "name": "dao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45136,
                      "src": "1170:3:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DAO_$45125",
                        "typeString": "contract DAO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45184,
                          "name": "poolTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45151,
                          "src": "1184:12:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45185,
                          "name": "tokenManagerTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45161,
                          "src": "1198:20:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 45186,
                          "name": "clusterTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45171,
                          "src": "1220:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1176:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_DAO_$45125_$",
                          "typeString": "function (address,address,address) returns (contract DAO)"
                        },
                        "typeName": {
                          "id": 45182,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45181,
                            "name": "DAO",
                            "nameLocations": [
                              "1180:3:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 45125,
                            "src": "1180:3:80"
                          },
                          "referencedDeclaration": 45125,
                          "src": "1180:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DAO_$45125",
                            "typeString": "contract DAO"
                          }
                        }
                      },
                      "id": 45187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1176:60:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DAO_$45125",
                        "typeString": "contract DAO"
                      }
                    },
                    "src": "1170:66:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DAO_$45125",
                      "typeString": "contract DAO"
                    }
                  },
                  "id": 45189,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:66:80"
                },
                {
                  "expression": {
                    "id": 45194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45190,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45139,
                      "src": "1246:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$41496",
                        "typeString": "contract Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45191,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45136,
                          "src": "1256:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DAO_$45125",
                            "typeString": "contract DAO"
                          }
                        },
                        "id": 45192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1260:7:80",
                        "memberName": "factory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 45104,
                        "src": "1256:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Factory_$41496_$",
                          "typeString": "function () view external returns (contract Factory)"
                        }
                      },
                      "id": 45193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1256:13:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Factory_$41496",
                        "typeString": "contract Factory"
                      }
                    },
                    "src": "1246:23:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Factory_$41496",
                      "typeString": "contract Factory"
                    }
                  },
                  "id": 45195,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:23:80"
                },
                {
                  "expression": {
                    "id": 45201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45196,
                      "name": "protocol_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45147,
                      "src": "1279:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45199,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45136,
                          "src": "1306:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DAO_$45125",
                            "typeString": "contract DAO"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DAO_$45125",
                            "typeString": "contract DAO"
                          }
                        ],
                        "id": 45198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1298:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 45197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1298:7:80",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 45200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1298:12:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1279:31:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45202,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:31:80"
                },
                {
                  "expression": {
                    "id": 45214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45203,
                      "name": "fUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45133,
                      "src": "1320:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeUSD_$44589",
                        "typeString": "contract FakeUSD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 45211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 45207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1339:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1346:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1352:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1346:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1339:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        {
                          "hexValue": "3138",
                          "id": 45212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1356:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 45206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1327:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint8_$returns$_t_contract$_FakeUSD_$44589_$",
                          "typeString": "function (uint256,uint8) returns (contract FakeUSD)"
                        },
                        "typeName": {
                          "id": 45205,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45204,
                            "name": "FakeUSD",
                            "nameLocations": [
                              "1331:7:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44589,
                            "src": "1331:7:80"
                          },
                          "referencedDeclaration": 44589,
                          "src": "1331:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeUSD_$44589",
                            "typeString": "contract FakeUSD"
                          }
                        }
                      },
                      "id": 45213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1327:32:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeUSD_$44589",
                        "typeString": "contract FakeUSD"
                      }
                    },
                    "src": "1320:39:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FakeUSD_$44589",
                      "typeString": "contract FakeUSD"
                    }
                  },
                  "id": 45215,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:39:80"
                },
                {
                  "expression": {
                    "id": 45227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45216,
                      "name": "fBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45130,
                      "src": "1369:4:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeBTC_$44550",
                        "typeString": "contract FakeBTC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 45224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 45220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1388:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1395:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1401:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1395:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1388:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        {
                          "hexValue": "3138",
                          "id": 45225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1405:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 45219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1376:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint8_$returns$_t_contract$_FakeBTC_$44550_$",
                          "typeString": "function (uint256,uint8) returns (contract FakeBTC)"
                        },
                        "typeName": {
                          "id": 45218,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45217,
                            "name": "FakeBTC",
                            "nameLocations": [
                              "1380:7:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44550,
                            "src": "1380:7:80"
                          },
                          "referencedDeclaration": 44550,
                          "src": "1380:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FakeBTC_$44550",
                            "typeString": "contract FakeBTC"
                          }
                        }
                      },
                      "id": 45226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1376:32:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FakeBTC_$44550",
                        "typeString": "contract FakeBTC"
                      }
                    },
                    "src": "1369:39:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FakeBTC_$44550",
                      "typeString": "contract FakeBTC"
                    }
                  },
                  "id": 45228,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:39:80"
                },
                {
                  "expression": {
                    "id": 45238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45229,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45142,
                      "src": "1418:3:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DEX_$41038",
                        "typeString": "contract DEX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 45235,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45139,
                              "src": "1440:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Factory_$41496",
                                "typeString": "contract Factory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Factory_$41496",
                                "typeString": "contract Factory"
                              }
                            ],
                            "id": 45234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1432:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1432:7:80",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:16:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 45232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1424:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_DEX_$41038_$",
                          "typeString": "function (address) returns (contract DEX)"
                        },
                        "typeName": {
                          "id": 45231,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45230,
                            "name": "DEX",
                            "nameLocations": [
                              "1428:3:80"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 41038,
                            "src": "1428:3:80"
                          },
                          "referencedDeclaration": 41038,
                          "src": "1428:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DEX_$41038",
                            "typeString": "contract DEX"
                          }
                        }
                      },
                      "id": 45237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1424:25:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DEX_$41038",
                        "typeString": "contract DEX"
                      }
                    },
                    "src": "1418:31:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DEX_$41038",
                      "typeString": "contract DEX"
                    }
                  },
                  "id": 45239,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:31:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45245,
                                "name": "fUSD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45133,
                                "src": "1630:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FakeUSD_$44589",
                                  "typeString": "contract FakeUSD"
                                }
                              },
                              {
                                "id": 45246,
                                "name": "fBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45130,
                                "src": "1636:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FakeBTC_$44550",
                                  "typeString": "contract FakeBTC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FakeUSD_$44589",
                                  "typeString": "contract FakeUSD"
                                },
                                {
                                  "typeIdentifier": "t_contract$_FakeBTC_$44550",
                                  "typeString": "contract FakeBTC"
                                }
                              ],
                              "expression": {
                                "id": 45243,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45139,
                                "src": "1614:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Factory_$41496",
                                  "typeString": "contract Factory"
                                }
                              },
                              "id": 45244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1622:7:80",
                              "memberName": "getPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41102,
                              "src": "1614:15:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_contract$_IPool_$44348_$",
                                "typeString": "function (contract IERC20,contract IERC20) view external returns (contract IPool)"
                              }
                            },
                            "id": 45247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1614:27:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 45242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1606:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1606:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1606:36:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 45249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1656:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x0000000000000000000000000000000000000000"
                      },
                      {
                        "hexValue": "506f6f6c2073686f756c6420626520637265617465642062757420736f6d65686f7720616c726561647920657869737473",
                        "id": 45250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1712:51:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce19f0dc1e5b34aab423d6629e5bd122eccdbbcfea6a2ed6af7d9ffc1df3b66c",
                          "typeString": "literal_string \"Pool should be created but somehow already exists\""
                        },
                        "value": "Pool should be created but somehow already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce19f0dc1e5b34aab423d6629e5bd122eccdbbcfea6a2ed6af7d9ffc1df3b66c",
                          "typeString": "literal_string \"Pool should be created but somehow already exists\""
                        }
                      ],
                      "id": 45240,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 773,
                      "src": "1584:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 45251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:189:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45252,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:189:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45258,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1815:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1807:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45256,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1807:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1807:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45254,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45133,
                            "src": "1792:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 45255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1797:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "1792:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1792:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 45265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 45261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1823:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1830:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1836:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1830:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1823:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206469646e2774207265636569766520746865697220696e697469616c20313030302066555344",
                        "id": 45266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:49:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c208b15700ebc0661fc5e99a15a7e4d20ec19a76b69881e3a64040aec89368c4",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fUSD\""
                        },
                        "value": "The user didn't receive their initial 1000 fUSD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c208b15700ebc0661fc5e99a15a7e4d20ec19a76b69881e3a64040aec89368c4",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fUSD\""
                        }
                      ],
                      "id": 45253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "1783:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:107:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45268,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:107:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45274,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1932:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1924:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45272,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1924:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1924:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45270,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45130,
                            "src": "1909:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 45271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1914:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "1909:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1909:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 45281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 45277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1940:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1947:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1953:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1947:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1940:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206469646e2774207265636569766520746865697220696e697469616c20313030302066425443",
                        "id": 45282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1957:49:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e005c92541868449c38a0dcf3cd11d3e3ee65c854a91a979ce815bb01e8b03a6",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fBTC\""
                        },
                        "value": "The user didn't receive their initial 1000 fBTC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e005c92541868449c38a0dcf3cd11d3e3ee65c854a91a979ce815bb01e8b03a6",
                          "typeString": "literal_string \"The user didn't receive their initial 1000 fBTC\""
                        }
                      ],
                      "id": 45269,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "1900:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:107:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45284,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:107:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "id": 45288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        },
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        }
                      ],
                      "expression": {
                        "id": 45285,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "2018:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2021:12:80",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10372,
                      "src": "2018:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45290,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45294,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "2106:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 45295,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "2124:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2142:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2148:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2154:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2148:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2142:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2170:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2176:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2182:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2176:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2170:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2198:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2204:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2210:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2204:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2198:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2226:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2232:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2238:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2232:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2226:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45318,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2262:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2254:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45316,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2254:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45320,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2281:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2287:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2281:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2299:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2281:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45291,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "2076:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2080:12:80",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40505,
                      "src": "2076:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:235:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45325,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:235:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45331,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "2343:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2335:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2335:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2335:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 45337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 45333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2349:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2356:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2362:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2356:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2349:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45326,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "2322:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      "id": 45328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2327:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "2322:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2322:43:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45339,
                  "nodeType": "ExpressionStatement",
                  "src": "2322:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45345,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "2396:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2388:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2388:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2388:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 45351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 45347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2402:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2409:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2415:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2409:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2402:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45340,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "2375:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      "id": 45342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2380:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "2375:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2375:43:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45353,
                  "nodeType": "ExpressionStatement",
                  "src": "2375:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45357,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "2458:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 45358,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "2476:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2494:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2500:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2506:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2500:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2494:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2522:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2528:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2534:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2528:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2522:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2550:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2556:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2562:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2556:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2550:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        "id": 45378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "373030",
                          "id": 45374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2578:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700_by_1",
                            "typeString": "int_const 700"
                          },
                          "value": "700"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2584:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2590:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2584:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2578:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45381,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2614:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2606:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45379,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2606:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2606:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45383,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2633:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2639:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2633:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2651:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "2633:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_700000000000000000000_by_1",
                          "typeString": "int_const 700000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45354,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "2428:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2432:12:80",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40505,
                      "src": "2428:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2428:235:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45388,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:235:80"
                },
                {
                  "assignments": [
                    45390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45390,
                      "mutability": "mutable",
                      "name": "pool_address",
                      "nameLocation": "2682:12:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45530,
                      "src": "2674:20:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45389,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2674:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45399,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45395,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45133,
                            "src": "2721:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          {
                            "id": 45396,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45130,
                            "src": "2727:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            },
                            {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          ],
                          "expression": {
                            "id": 45393,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45139,
                            "src": "2705:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Factory_$41496",
                              "typeString": "contract Factory"
                            }
                          },
                          "id": 45394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2713:7:80",
                          "memberName": "getPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41102,
                          "src": "2705:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_contract$_IPool_$44348_$",
                            "typeString": "function (contract IERC20,contract IERC20) view external returns (contract IPool)"
                          }
                        },
                        "id": 45397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2705:27:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPool_$44348",
                          "typeString": "contract IPool"
                        }
                      ],
                      "id": 45392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2697:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 45391,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2697:7:80",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 45398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2697:36:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2674:59:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45405,
                                "name": "fUSD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45133,
                                "src": "2776:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FakeUSD_$44589",
                                  "typeString": "contract FakeUSD"
                                }
                              },
                              {
                                "id": 45406,
                                "name": "fBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45130,
                                "src": "2782:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FakeBTC_$44550",
                                  "typeString": "contract FakeBTC"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FakeUSD_$44589",
                                  "typeString": "contract FakeUSD"
                                },
                                {
                                  "typeIdentifier": "t_contract$_FakeBTC_$44550",
                                  "typeString": "contract FakeBTC"
                                }
                              ],
                              "expression": {
                                "id": 45403,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45139,
                                "src": "2760:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Factory_$41496",
                                  "typeString": "contract Factory"
                                }
                              },
                              "id": 45404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2768:7:80",
                              "memberName": "getPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41102,
                              "src": "2760:15:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_contract$_IPool_$44348_$",
                                "typeString": "function (contract IERC20,contract IERC20) view external returns (contract IPool)"
                              }
                            },
                            "id": 45407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2760:27:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 45402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2752:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2752:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2752:36:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45409,
                        "name": "pool_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45390,
                        "src": "2790:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206465706c6f7965642061742077726f6e672061646472657373",
                        "id": 45410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2804:32:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d91d2511eb46002508296c407cc91852607b17fa5b5ab9393d3b089bbc581c2f",
                          "typeString": "literal_string \"Pool deployed at wrong address\""
                        },
                        "value": "Pool deployed at wrong address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d91d2511eb46002508296c407cc91852607b17fa5b5ab9393d3b089bbc581c2f",
                          "typeString": "literal_string \"Pool deployed at wrong address\""
                        }
                      ],
                      "id": 45400,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 773,
                      "src": "2743:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 45411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2743:94:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45412,
                  "nodeType": "ExpressionStatement",
                  "src": "2743:94:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45418,
                                "name": "fBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45130,
                                "src": "2880:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FakeBTC_$44550",
                                  "typeString": "contract FakeBTC"
                                }
                              },
                              {
                                "id": 45419,
                                "name": "fUSD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45133,
                                "src": "2886:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FakeUSD_$44589",
                                  "typeString": "contract FakeUSD"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FakeBTC_$44550",
                                  "typeString": "contract FakeBTC"
                                },
                                {
                                  "typeIdentifier": "t_contract$_FakeUSD_$44589",
                                  "typeString": "contract FakeUSD"
                                }
                              ],
                              "expression": {
                                "id": 45416,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45139,
                                "src": "2864:7:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Factory_$41496",
                                  "typeString": "contract Factory"
                                }
                              },
                              "id": 45417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2872:7:80",
                              "memberName": "getPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41102,
                              "src": "2864:15:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_contract$_IPool_$44348_$",
                                "typeString": "function (contract IERC20,contract IERC20) view external returns (contract IPool)"
                              }
                            },
                            "id": 45420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2864:27:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPool_$44348",
                              "typeString": "contract IPool"
                            }
                          ],
                          "id": 45415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2856:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2856:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2856:36:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45422,
                        "name": "pool_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45390,
                        "src": "2894:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "506f6f6c206465706c6f7965642061742077726f6e672061646472657373",
                        "id": 45423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2908:32:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d91d2511eb46002508296c407cc91852607b17fa5b5ab9393d3b089bbc581c2f",
                          "typeString": "literal_string \"Pool deployed at wrong address\""
                        },
                        "value": "Pool deployed at wrong address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d91d2511eb46002508296c407cc91852607b17fa5b5ab9393d3b089bbc581c2f",
                          "typeString": "literal_string \"Pool deployed at wrong address\""
                        }
                      ],
                      "id": 45413,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 773,
                      "src": "2847:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
                    "id": 45424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2847:94:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45425,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:94:80"
                },
                {
                  "expression": {
                    "id": 45432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45426,
                      "name": "lptoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45145,
                      "src": "2952:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILPToken_$44213",
                        "typeString": "contract ILPToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 45428,
                              "name": "pool_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45390,
                              "src": "2968:12:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45427,
                            "name": "IPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44348,
                            "src": "2962:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPool_$44348_$",
                              "typeString": "type(contract IPool)"
                            }
                          },
                          "id": 45429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2962:19:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPool_$44348",
                            "typeString": "contract IPool"
                          }
                        },
                        "id": 45430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2982:7:80",
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44274,
                        "src": "2962:27:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILPToken_$44213_$",
                          "typeString": "function () view external returns (contract ILPToken)"
                        }
                      },
                      "id": 45431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2962:29:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILPToken_$44213",
                        "typeString": "contract ILPToken"
                      }
                    },
                    "src": "2952:39:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$44213",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "id": 45433,
                  "nodeType": "ExpressionStatement",
                  "src": "2952:39:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45439,
                                "name": "dex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45142,
                                "src": "3037:3:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEX_$41038",
                                  "typeString": "contract DEX"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEX_$41038",
                                  "typeString": "contract DEX"
                                }
                              ],
                              "id": 45438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3029:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45437,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3029:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3029:12:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45435,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "3011:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 45436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3019:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "3011:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3011:31:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "54686520444558206973206e6f74207374617274696e6720776974682030204c5020546f6b656e73",
                        "id": 45443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3047:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d96b02fc2e0b0832cffcd789951050d4d79190dd5dc9857ebb92737e2492552",
                          "typeString": "literal_string \"The DEX is not starting with 0 LP Tokens\""
                        },
                        "value": "The DEX is not starting with 0 LP Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d96b02fc2e0b0832cffcd789951050d4d79190dd5dc9857ebb92737e2492552",
                          "typeString": "literal_string \"The DEX is not starting with 0 LP Tokens\""
                        }
                      ],
                      "id": 45434,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3002:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:88:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45445,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:88:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45451,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3132:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3124:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45449,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3124:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3124:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45447,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45133,
                            "src": "3109:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 45448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3114:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "3109:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3109:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        "id": 45458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "333030",
                          "id": 45454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3140:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3146:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3152:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3146:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3140:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206973206e6f74207374617274696e672077697468203330306531382066555344",
                        "id": 45459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3156:43:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1df726bf0a667d0c7af9cae760635906e35017338877f61e94725c8521ebd3e7",
                          "typeString": "literal_string \"The user is not starting with 300e18 fUSD\""
                        },
                        "value": "The user is not starting with 300e18 fUSD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1df726bf0a667d0c7af9cae760635906e35017338877f61e94725c8521ebd3e7",
                          "typeString": "literal_string \"The user is not starting with 300e18 fUSD\""
                        }
                      ],
                      "id": 45446,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3100:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3100:100:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45461,
                  "nodeType": "ExpressionStatement",
                  "src": "3100:100:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45467,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3242:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3234:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45465,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3234:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45463,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45130,
                            "src": "3219:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 45464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3224:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "3219:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3219:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        "id": 45474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "333030",
                          "id": 45470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3250:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_300_by_1",
                            "typeString": "int_const 300"
                          },
                          "value": "300"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3256:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3262:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3256:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3250:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206973206e6f74207374617274696e672077697468203330306531382066425443",
                        "id": 45475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3266:43:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c918ac35c4f840f81cdc079ef74e674f9bdcbf3e6bcc7ecb09d791bff4344fb4",
                          "typeString": "literal_string \"The user is not starting with 300e18 fBTC\""
                        },
                        "value": "The user is not starting with 300e18 fBTC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300000000000000000000_by_1",
                          "typeString": "int_const 300000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c918ac35c4f840f81cdc079ef74e674f9bdcbf3e6bcc7ecb09d791bff4344fb4",
                          "typeString": "literal_string \"The user is not starting with 300e18 fBTC\""
                        }
                      ],
                      "id": 45462,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3210:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3210:100:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45477,
                  "nodeType": "ExpressionStatement",
                  "src": "3210:100:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45483,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3507:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3499:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45481,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3499:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3499:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45479,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "3481:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 45480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3489:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "3481:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3481:32:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3527:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3533:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3539:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3533:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "3527:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 45492,
                                  "name": "pool_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45390,
                                  "src": "3550:12:80",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45491,
                                "name": "IPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44348,
                                "src": "3544:5:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPool_$44348_$",
                                  "typeString": "type(contract IPool)"
                                }
                              },
                              "id": 45493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3544:19:80",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPool_$44348",
                                "typeString": "contract IPool"
                              }
                            },
                            "id": 45494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3564:13:80",
                            "memberName": "MIN_LIQUIDITY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 44236,
                            "src": "3544:33:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 45495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3544:35:80",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3527:52:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "5468652075736572206973207374617274696e672077697468207468652077726f6e6720616d6f756e74206f66204c5020546f6b656e73",
                        "id": 45497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3593:57:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c2009b200c48a7756c4967d40b093f5c69129e69b6c7fbba66305b89cc0c5ab",
                          "typeString": "literal_string \"The user is starting with the wrong amount of LP Tokens\""
                        },
                        "value": "The user is starting with the wrong amount of LP Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c2009b200c48a7756c4967d40b093f5c69129e69b6c7fbba66305b89cc0c5ab",
                          "typeString": "literal_string \"The user is starting with the wrong amount of LP Tokens\""
                        }
                      ],
                      "id": 45478,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "3459:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3459:201:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45499,
                  "nodeType": "ExpressionStatement",
                  "src": "3459:201:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45505,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "3726:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3718:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3718:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3718:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3732:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45500,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "3705:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      "id": 45502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3710:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "3705:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3705:29:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45509,
                  "nodeType": "ExpressionStatement",
                  "src": "3705:29:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45515,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "3765:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3757:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45513,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3757:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3757:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45510,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "3744:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      "id": 45512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3749:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "3744:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3744:29:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45519,
                  "nodeType": "ExpressionStatement",
                  "src": "3744:29:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45525,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "3807:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3799:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45523,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3799:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3799:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3813:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45520,
                        "name": "lptoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45145,
                        "src": "3783:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$44213",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "id": 45522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3791:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32849,
                      "src": "3783:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45529,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:32:80"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "830:5:80",
            "parameters": {
              "id": 45148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "835:2:80"
            },
            "returnParameters": {
              "id": 45149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "845:0:80"
            },
            "scope": 46051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45639,
            "nodeType": "FunctionDefinition",
            "src": "3828:740:80",
            "nodes": [],
            "body": {
              "id": 45638,
              "nodeType": "Block",
              "src": "3859:709:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45539,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "3890:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3882:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45537,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3882:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3882:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 45545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 45541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3896:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3903:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3909:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3903:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3896:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45534,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "3869:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      "id": 45536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3874:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "3869:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3869:43:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45547,
                  "nodeType": "ExpressionStatement",
                  "src": "3869:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45553,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "3943:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3935:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3935:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3935:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "id": 45559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 45555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3949:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3956:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3962:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "3956:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3949:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45548,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "3922:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      "id": 45550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3927:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "3922:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3922:43:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45561,
                  "nodeType": "ExpressionStatement",
                  "src": "3922:43:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30786634363232303531",
                        "id": 45565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3992:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4100071505_by_1",
                          "typeString": "int_const 4100071505"
                        },
                        "value": "0xf4622051"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4100071505_by_1",
                          "typeString": "int_const 4100071505"
                        }
                      ],
                      "expression": {
                        "id": 45562,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "3976:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3979:12:80",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10377,
                      "src": "3976:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 45566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3976:27:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45567,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:27:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45571,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "4062:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 45572,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "4080:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 45577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303030",
                          "id": 45573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4098:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "value": "200000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4110:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4116:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4110:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4098:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 45582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303030",
                          "id": 45578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4132:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "value": "200000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4144:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4150:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4144:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4132:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 45587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303030",
                          "id": 45583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4166:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "value": "200000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4178:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4184:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4178:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4166:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 45592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303030",
                          "id": 45588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4200:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "value": "200000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4212:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4218:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4212:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4200:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45595,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4242:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4234:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45593,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4234:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4234:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45597,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4261:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4267:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4261:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4279:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "4261:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45568,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "4032:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4036:12:80",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40505,
                      "src": "4032:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4032:259:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45602,
                  "nodeType": "ExpressionStatement",
                  "src": "4032:259:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45606,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "4332:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 45607,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "4350:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 45612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303030",
                          "id": 45608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4368:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "value": "200000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4380:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4386:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4380:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4368:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000010000000000_by_1",
                          "typeString": "int_const 2000000010000000000"
                        },
                        "id": 45617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303031",
                          "id": 45613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4402:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000001_by_1",
                            "typeString": "int_const 200000001"
                          },
                          "value": "200000001"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4414:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4420:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4414:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4402:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000010000000000_by_1",
                          "typeString": "int_const 2000000010000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 45622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303030",
                          "id": 45618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4436:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "value": "200000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4448:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4454:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4448:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4436:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000010000000000_by_1",
                          "typeString": "int_const 2000000010000000000"
                        },
                        "id": 45627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "323030303030303031",
                          "id": 45623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4470:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000001_by_1",
                            "typeString": "int_const 200000001"
                          },
                          "value": "200000001"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 45626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4482:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 45625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4488:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4482:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        },
                        "src": "4470:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000010000000000_by_1",
                          "typeString": "int_const 2000000010000000000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45630,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4512:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4504:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45628,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4504:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4504:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45632,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4531:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4537:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4531:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4549:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "4531:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000010000000000_by_1",
                          "typeString": "int_const 2000000010000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000010000000000_by_1",
                          "typeString": "int_const 2000000010000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45603,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "4302:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4306:12:80",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40505,
                      "src": "4302:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4302:259:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45637,
                  "nodeType": "ExpressionStatement",
                  "src": "4302:259:80"
                }
              ]
            },
            "functionSelector": "1846040e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSlippage",
            "nameLocation": "3837:12:80",
            "parameters": {
              "id": 45532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3849:2:80"
            },
            "returnParameters": {
              "id": 45533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3859:0:80"
            },
            "scope": 46051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45794,
            "nodeType": "FunctionDefinition",
            "src": "4574:1397:80",
            "nodes": [],
            "body": {
              "id": 45793,
              "nodeType": "Block",
              "src": "4612:1359:80",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "id": 45645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4638:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        },
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        }
                      ],
                      "expression": {
                        "id": 45642,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "4622:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4625:12:80",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10372,
                      "src": "4622:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4622:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45647,
                  "nodeType": "ExpressionStatement",
                  "src": "4622:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45651,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "4713:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 45652,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "4731:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4749:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4755:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4761:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "4755:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "4749:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4766:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "4749:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4784:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4790:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4796:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "4790:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "4784:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4801:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "4784:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4819:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4825:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4831:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "4825:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "4819:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4836:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "4819:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45676,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4862:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4854:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45674,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4854:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4854:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45678,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4881:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4887:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4881:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4899:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "4881:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45648,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "4680:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4684:15:80",
                      "memberName": "redeemLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40617,
                      "src": "4680:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4680:231:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45683,
                  "nodeType": "ExpressionStatement",
                  "src": "4680:231:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45689,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "4946:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4938:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4938:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4938:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4952:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4958:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4964:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "4958:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "4952:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4969:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "4952:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      ],
                      "expression": {
                        "id": 45684,
                        "name": "lptoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45145,
                        "src": "4922:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$44213",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "id": 45686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4930:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32849,
                      "src": "4922:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4922:52:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45699,
                  "nodeType": "ExpressionStatement",
                  "src": "4922:52:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45703,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "5017:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "id": 45704,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "5035:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5053:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5059:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5065:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "5059:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5053:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5070:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "5053:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5088:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5094:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5100:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "5094:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5088:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5105:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "5088:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        "id": 45725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          },
                          "id": 45723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "373030",
                            "id": 45719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5123:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_700_by_1",
                              "typeString": "int_const 700"
                            },
                            "value": "700"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5129:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5135:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "5129:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5123:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_700000000000000000000_by_1",
                            "typeString": "int_const 700000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5140:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "5123:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45728,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5166:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5158:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45726,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5158:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5158:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45730,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5185:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5191:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5185:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5203:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "5185:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_rational_699999999999999999000_by_1",
                          "typeString": "int_const 699999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45700,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "4984:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4988:15:80",
                      "memberName": "redeemLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40617,
                      "src": "4984:19:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4984:231:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45735,
                  "nodeType": "ExpressionStatement",
                  "src": "4984:231:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45741,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5271:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5263:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5263:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5263:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45737,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45133,
                            "src": "5248:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 45738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5253:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "5248:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5248:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999999000_by_1",
                          "typeString": "int_const 999999999999999999000"
                        },
                        "id": 45750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 45748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 45744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5371:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5378:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5384:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "5378:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5371:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5389:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "5371:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999999000_by_1",
                          "typeString": "int_const 999999999999999999000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320665553442061667465722072656465656d696e67206c6971756964697479",
                        "id": 45751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5407:55:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0751d4bb99b179c8a02365e00aa8b17221ac1166cb815751cab9f33dfb4a5b88",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after redeeming liquidity\""
                        },
                        "value": "Wrong amount of user's fUSD after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999999000_by_1",
                          "typeString": "int_const 999999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0751d4bb99b179c8a02365e00aa8b17221ac1166cb815751cab9f33dfb4a5b88",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after redeeming liquidity\""
                        }
                      ],
                      "id": 45736,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5226:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5226:246:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45753,
                  "nodeType": "ExpressionStatement",
                  "src": "5226:246:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45759,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5527:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5519:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45757,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5519:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5519:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45755,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45130,
                            "src": "5504:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 45756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5509:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "5504:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5504:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999999000_by_1",
                          "typeString": "int_const 999999999999999999000"
                        },
                        "id": 45768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 45766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 45762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5627:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 45765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 45763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5634:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 45764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5640:2:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "5634:8:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "5627:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5645:4:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "5627:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999999000_by_1",
                          "typeString": "int_const 999999999999999999000"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320664254432061667465722072656465656d696e67206c6971756964697479",
                        "id": 45769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5663:55:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_282f82f56ca05c2c55577df0d79a9dc748089633ffb85dbd583391dce5e5f2ad",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after redeeming liquidity\""
                        },
                        "value": "Wrong amount of user's fBTC after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999999000_by_1",
                          "typeString": "int_const 999999999999999999000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_282f82f56ca05c2c55577df0d79a9dc748089633ffb85dbd583391dce5e5f2ad",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after redeeming liquidity\""
                        }
                      ],
                      "id": 45754,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5482:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5482:246:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45771,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:246:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45777,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5773:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5765:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45775,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5765:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5765:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45773,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "5747:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 45774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5755:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "5747:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5747:32:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5781:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773204c5020746f6b656e732061667465722072656465656d696e67206c6971756964697479",
                        "id": 45781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5784:60:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c46169ae107203b28e697d27c2c4768af8db7d0e8e7dcac720f9f6ac1a0278",
                          "typeString": "literal_string \"Wrong amount of user's LP tokens after redeeming liquidity\""
                        },
                        "value": "Wrong amount of user's LP tokens after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c46169ae107203b28e697d27c2c4768af8db7d0e8e7dcac720f9f6ac1a0278",
                          "typeString": "literal_string \"Wrong amount of user's LP tokens after redeeming liquidity\""
                        }
                      ],
                      "id": 45772,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5738:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5738:107:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45783,
                  "nodeType": "ExpressionStatement",
                  "src": "5738:107:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45787,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45147,
                            "src": "5882:16:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45785,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "5864:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 45786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5872:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "5864:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5864:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5901:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662044414f2773204c5020746f6b656e732061667465722072656465656d696e67206c6971756964697479",
                        "id": 45790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5904:59:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5b4d8bdb5f62cd0662311744f3b4eeddab733fef1961344c40de292c3efcf98",
                          "typeString": "literal_string \"Wrong amount of DAO's LP tokens after redeeming liquidity\""
                        },
                        "value": "Wrong amount of DAO's LP tokens after redeeming liquidity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5b4d8bdb5f62cd0662311744f3b4eeddab733fef1961344c40de292c3efcf98",
                          "typeString": "literal_string \"Wrong amount of DAO's LP tokens after redeeming liquidity\""
                        }
                      ],
                      "id": 45784,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "5855:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:109:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45792,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:109:80"
                }
              ]
            },
            "functionSelector": "f9c6b568",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRedeemLiquidity",
            "nameLocation": "4583:19:80",
            "parameters": {
              "id": 45640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:2:80"
            },
            "returnParameters": {
              "id": 45641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4612:0:80"
            },
            "scope": 46051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45925,
            "nodeType": "FunctionDefinition",
            "src": "5977:1020:80",
            "nodes": [],
            "body": {
              "id": 45924,
              "nodeType": "Block",
              "src": "6003:994:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45798,
                      "mutability": "mutable",
                      "name": "bal_lptokens",
                      "nameLocation": "6021:12:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45924,
                      "src": "6013:20:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45797,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6013:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45806,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45803,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6062:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6054:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6054:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6054:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45799,
                        "name": "lptoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45145,
                        "src": "6036:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$44213",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "id": 45800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6044:9:80",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32819,
                      "src": "6036:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 45805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6036:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6013:55:80"
                },
                {
                  "assignments": [
                    45808,
                    45810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45808,
                      "mutability": "mutable",
                      "name": "bid",
                      "nameLocation": "6088:3:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45924,
                      "src": "6080:11:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6080:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45810,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "6101:3:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 45924,
                      "src": "6093:11:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45809,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6093:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45816,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45813,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "6122:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 45814,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "6128:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      ],
                      "expression": {
                        "id": 45811,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "6108:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6112:9:80",
                      "memberName": "getBidAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40195,
                      "src": "6108:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 45815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6108:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6079:54:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "id": 45820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6212:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        },
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        }
                      ],
                      "expression": {
                        "id": 45817,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "6196:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6199:12:80",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10372,
                      "src": "6196:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6196:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45822,
                  "nodeType": "ExpressionStatement",
                  "src": "6196:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45826,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "6262:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 45827,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "6268:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6274:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45829,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45810,
                          "src": "6277:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "323030",
                          "id": 45830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6283:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200_by_1",
                            "typeString": "int_const 200"
                          },
                          "value": "200"
                        },
                        "src": "6277:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45834,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6296:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6288:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45832,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6288:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6288:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45836,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6303:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6309:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6303:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6321:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "6303:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45823,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "6254:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6258:3:80",
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40854,
                      "src": "6254:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6254:70:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45841,
                  "nodeType": "ExpressionStatement",
                  "src": "6254:70:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45847,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "6356:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6348:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45845,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6348:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6348:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 45853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 45849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6362:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6368:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6374:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "6368:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "6362:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45842,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "6335:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      "id": 45844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6340:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "6335:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6335:42:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45855,
                  "nodeType": "ExpressionStatement",
                  "src": "6335:42:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45859,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "6395:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 45860,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "6401:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "id": 45865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 45861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6407:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6412:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6418:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "6412:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "6407:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45866,
                          "name": "ask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45810,
                          "src": "6422:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 45867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6428:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6422:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45871,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6439:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6431:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45869,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6431:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6431:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45873,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6446:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6452:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6446:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6464:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "6446:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45856,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "6387:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6391:3:80",
                      "memberName": "buy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40854,
                      "src": "6387:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:80:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45878,
                  "nodeType": "ExpressionStatement",
                  "src": "6387:80:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45884,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6510:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6502:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45882,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6502:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6502:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45880,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45133,
                            "src": "6487:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 45881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6492:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "6487:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6487:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323839383032353134393939393939393939393938",
                        "id": 45887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6518:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_289802514999999999998_by_1",
                          "typeString": "int_const 289802514999999999998"
                        },
                        "value": "289802514999999999998"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773206655534420616674657220627579696e67",
                        "id": 45888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6541:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_060c87c65c835a6c95a9e0260619d97b1fc5d2f29a1fd6639cfe14db3e44d16e",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after buying\""
                        },
                        "value": "Wrong amount of user's fUSD after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_289802514999999999998_by_1",
                          "typeString": "int_const 289802514999999999998"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_060c87c65c835a6c95a9e0260619d97b1fc5d2f29a1fd6639cfe14db3e44d16e",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after buying\""
                        }
                      ],
                      "id": 45879,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6478:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6478:106:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45890,
                  "nodeType": "ExpressionStatement",
                  "src": "6478:106:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45896,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6626:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6618:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45894,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6618:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6618:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45892,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45130,
                            "src": "6603:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 45893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6608:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "6603:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6603:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333130303030303030303030303030303030303030",
                        "id": 45899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6634:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_310000000000000000000_by_1",
                          "typeString": "int_const 310000000000000000000"
                        },
                        "value": "310000000000000000000"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f6620757365722773206642544320616674657220627579696e67",
                        "id": 45900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6657:42:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70bec4c8b8a5e8fd1d7f8b0a0a983d2b0483ccb0a4d45a483e03e9187ee6231f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after buying\""
                        },
                        "value": "Wrong amount of user's fBTC after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_310000000000000000000_by_1",
                          "typeString": "int_const 310000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70bec4c8b8a5e8fd1d7f8b0a0a983d2b0483ccb0a4d45a483e03e9187ee6231f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after buying\""
                        }
                      ],
                      "id": 45891,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6594:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:106:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45902,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:106:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 45908,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6759:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 45907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6751:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45906,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6751:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 45909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6751:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45904,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "6733:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 45905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6741:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "6733:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6733:32:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45911,
                        "name": "bal_lptokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45798,
                        "src": "6779:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206f6620757365722773204c5020546f6b656e73206368616e67656420647572696e6720627579696e67",
                        "id": 45912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6805:54:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88fd926c67a8b84800471a44adfa90e20a5222ebe628bf04bfc6da2e1f4cb566",
                          "typeString": "literal_string \"The amount of user's LP Tokens changed during buying\""
                        },
                        "value": "The amount of user's LP Tokens changed during buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88fd926c67a8b84800471a44adfa90e20a5222ebe628bf04bfc6da2e1f4cb566",
                          "typeString": "literal_string \"The amount of user's LP Tokens changed during buying\""
                        }
                      ],
                      "id": 45903,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6711:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6711:158:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45914,
                  "nodeType": "ExpressionStatement",
                  "src": "6711:158:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45918,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45147,
                            "src": "6906:16:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45916,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "6888:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 45917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6896:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "6888:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6888:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32353930323236373037393330303334",
                        "id": 45920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6925:16:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2590226707930034_by_1",
                          "typeString": "int_const 2590226707930034"
                        },
                        "value": "2590226707930034"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e7320616674657220627579696e67",
                        "id": 45921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6943:46:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_964d7bd09fc0b9efe70edb2b2b928cb8ffd758fe7a6e3430f745af02fd93812c",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after buying\""
                        },
                        "value": "Wrong amount of DAO's LP Tokens after buying"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2590226707930034_by_1",
                          "typeString": "int_const 2590226707930034"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_964d7bd09fc0b9efe70edb2b2b928cb8ffd758fe7a6e3430f745af02fd93812c",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after buying\""
                        }
                      ],
                      "id": 45915,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "6879:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 45922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6879:111:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45923,
                  "nodeType": "ExpressionStatement",
                  "src": "6879:111:80"
                }
              ]
            },
            "functionSelector": "0b586cc8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuy",
            "nameLocation": "5986:7:80",
            "parameters": {
              "id": 45795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5993:2:80"
            },
            "returnParameters": {
              "id": 45796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6003:0:80"
            },
            "scope": 46051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46050,
            "nodeType": "FunctionDefinition",
            "src": "7003:1014:80",
            "nodes": [],
            "body": {
              "id": 46049,
              "nodeType": "Block",
              "src": "7030:987:80",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45929,
                      "mutability": "mutable",
                      "name": "bal_lptokens",
                      "nameLocation": "7048:12:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 46049,
                      "src": "7040:20:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45928,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7040:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45937,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45934,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7089:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7081:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45932,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7081:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7081:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45930,
                        "name": "lptoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45145,
                        "src": "7063:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$44213",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "id": 45931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7071:9:80",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32819,
                      "src": "7063:17:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 45936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7063:32:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7040:55:80"
                },
                {
                  "assignments": [
                    45939,
                    45941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45939,
                      "mutability": "mutable",
                      "name": "bid",
                      "nameLocation": "7115:3:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 46049,
                      "src": "7107:11:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45938,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7107:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 45941,
                      "mutability": "mutable",
                      "name": "ask",
                      "nameLocation": "7128:3:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 46049,
                      "src": "7120:11:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7120:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45947,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45944,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "7149:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 45945,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "7155:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      ],
                      "expression": {
                        "id": 45942,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "7135:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7139:9:80",
                      "memberName": "getBidAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40195,
                      "src": "7135:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 45946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7135:25:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7106:54:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "id": 45951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7239:31:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        },
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                          "typeString": "literal_string \"ERC20: insufficient allowance\""
                        }
                      ],
                      "expression": {
                        "id": 45948,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2267,
                        "src": "7223:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10608",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7226:12:80",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10372,
                      "src": "7223:15:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7223:48:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45953,
                  "nodeType": "ExpressionStatement",
                  "src": "7223:48:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45957,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "7290:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 45958,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "7296:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7302:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 45960,
                        "name": "bid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45939,
                        "src": "7305:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45963,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7318:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7310:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45961,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7310:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7310:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45965,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7325:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7331:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7325:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 45967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7343:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "7325:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45954,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "7281:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7285:4:80",
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41037,
                      "src": "7281:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 45969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7281:65:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45970,
                  "nodeType": "ExpressionStatement",
                  "src": "7281:65:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45976,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45142,
                            "src": "7378:3:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$41038",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 45975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7370:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45974,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7370:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7370:12:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "id": 45982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 45978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7384:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 45981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 45979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7390:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 45980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7396:2:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7390:8:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7384:14:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 45971,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "7357:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      "id": 45973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7362:7:80",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32364,
                      "src": "7357:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:42:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45984,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:42:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45988,
                        "name": "fBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45130,
                        "src": "7418:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        }
                      },
                      {
                        "id": 45989,
                        "name": "fUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45133,
                        "src": "7424:4:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 45990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7430:1:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 45991,
                          "name": "PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44426,
                          "src": "7434:9:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7430:13:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 45993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:1:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 45996,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7456:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEXTest_$46051",
                              "typeString": "contract DEXTest"
                            }
                          ],
                          "id": 45995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7448:7:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7448:7:80",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7448:13:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45998,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7463:5:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 45999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7469:9:80",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7463:15:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 46000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7481:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "7463:20:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FakeBTC_$44550",
                          "typeString": "contract FakeBTC"
                        },
                        {
                          "typeIdentifier": "t_contract$_FakeUSD_$44589",
                          "typeString": "contract FakeUSD"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45985,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45142,
                        "src": "7409:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$41038",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 45987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7413:4:80",
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41037,
                      "src": "7409:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$32862_$_t_contract$_IERC20_$32862_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,address,uint256) external"
                      }
                    },
                    "id": 46002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7409:75:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46003,
                  "nodeType": "ExpressionStatement",
                  "src": "7409:75:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46009,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7527:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 46008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7519:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46007,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7519:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7519:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46005,
                            "name": "fUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45133,
                            "src": "7504:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeUSD_$44589",
                              "typeString": "contract FakeUSD"
                            }
                          },
                          "id": 46006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7509:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "7504:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7504:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "333030393930303939303039393030393930303939",
                        "id": 46012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7535:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300990099009900990099_by_1",
                          "typeString": "int_const 300990099009900990099"
                        },
                        "value": "300990099009900990099"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320665553442061667465722073656c6c696e67",
                        "id": 46013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7558:43:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76029cf0a7c1192871532329050a63f9186fe5e4c6c69e7500fc37df7b3e2742",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after selling\""
                        },
                        "value": "Wrong amount of user's fUSD after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_300990099009900990099_by_1",
                          "typeString": "int_const 300990099009900990099"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76029cf0a7c1192871532329050a63f9186fe5e4c6c69e7500fc37df7b3e2742",
                          "typeString": "literal_string \"Wrong amount of user's fUSD after selling\""
                        }
                      ],
                      "id": 46004,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "7495:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7495:107:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46015,
                  "nodeType": "ExpressionStatement",
                  "src": "7495:107:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46021,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7644:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 46020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7636:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46019,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7636:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7636:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46017,
                            "name": "fBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45130,
                            "src": "7621:4:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FakeBTC_$44550",
                              "typeString": "contract FakeBTC"
                            }
                          },
                          "id": 46018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7626:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32296,
                          "src": "7621:14:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7621:29:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323939303030303030303030303030303030303030",
                        "id": 46024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7652:21:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_299000000000000000000_by_1",
                          "typeString": "int_const 299000000000000000000"
                        },
                        "value": "299000000000000000000"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662075736572277320664254432061667465722073656c6c696e67",
                        "id": 46025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7675:43:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2b34fabcbf50aaff7cfc8b94836b479cfc1715aa159672de65a201e7db6eb0f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after selling\""
                        },
                        "value": "Wrong amount of user's fBTC after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_299000000000000000000_by_1",
                          "typeString": "int_const 299000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2b34fabcbf50aaff7cfc8b94836b479cfc1715aa159672de65a201e7db6eb0f",
                          "typeString": "literal_string \"Wrong amount of user's fBTC after selling\""
                        }
                      ],
                      "id": 46016,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "7612:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7612:107:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46027,
                  "nodeType": "ExpressionStatement",
                  "src": "7612:107:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46033,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7778:4:80",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DEXTest_$46051",
                                  "typeString": "contract DEXTest"
                                }
                              ],
                              "id": 46032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7770:7:80",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46031,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7770:7:80",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7770:13:80",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46029,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "7752:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7760:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "7752:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7752:32:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46036,
                        "name": "bal_lptokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45929,
                        "src": "7798:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e74206f6620757365722773204c5020546f6b656e73206368616e67656420647572696e672073656c6c696e67",
                        "id": 46037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7824:55:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5b714b14547e2ddaf38cf8328aa80913998b0df72dab88244b1388e9a8bb74",
                          "typeString": "literal_string \"The amount of user's LP Tokens changed during selling\""
                        },
                        "value": "The amount of user's LP Tokens changed during selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee5b714b14547e2ddaf38cf8328aa80913998b0df72dab88244b1388e9a8bb74",
                          "typeString": "literal_string \"The amount of user's LP Tokens changed during selling\""
                        }
                      ],
                      "id": 46028,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "7730:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7730:159:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46039,
                  "nodeType": "ExpressionStatement",
                  "src": "7730:159:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46043,
                            "name": "protocol_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45147,
                            "src": "7926:16:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46041,
                            "name": "lptoken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45145,
                            "src": "7908:7:80",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILPToken_$44213",
                              "typeString": "contract ILPToken"
                            }
                          },
                          "id": 46042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7916:9:80",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32819,
                          "src": "7908:17:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 46044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7908:35:80",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "343234333234353436303437333534",
                        "id": 46045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7945:15:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_424324546047354_by_1",
                          "typeString": "int_const 424324546047354"
                        },
                        "value": "424324546047354"
                      },
                      {
                        "hexValue": "57726f6e6720616d6f756e74206f662044414f2773204c5020546f6b656e732061667465722073656c6c696e67",
                        "id": 46046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7962:47:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5e9b702d6b3494a5bdfe4c6f23d9a7d0e10edc01220c3b92b60199098f44ea5",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after selling\""
                        },
                        "value": "Wrong amount of DAO's LP Tokens after selling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_424324546047354_by_1",
                          "typeString": "int_const 424324546047354"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5e9b702d6b3494a5bdfe4c6f23d9a7d0e10edc01220c3b92b60199098f44ea5",
                          "typeString": "literal_string \"Wrong amount of DAO's LP Tokens after selling\""
                        }
                      ],
                      "id": 46040,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2442,
                        2467,
                        2480,
                        2496,
                        2538,
                        2580,
                        2622,
                        2659,
                        2696,
                        2733,
                        748,
                        773,
                        803,
                        828,
                        887,
                        912,
                        942,
                        967,
                        2067,
                        2102
                      ],
                      "referencedDeclaration": 967,
                      "src": "7899:8:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 46047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7899:111:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46048,
                  "nodeType": "ExpressionStatement",
                  "src": "7899:111:80"
                }
              ]
            },
            "functionSelector": "31c42ca6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSell",
            "nameLocation": "7012:8:80",
            "parameters": {
              "id": 45926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7020:2:80"
            },
            "returnParameters": {
              "id": 45927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7030:0:80"
            },
            "scope": 46051,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45126,
              "name": "Test",
              "nameLocations": [
                "623:4:80"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9318,
              "src": "623:4:80"
            },
            "id": 45127,
            "nodeType": "InheritanceSpecifier",
            "src": "623:4:80"
          }
        ],
        "canonicalName": "DEXTest",
        "contractDependencies": [
          40046,
          41038,
          43047,
          43398,
          44550,
          44589,
          45125
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46051,
          9318,
          2274,
          2271,
          9276,
          6182,
          5793,
          4221,
          3557,
          2214
        ],
        "name": "DEXTest",
        "nameLocation": "612:7:80",
        "scope": 46052,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 80
}