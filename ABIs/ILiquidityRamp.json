{
  "abi": [
    {
      "inputs": [],
      "name": "LiquidityRamp__AmountIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__AmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__MinLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "thisToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "thatToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thisOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thatOut",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRedeemed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        }
      ],
      "name": "createLpToken",
      "outputs": [
        {
          "internalType": "contract ILPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILPToken",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountLpTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "redeemLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "thisOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "thatOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityManager",
          "name": "_liquidityManager",
          "type": "address"
        }
      ],
      "name": "setLiquidityManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "_poolManager",
          "type": "address"
        }
      ],
      "name": "setPoolManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISwapManager",
          "name": "_swapManager",
          "type": "address"
        }
      ],
      "name": "setSwapManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addLiquidity(address,address,uint256,uint256,address)": "4b2fc7bb",
    "createLpToken(address,address)": "09ee07c4",
    "redeemLiquidity(address,uint256,address)": "e5f415c9",
    "setLiquidityManager(address)": "3c1624d4",
    "setPoolManager(address)": "7aef6715",
    "setSwapManager(address)": "30284efc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LiquidityRamp__AmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__AmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__MinLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"thisToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"thatToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thisOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thatOut\",\"type\":\"uint256\"}],\"name\":\"LiquidityRedeemed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"}],\"name\":\"createLpToken\",\"outputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLpTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"redeemLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"thisOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thatOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityManager\",\"name\":\"_liquidityManager\",\"type\":\"address\"}],\"name\":\"setLiquidityManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"name\":\"setPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISwapManager\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"setSwapManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementations should adhere to the interface specifications for compatibility with upper-layer protocols.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,address)\":{\"details\":\"Prior to calling this function, users should approve the tokens for this contract.\",\"params\":{\"amountA\":\"The amount of tokenA to add to the pool.\",\"amountB\":\"The amount of tokenB to add to the pool.\",\"provider\":\"The address that will receive the minted LP tokens.\",\"tokenA\":\"The first token in the pool pair.\",\"tokenB\":\"The second token in the pool pair.\"}},\"createLpToken(address,address)\":{\"details\":\"This function can typically be called by any user, unless the implementation restricts it.\",\"params\":{\"_thatToken\":\"The second token in the new pool pair.\",\"_thisToken\":\"The first token in the new pool pair.\"},\"returns\":{\"_0\":\"The new LP token for the created pool.\"}},\"redeemLiquidity(address,uint256,address)\":{\"details\":\"This function can typically be called by any LP token holder.\",\"params\":{\"amountLpTokens\":\"The amount of LP tokens to redeem.\",\"lpToken\":\"The LP token to be redeemed.\",\"recipient\":\"The address to receive the redeemed assets.\"},\"returns\":{\"thatOut\":\"The amount of the second token that will be received.\",\"thisOut\":\"The amount of the first token that will be received.\"}},\"setLiquidityManager(address)\":{\"details\":\"This function can typically be called only by the contract owner or an authorized address.\",\"params\":{\"_liquidityManager\":\"The address of the liquidity manager contract.\"}},\"setPoolManager(address)\":{\"details\":\"This function can typically be called only by the contract owner or an authorized address.\",\"params\":{\"_poolManager\":\"The address of the pool manager contract.\"}},\"setSwapManager(address)\":{\"details\":\"This function can typically be called only by the contract owner or an authorized address.\",\"params\":{\"_swapManager\":\"The address of the swap manager contract.\"}}},\"title\":\"ILiquidityRamp\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,address)\":{\"notice\":\"Allows users to add liquidity to a given pool.\"},\"createLpToken(address,address)\":{\"notice\":\"Creates a new LP token for the given token pair.\"},\"redeemLiquidity(address,uint256,address)\":{\"notice\":\"Redeems LP tokens for underlying assets.\"},\"setLiquidityManager(address)\":{\"notice\":\"Sets the liquidity manager contract address.\"},\"setPoolManager(address)\":{\"notice\":\"Sets the pool manager contract address.\"},\"setSwapManager(address)\":{\"notice\":\"Sets the swap manager contract address.\"}},\"notice\":\"This interface defines the methods required for managing liquidity in decentralized pools.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ILiquidityRamp.sol\":\"ILiquidityRamp\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db\",\"dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811\",\"dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda\",\"dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd\",\"dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7\",\"dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45\",\"dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935\",\"dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc\",\"dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f\",\"dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07\",\"dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__AmountIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__AmountTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__MinLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__PoolDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "thisToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "thatToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "thisOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "thatOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityRedeemed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLpToken",
          "outputs": [
            {
              "internalType": "contract ILPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILPToken",
              "name": "lpToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountLpTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "thisOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "thatOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityManager",
              "name": "_liquidityManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "_poolManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISwapManager",
              "name": "_swapManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapManager"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLiquidity(address,address,uint256,uint256,address)": {
            "details": "Prior to calling this function, users should approve the tokens for this contract.",
            "params": {
              "amountA": "The amount of tokenA to add to the pool.",
              "amountB": "The amount of tokenB to add to the pool.",
              "provider": "The address that will receive the minted LP tokens.",
              "tokenA": "The first token in the pool pair.",
              "tokenB": "The second token in the pool pair."
            }
          },
          "createLpToken(address,address)": {
            "details": "This function can typically be called by any user, unless the implementation restricts it.",
            "params": {
              "_thatToken": "The second token in the new pool pair.",
              "_thisToken": "The first token in the new pool pair."
            },
            "returns": {
              "_0": "The new LP token for the created pool."
            }
          },
          "redeemLiquidity(address,uint256,address)": {
            "details": "This function can typically be called by any LP token holder.",
            "params": {
              "amountLpTokens": "The amount of LP tokens to redeem.",
              "lpToken": "The LP token to be redeemed.",
              "recipient": "The address to receive the redeemed assets."
            },
            "returns": {
              "thatOut": "The amount of the second token that will be received.",
              "thisOut": "The amount of the first token that will be received."
            }
          },
          "setLiquidityManager(address)": {
            "details": "This function can typically be called only by the contract owner or an authorized address.",
            "params": {
              "_liquidityManager": "The address of the liquidity manager contract."
            }
          },
          "setPoolManager(address)": {
            "details": "This function can typically be called only by the contract owner or an authorized address.",
            "params": {
              "_poolManager": "The address of the pool manager contract."
            }
          },
          "setSwapManager(address)": {
            "details": "This function can typically be called only by the contract owner or an authorized address.",
            "params": {
              "_swapManager": "The address of the swap manager contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addLiquidity(address,address,uint256,uint256,address)": {
            "notice": "Allows users to add liquidity to a given pool."
          },
          "createLpToken(address,address)": {
            "notice": "Creates a new LP token for the given token pair."
          },
          "redeemLiquidity(address,uint256,address)": {
            "notice": "Redeems LP tokens for underlying assets."
          },
          "setLiquidityManager(address)": {
            "notice": "Sets the liquidity manager contract address."
          },
          "setPoolManager(address)": {
            "notice": "Sets the pool manager contract address."
          },
          "setSwapManager(address)": {
            "notice": "Sets the swap manager contract address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/ILiquidityRamp.sol": "ILiquidityRamp"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193",
        "urls": [
          "bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db",
          "dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821",
        "urls": [
          "bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811",
          "dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f",
        "urls": [
          "bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3",
          "dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59",
        "urls": [
          "bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda",
          "dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e",
        "urls": [
          "bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5",
          "dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae",
        "urls": [
          "bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd",
          "dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552",
        "urls": [
          "bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7",
          "dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def",
        "urls": [
          "bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45",
          "dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af",
        "urls": [
          "bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935",
          "dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065",
        "urls": [
          "bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc",
          "dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4",
        "urls": [
          "bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f",
          "dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74",
        "urls": [
          "bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07",
          "dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/ILiquidityRamp.sol",
    "id": 62722,
    "exportedSymbols": {
      "IERC20": [
        48295
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityManager": [
        62605
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "ISwapManager": [
        62911
      ],
      "IVotes": [
        47472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4044:85",
    "nodes": [
      {
        "id": 62607,
        "nodeType": "PragmaDirective",
        "src": "37:24:85",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 62608,
        "nodeType": "ImportDirective",
        "src": "65:45:85",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityManager.sol",
        "file": "../interfaces/ILiquidityManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62606,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62609,
        "nodeType": "ImportDirective",
        "src": "112:40:85",
        "nodes": [],
        "absolutePath": "src/interfaces/IPoolManager.sol",
        "file": "../interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62792,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62610,
        "nodeType": "ImportDirective",
        "src": "154:40:85",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapManager.sol",
        "file": "../interfaces/ISwapManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62611,
        "nodeType": "ImportDirective",
        "src": "196:36:85",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPToken.sol",
        "file": "../interfaces/ILPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62485,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62612,
        "nodeType": "ImportDirective",
        "src": "234:56:85",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 48296,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62721,
        "nodeType": "ContractDefinition",
        "src": "550:3529:85",
        "nodes": [
          {
            "id": 62615,
            "nodeType": "ErrorDefinition",
            "src": "604:36:85",
            "nodes": [],
            "errorSelector": "45377918",
            "name": "LiquidityRamp__Unauthorized",
            "nameLocation": "610:27:85",
            "parameters": {
              "id": 62614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:85"
            }
          },
          {
            "id": 62617,
            "nodeType": "ErrorDefinition",
            "src": "646:36:85",
            "nodes": [],
            "errorSelector": "cff7acc5",
            "name": "LiquidityRamp__MinLiquidity",
            "nameLocation": "652:27:85",
            "parameters": {
              "id": 62616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:2:85"
            }
          },
          {
            "id": 62619,
            "nodeType": "ErrorDefinition",
            "src": "688:36:85",
            "nodes": [],
            "errorSelector": "6747d90c",
            "name": "LiquidityRamp__AmountIsZero",
            "nameLocation": "694:27:85",
            "parameters": {
              "id": 62618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:2:85"
            }
          },
          {
            "id": 62621,
            "nodeType": "ErrorDefinition",
            "src": "730:37:85",
            "nodes": [],
            "errorSelector": "a1486abe",
            "name": "LiquidityRamp__AmountTooHigh",
            "nameLocation": "736:28:85",
            "parameters": {
              "id": 62620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:85"
            }
          },
          {
            "id": 62623,
            "nodeType": "ErrorDefinition",
            "src": "773:40:85",
            "nodes": [],
            "errorSelector": "03fd3b05",
            "name": "LiquidityRamp__PoolDoesNotExist",
            "nameLocation": "779:31:85",
            "parameters": {
              "id": 62622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "810:2:85"
            }
          },
          {
            "id": 62639,
            "nodeType": "EventDefinition",
            "src": "836:197:85",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "50dec338711d35a3c4031888b5588efcddc7258d887b4087496cc6beaa97fd27",
            "name": "LiquidityAdded",
            "nameLocation": "842:14:85",
            "parameters": {
              "id": 62638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62625,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "883:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "867:23:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62627,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "917:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "901:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62630,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "943:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "936:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62628,
                      "name": "IERC20",
                      "nameLocations": [
                        "936:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "936:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "936:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "967:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "960:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62632,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62631,
                      "name": "IERC20",
                      "nameLocations": [
                        "960:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "960:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "960:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62635,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "992:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "984:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62637,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "1018:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "1010:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:176:85"
            }
          },
          {
            "id": 62655,
            "nodeType": "EventDefinition",
            "src": "1041:206:85",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1b849ae1f9bad1660570e51a3f0528fb6a14d22b574ac4239eb907acde88df4b",
            "name": "LiquidityRedeemed",
            "nameLocation": "1047:17:85",
            "parameters": {
              "id": 62654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62641,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1091:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1075:23:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1125:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1109:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62646,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thisToken",
                  "nameLocation": "1151:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1144:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62645,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62644,
                      "name": "IERC20",
                      "nameLocations": [
                        "1144:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1144:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1144:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62649,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thatToken",
                  "nameLocation": "1178:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1171:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62648,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62647,
                      "name": "IERC20",
                      "nameLocations": [
                        "1171:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1171:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1171:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62651,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thisOut",
                  "nameLocation": "1206:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1198:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thatOut",
                  "nameLocation": "1232:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1224:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1064:182:85"
            }
          },
          {
            "id": 62662,
            "nodeType": "FunctionDefinition",
            "src": "1538:75:85",
            "nodes": [],
            "documentation": {
              "id": 62656,
              "nodeType": "StructuredDocumentation",
              "src": "1275:257:85",
              "text": " @notice Sets the liquidity manager contract address.\n @param _liquidityManager The address of the liquidity manager contract.\n @dev This function can typically be called only by the contract owner or an authorized address."
            },
            "functionSelector": "3c1624d4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidityManager",
            "nameLocation": "1547:19:85",
            "parameters": {
              "id": 62660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62659,
                  "mutability": "mutable",
                  "name": "_liquidityManager",
                  "nameLocation": "1585:17:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62662,
                  "src": "1567:35:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityManager_$62605",
                    "typeString": "contract ILiquidityManager"
                  },
                  "typeName": {
                    "id": 62658,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62657,
                      "name": "ILiquidityManager",
                      "nameLocations": [
                        "1567:17:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62605,
                      "src": "1567:17:85"
                    },
                    "referencedDeclaration": 62605,
                    "src": "1567:17:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityManager_$62605",
                      "typeString": "contract ILiquidityManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1566:37:85"
            },
            "returnParameters": {
              "id": 62661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62669,
            "nodeType": "FunctionDefinition",
            "src": "1869:60:85",
            "nodes": [],
            "documentation": {
              "id": 62663,
              "nodeType": "StructuredDocumentation",
              "src": "1621:242:85",
              "text": " @notice Sets the pool manager contract address.\n @param _poolManager The address of the pool manager contract.\n @dev This function can typically be called only by the contract owner or an authorized address."
            },
            "functionSelector": "7aef6715",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPoolManager",
            "nameLocation": "1878:14:85",
            "parameters": {
              "id": 62667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62666,
                  "mutability": "mutable",
                  "name": "_poolManager",
                  "nameLocation": "1906:12:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62669,
                  "src": "1893:25:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$62791",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 62665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62664,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "1893:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62791,
                      "src": "1893:12:85"
                    },
                    "referencedDeclaration": 62791,
                    "src": "1893:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$62791",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:27:85"
            },
            "returnParameters": {
              "id": 62668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1928:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62676,
            "nodeType": "FunctionDefinition",
            "src": "2185:60:85",
            "nodes": [],
            "documentation": {
              "id": 62670,
              "nodeType": "StructuredDocumentation",
              "src": "1937:242:85",
              "text": " @notice Sets the swap manager contract address.\n @param _swapManager The address of the swap manager contract.\n @dev This function can typically be called only by the contract owner or an authorized address."
            },
            "functionSelector": "30284efc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapManager",
            "nameLocation": "2194:14:85",
            "parameters": {
              "id": 62674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62673,
                  "mutability": "mutable",
                  "name": "_swapManager",
                  "nameLocation": "2222:12:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62676,
                  "src": "2209:25:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapManager_$62911",
                    "typeString": "contract ISwapManager"
                  },
                  "typeName": {
                    "id": 62672,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62671,
                      "name": "ISwapManager",
                      "nameLocations": [
                        "2209:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62911,
                      "src": "2209:12:85"
                    },
                    "referencedDeclaration": 62911,
                    "src": "2209:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapManager_$62911",
                      "typeString": "contract ISwapManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2208:27:85"
            },
            "returnParameters": {
              "id": 62675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2244:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62689,
            "nodeType": "FunctionDefinition",
            "src": "2624:114:85",
            "nodes": [],
            "documentation": {
              "id": 62677,
              "nodeType": "StructuredDocumentation",
              "src": "2253:365:85",
              "text": " @notice Creates a new LP token for the given token pair.\n @param _thisToken The first token in the new pool pair.\n @param _thatToken The second token in the new pool pair.\n @return The new LP token for the created pool.\n @dev This function can typically be called by any user, unless the implementation restricts it."
            },
            "functionSelector": "09ee07c4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createLpToken",
            "nameLocation": "2633:13:85",
            "parameters": {
              "id": 62684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62680,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "2664:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62689,
                  "src": "2657:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62679,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62678,
                      "name": "IERC20",
                      "nameLocations": [
                        "2657:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2657:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2657:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62683,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "2692:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62689,
                  "src": "2685:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62681,
                      "name": "IERC20",
                      "nameLocations": [
                        "2685:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2685:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2685:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2646:63:85"
            },
            "returnParameters": {
              "id": 62688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62689,
                  "src": "2728:8:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILPToken_$62484",
                    "typeString": "contract ILPToken"
                  },
                  "typeName": {
                    "id": 62686,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62685,
                      "name": "ILPToken",
                      "nameLocations": [
                        "2728:8:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62484,
                      "src": "2728:8:85"
                    },
                    "referencedDeclaration": 62484,
                    "src": "2728:8:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:10:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62705,
            "nodeType": "FunctionDefinition",
            "src": "3240:165:85",
            "nodes": [],
            "documentation": {
              "id": 62690,
              "nodeType": "StructuredDocumentation",
              "src": "2746:488:85",
              "text": " @notice Allows users to add liquidity to a given pool.\n @param tokenA The first token in the pool pair.\n @param tokenB The second token in the pool pair.\n @param amountA The amount of tokenA to add to the pool.\n @param amountB The amount of tokenB to add to the pool.\n @param provider The address that will receive the minted LP tokens.\n @dev Prior to calling this function, users should approve the tokens for this contract."
            },
            "functionSelector": "4b2fc7bb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "3249:12:85",
            "parameters": {
              "id": 62703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62693,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3279:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3272:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62692,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62691,
                      "name": "IERC20",
                      "nameLocations": [
                        "3272:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3272:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3272:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62696,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3303:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3296:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62695,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62694,
                      "name": "IERC20",
                      "nameLocations": [
                        "3296:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3296:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3296:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62698,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "3328:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3320:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62700,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "3354:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3346:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3346:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62702,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "3380:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3372:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3372:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3261:134:85"
            },
            "returnParameters": {
              "id": 62704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3404:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62720,
            "nodeType": "FunctionDefinition",
            "src": "3904:172:85",
            "nodes": [],
            "documentation": {
              "id": 62706,
              "nodeType": "StructuredDocumentation",
              "src": "3413:485:85",
              "text": " @notice Redeems LP tokens for underlying assets.\n @param lpToken The LP token to be redeemed.\n @param amountLpTokens The amount of LP tokens to redeem.\n @param recipient The address to receive the redeemed assets.\n @return thisOut The amount of the first token that will be received.\n @return thatOut The amount of the second token that will be received.\n @dev This function can typically be called by any LP token holder."
            },
            "functionSelector": "e5f415c9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemLiquidity",
            "nameLocation": "3913:15:85",
            "parameters": {
              "id": 62714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62709,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nameLocation": "3948:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3939:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILPToken_$62484",
                    "typeString": "contract ILPToken"
                  },
                  "typeName": {
                    "id": 62708,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62707,
                      "name": "ILPToken",
                      "nameLocations": [
                        "3939:8:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62484,
                      "src": "3939:8:85"
                    },
                    "referencedDeclaration": 62484,
                    "src": "3939:8:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62711,
                  "mutability": "mutable",
                  "name": "amountLpTokens",
                  "nameLocation": "3974:14:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3966:22:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3966:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62713,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4007:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3999:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3928:95:85"
            },
            "returnParameters": {
              "id": 62719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62716,
                  "mutability": "mutable",
                  "name": "thisOut",
                  "nameLocation": "4050:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "4042:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4042:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62718,
                  "mutability": "mutable",
                  "name": "thatOut",
                  "nameLocation": "4067:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "4059:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4059:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4041:34:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILiquidityRamp",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 62613,
          "nodeType": "StructuredDocumentation",
          "src": "294:254:85",
          "text": " @title ILiquidityRamp\n @notice This interface defines the methods required for managing liquidity in decentralized pools.\n @dev Implementations should adhere to the interface specifications for compatibility with upper-layer protocols."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          62721
        ],
        "name": "ILiquidityRamp",
        "nameLocation": "560:14:85",
        "scope": 62722,
        "usedErrors": [
          62615,
          62617,
          62619,
          62621,
          62623
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 85
}