{
  "abi": [
    {
      "inputs": [],
      "name": "LiquidityRamp__AmountIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__AmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__MinLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidityRamp__Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "thisToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "thatToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thisOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "thatOut",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRedeemed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        }
      ],
      "name": "createLpToken",
      "outputs": [
        {
          "internalType": "contract ILPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILPToken",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountLpTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "redeemLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "thisOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "thatOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityManager",
          "name": "_liquidityManager",
          "type": "address"
        }
      ],
      "name": "setLiquidityManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "_poolManager",
          "type": "address"
        }
      ],
      "name": "setPoolManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISwapManager",
          "name": "_swapManager",
          "type": "address"
        }
      ],
      "name": "setSwapManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addLiquidity(address,address,uint256,uint256,address)": "4b2fc7bb",
    "createLpToken(address,address)": "09ee07c4",
    "redeemLiquidity(address,uint256,address)": "e5f415c9",
    "setLiquidityManager(address)": "3c1624d4",
    "setPoolManager(address)": "7aef6715",
    "setSwapManager(address)": "30284efc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LiquidityRamp__AmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__AmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__MinLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidityRamp__Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"thisToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"thatToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thisOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"thatOut\",\"type\":\"uint256\"}],\"name\":\"LiquidityRedeemed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"}],\"name\":\"createLpToken\",\"outputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLpTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"redeemLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"thisOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thatOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityManager\",\"name\":\"_liquidityManager\",\"type\":\"address\"}],\"name\":\"setLiquidityManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"name\":\"setPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISwapManager\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"name\":\"setSwapManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementations should adhere to the interface specifications for compatibility with upper-layer protocols.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,address)\":{\"details\":\"Prior to calling this function, users should approve the tokens for this contract.\",\"params\":{\"amountA\":\"The amount of tokenA to add to the pool.\",\"amountB\":\"The amount of tokenB to add to the pool.\",\"provider\":\"The address that will receive the minted LP tokens.\",\"tokenA\":\"The first token in the pool pair.\",\"tokenB\":\"The second token in the pool pair.\"}},\"createLpToken(address,address)\":{\"details\":\"This function can typically be called by any user, unless the implementation restricts it.\",\"params\":{\"_thatToken\":\"The second token in the new pool pair.\",\"_thisToken\":\"The first token in the new pool pair.\"},\"returns\":{\"_0\":\"The new LP token for the created pool.\"}},\"redeemLiquidity(address,uint256,address)\":{\"details\":\"This function can typically be called by any LP token holder.\",\"params\":{\"amountLpTokens\":\"The amount of LP tokens to redeem.\",\"lpToken\":\"The LP token to be redeemed.\",\"recipient\":\"The address to receive the redeemed assets.\"},\"returns\":{\"thatOut\":\"The amount of the second token that will be received.\",\"thisOut\":\"The amount of the first token that will be received.\"}},\"setLiquidityManager(address)\":{\"details\":\"This function can typically be called only by the contract owner or an authorized address.\",\"params\":{\"_liquidityManager\":\"The address of the liquidity manager contract.\"}},\"setPoolManager(address)\":{\"details\":\"This function can typically be called only by the contract owner or an authorized address.\",\"params\":{\"_poolManager\":\"The address of the pool manager contract.\"}},\"setSwapManager(address)\":{\"details\":\"This function can typically be called only by the contract owner or an authorized address.\",\"params\":{\"_swapManager\":\"The address of the swap manager contract.\"}}},\"title\":\"ILiquidityRamp\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(address,address,uint256,uint256,address)\":{\"notice\":\"Allows users to add liquidity to a given pool.\"},\"createLpToken(address,address)\":{\"notice\":\"Creates a new LP token for the given token pair.\"},\"redeemLiquidity(address,uint256,address)\":{\"notice\":\"Redeems LP tokens for underlying assets.\"},\"setLiquidityManager(address)\":{\"notice\":\"Sets the liquidity manager contract address.\"},\"setPoolManager(address)\":{\"notice\":\"Sets the pool manager contract address.\"},\"setSwapManager(address)\":{\"notice\":\"Sets the swap manager contract address.\"}},\"notice\":\"This interface defines the methods required for managing liquidity in decentralized pools.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ILiquidityRamp.sol\":\"ILiquidityRamp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c\",\"dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x757b3d4e8f07444ab9cdd82b560eb4d06e92e50c668ef0fb2eb550442f54c295\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://8181ee22ce05ac0d6295f431c2974ffc97c33cff6768aeb1c8e79ce1c1270471\",\"dweb:/ipfs/QmWW4MY4j3aSTkqNuezvKYSR2mJ84mm2WzGtMJP1dGSoGk\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xdd269676f741bb101ae0224e83b7c1d85e0785694eb60383d914cfbe163abafa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4c07852bf5526250ead721482352e98bea9d2a61272926b11b5d94432b1c5cb\",\"dweb:/ipfs/QmP3RjTdf71xFJdgbCUc7YUDHxXgv17CLAXpvuLZmCQxiR\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0xb4223304961c3c8af8032bcc75f25812840e93df586bc4dfac79d2137473a794\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://0c988c89e36868504064b21a6e0977a1d0141cb7115cbd8d4c06e3061829079b\",\"dweb:/ipfs/QmR5i3XrjnbHu94Mft1wAatPDWd6DDh72EXJMMGzy6tpjD\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x68af625f740b481c65f9d98e0100c91bb76b777064995c29e7f30f1069b3520b\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://acc6241fe72ec17057ba5c176c7a44260926ab29564e0719d208875714353089\",\"dweb:/ipfs/QmXFvyseX7Nh7PofX8iLS134zKw5RSS53PgDuejrEFEBq8\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x0a1cb5ff0327d32e28e0f82808d74d494bb103c1ddcbe611f8f17ff5991d01d0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://0654168f8a1a9388fef765dd41d263803ef7eb537175e3bb51b24f0c8b452eed\",\"dweb:/ipfs/QmQMGpMuHyAnYsfcJkQk5Q1tKinCJbchaJzBWX5mCmkz6C\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x47f671f5d2c9b1f51b3857b12c5528f76c4161367d11e5f67861cec6a0c67d24\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://34f309ab690eb906c3a59f8ef90567d3600f5b793f95d8e006a845b78b00a4bb\",\"dweb:/ipfs/Qmc3TVsT6XmaHaVzzUtg7Ln9EaUxJPv9yNPtoudJQrPuAU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__AmountIsZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__AmountTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__MinLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__PoolDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LiquidityRamp__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "thisToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "thatToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "thisOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "thatOut",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidityRedeemed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountB",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLpToken",
          "outputs": [
            {
              "internalType": "contract ILPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILPToken",
              "name": "lpToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountLpTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "thisOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "thatOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityManager",
              "name": "_liquidityManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "_poolManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolManager"
        },
        {
          "inputs": [
            {
              "internalType": "contract ISwapManager",
              "name": "_swapManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapManager"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLiquidity(address,address,uint256,uint256,address)": {
            "details": "Prior to calling this function, users should approve the tokens for this contract.",
            "params": {
              "amountA": "The amount of tokenA to add to the pool.",
              "amountB": "The amount of tokenB to add to the pool.",
              "provider": "The address that will receive the minted LP tokens.",
              "tokenA": "The first token in the pool pair.",
              "tokenB": "The second token in the pool pair."
            }
          },
          "createLpToken(address,address)": {
            "details": "This function can typically be called by any user, unless the implementation restricts it.",
            "params": {
              "_thatToken": "The second token in the new pool pair.",
              "_thisToken": "The first token in the new pool pair."
            },
            "returns": {
              "_0": "The new LP token for the created pool."
            }
          },
          "redeemLiquidity(address,uint256,address)": {
            "details": "This function can typically be called by any LP token holder.",
            "params": {
              "amountLpTokens": "The amount of LP tokens to redeem.",
              "lpToken": "The LP token to be redeemed.",
              "recipient": "The address to receive the redeemed assets."
            },
            "returns": {
              "thatOut": "The amount of the second token that will be received.",
              "thisOut": "The amount of the first token that will be received."
            }
          },
          "setLiquidityManager(address)": {
            "details": "This function can typically be called only by the contract owner or an authorized address.",
            "params": {
              "_liquidityManager": "The address of the liquidity manager contract."
            }
          },
          "setPoolManager(address)": {
            "details": "This function can typically be called only by the contract owner or an authorized address.",
            "params": {
              "_poolManager": "The address of the pool manager contract."
            }
          },
          "setSwapManager(address)": {
            "details": "This function can typically be called only by the contract owner or an authorized address.",
            "params": {
              "_swapManager": "The address of the swap manager contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addLiquidity(address,address,uint256,uint256,address)": {
            "notice": "Allows users to add liquidity to a given pool."
          },
          "createLpToken(address,address)": {
            "notice": "Creates a new LP token for the given token pair."
          },
          "redeemLiquidity(address,uint256,address)": {
            "notice": "Redeems LP tokens for underlying assets."
          },
          "setLiquidityManager(address)": {
            "notice": "Sets the liquidity manager contract address."
          },
          "setPoolManager(address)": {
            "notice": "Sets the pool manager contract address."
          },
          "setSwapManager(address)": {
            "notice": "Sets the swap manager contract address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/ILiquidityRamp.sol": "ILiquidityRamp"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7",
        "urls": [
          "bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d",
          "dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb",
        "urls": [
          "bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96",
          "dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9",
        "urls": [
          "bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6",
          "dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc",
        "urls": [
          "bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c",
          "dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x757b3d4e8f07444ab9cdd82b560eb4d06e92e50c668ef0fb2eb550442f54c295",
        "urls": [
          "bzz-raw://8181ee22ce05ac0d6295f431c2974ffc97c33cff6768aeb1c8e79ce1c1270471",
          "dweb:/ipfs/QmWW4MY4j3aSTkqNuezvKYSR2mJ84mm2WzGtMJP1dGSoGk"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xdd269676f741bb101ae0224e83b7c1d85e0785694eb60383d914cfbe163abafa",
        "urls": [
          "bzz-raw://f4c07852bf5526250ead721482352e98bea9d2a61272926b11b5d94432b1c5cb",
          "dweb:/ipfs/QmP3RjTdf71xFJdgbCUc7YUDHxXgv17CLAXpvuLZmCQxiR"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0xb4223304961c3c8af8032bcc75f25812840e93df586bc4dfac79d2137473a794",
        "urls": [
          "bzz-raw://0c988c89e36868504064b21a6e0977a1d0141cb7115cbd8d4c06e3061829079b",
          "dweb:/ipfs/QmR5i3XrjnbHu94Mft1wAatPDWd6DDh72EXJMMGzy6tpjD"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x68af625f740b481c65f9d98e0100c91bb76b777064995c29e7f30f1069b3520b",
        "urls": [
          "bzz-raw://acc6241fe72ec17057ba5c176c7a44260926ab29564e0719d208875714353089",
          "dweb:/ipfs/QmXFvyseX7Nh7PofX8iLS134zKw5RSS53PgDuejrEFEBq8"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x0a1cb5ff0327d32e28e0f82808d74d494bb103c1ddcbe611f8f17ff5991d01d0",
        "urls": [
          "bzz-raw://0654168f8a1a9388fef765dd41d263803ef7eb537175e3bb51b24f0c8b452eed",
          "dweb:/ipfs/QmQMGpMuHyAnYsfcJkQk5Q1tKinCJbchaJzBWX5mCmkz6C"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x47f671f5d2c9b1f51b3857b12c5528f76c4161367d11e5f67861cec6a0c67d24",
        "urls": [
          "bzz-raw://34f309ab690eb906c3a59f8ef90567d3600f5b793f95d8e006a845b78b00a4bb",
          "dweb:/ipfs/Qmc3TVsT6XmaHaVzzUtg7Ln9EaUxJPv9yNPtoudJQrPuAU"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/ILiquidityRamp.sol",
    "id": 62722,
    "exportedSymbols": {
      "IERC20": [
        48295
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityManager": [
        62605
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "ISwapManager": [
        62911
      ],
      "IVotes": [
        47472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3937:85",
    "nodes": [
      {
        "id": 62607,
        "nodeType": "PragmaDirective",
        "src": "36:24:85",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 62608,
        "nodeType": "ImportDirective",
        "src": "62:45:85",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityManager.sol",
        "file": "../interfaces/ILiquidityManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62606,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62609,
        "nodeType": "ImportDirective",
        "src": "108:40:85",
        "nodes": [],
        "absolutePath": "src/interfaces/IPoolManager.sol",
        "file": "../interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62792,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62610,
        "nodeType": "ImportDirective",
        "src": "149:40:85",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapManager.sol",
        "file": "../interfaces/ISwapManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62611,
        "nodeType": "ImportDirective",
        "src": "190:36:85",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPToken.sol",
        "file": "../interfaces/ILPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 62485,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62612,
        "nodeType": "ImportDirective",
        "src": "227:56:85",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62722,
        "sourceUnit": 48296,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62721,
        "nodeType": "ContractDefinition",
        "src": "536:3436:85",
        "nodes": [
          {
            "id": 62615,
            "nodeType": "ErrorDefinition",
            "src": "588:36:85",
            "nodes": [],
            "errorSelector": "45377918",
            "name": "LiquidityRamp__Unauthorized",
            "nameLocation": "594:27:85",
            "parameters": {
              "id": 62614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:2:85"
            }
          },
          {
            "id": 62617,
            "nodeType": "ErrorDefinition",
            "src": "629:36:85",
            "nodes": [],
            "errorSelector": "cff7acc5",
            "name": "LiquidityRamp__MinLiquidity",
            "nameLocation": "635:27:85",
            "parameters": {
              "id": 62616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:2:85"
            }
          },
          {
            "id": 62619,
            "nodeType": "ErrorDefinition",
            "src": "670:36:85",
            "nodes": [],
            "errorSelector": "6747d90c",
            "name": "LiquidityRamp__AmountIsZero",
            "nameLocation": "676:27:85",
            "parameters": {
              "id": 62618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:2:85"
            }
          },
          {
            "id": 62621,
            "nodeType": "ErrorDefinition",
            "src": "711:37:85",
            "nodes": [],
            "errorSelector": "a1486abe",
            "name": "LiquidityRamp__AmountTooHigh",
            "nameLocation": "717:28:85",
            "parameters": {
              "id": 62620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:2:85"
            }
          },
          {
            "id": 62623,
            "nodeType": "ErrorDefinition",
            "src": "753:40:85",
            "nodes": [],
            "errorSelector": "03fd3b05",
            "name": "LiquidityRamp__PoolDoesNotExist",
            "nameLocation": "759:31:85",
            "parameters": {
              "id": 62622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:2:85"
            }
          },
          {
            "id": 62639,
            "nodeType": "EventDefinition",
            "src": "813:190:85",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "50dec338711d35a3c4031888b5588efcddc7258d887b4087496cc6beaa97fd27",
            "name": "LiquidityAdded",
            "nameLocation": "819:14:85",
            "parameters": {
              "id": 62638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62625,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "859:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "843:23:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62627,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "892:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "876:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62630,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "917:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "910:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62628,
                      "name": "IERC20",
                      "nameLocations": [
                        "910:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "910:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "910:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62633,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "940:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "933:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62632,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62631,
                      "name": "IERC20",
                      "nameLocations": [
                        "933:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "933:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "933:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62635,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "964:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "956:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62637,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "989:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62639,
                  "src": "981:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:169:85"
            }
          },
          {
            "id": 62655,
            "nodeType": "EventDefinition",
            "src": "1009:199:85",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1b849ae1f9bad1660570e51a3f0528fb6a14d22b574ac4239eb907acde88df4b",
            "name": "LiquidityRedeemed",
            "nameLocation": "1015:17:85",
            "parameters": {
              "id": 62654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62641,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1058:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1042:23:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1091:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1075:24:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62646,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thisToken",
                  "nameLocation": "1116:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1109:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62645,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62644,
                      "name": "IERC20",
                      "nameLocations": [
                        "1109:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1109:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1109:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62649,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thatToken",
                  "nameLocation": "1142:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1135:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62648,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62647,
                      "name": "IERC20",
                      "nameLocations": [
                        "1135:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1135:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1135:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62651,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thisOut",
                  "nameLocation": "1169:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1161:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62653,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "thatOut",
                  "nameLocation": "1194:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62655,
                  "src": "1186:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1032:175:85"
            }
          },
          {
            "id": 62662,
            "nodeType": "FunctionDefinition",
            "src": "1490:75:85",
            "nodes": [],
            "documentation": {
              "id": 62656,
              "nodeType": "StructuredDocumentation",
              "src": "1232:253:85",
              "text": " @notice Sets the liquidity manager contract address.\n @param _liquidityManager The address of the liquidity manager contract.\n @dev This function can typically be called only by the contract owner or an authorized address."
            },
            "functionSelector": "3c1624d4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidityManager",
            "nameLocation": "1499:19:85",
            "parameters": {
              "id": 62660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62659,
                  "mutability": "mutable",
                  "name": "_liquidityManager",
                  "nameLocation": "1537:17:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62662,
                  "src": "1519:35:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityManager_$62605",
                    "typeString": "contract ILiquidityManager"
                  },
                  "typeName": {
                    "id": 62658,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62657,
                      "name": "ILiquidityManager",
                      "nameLocations": [
                        "1519:17:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62605,
                      "src": "1519:17:85"
                    },
                    "referencedDeclaration": 62605,
                    "src": "1519:17:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityManager_$62605",
                      "typeString": "contract ILiquidityManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1518:37:85"
            },
            "returnParameters": {
              "id": 62661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62669,
            "nodeType": "FunctionDefinition",
            "src": "1814:60:85",
            "nodes": [],
            "documentation": {
              "id": 62663,
              "nodeType": "StructuredDocumentation",
              "src": "1571:238:85",
              "text": " @notice Sets the pool manager contract address.\n @param _poolManager The address of the pool manager contract.\n @dev This function can typically be called only by the contract owner or an authorized address."
            },
            "functionSelector": "7aef6715",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPoolManager",
            "nameLocation": "1823:14:85",
            "parameters": {
              "id": 62667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62666,
                  "mutability": "mutable",
                  "name": "_poolManager",
                  "nameLocation": "1851:12:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62669,
                  "src": "1838:25:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$62791",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 62665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62664,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "1838:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62791,
                      "src": "1838:12:85"
                    },
                    "referencedDeclaration": 62791,
                    "src": "1838:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$62791",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1837:27:85"
            },
            "returnParameters": {
              "id": 62668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1873:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62676,
            "nodeType": "FunctionDefinition",
            "src": "2123:60:85",
            "nodes": [],
            "documentation": {
              "id": 62670,
              "nodeType": "StructuredDocumentation",
              "src": "1880:238:85",
              "text": " @notice Sets the swap manager contract address.\n @param _swapManager The address of the swap manager contract.\n @dev This function can typically be called only by the contract owner or an authorized address."
            },
            "functionSelector": "30284efc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapManager",
            "nameLocation": "2132:14:85",
            "parameters": {
              "id": 62674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62673,
                  "mutability": "mutable",
                  "name": "_swapManager",
                  "nameLocation": "2160:12:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62676,
                  "src": "2147:25:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapManager_$62911",
                    "typeString": "contract ISwapManager"
                  },
                  "typeName": {
                    "id": 62672,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62671,
                      "name": "ISwapManager",
                      "nameLocations": [
                        "2147:12:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62911,
                      "src": "2147:12:85"
                    },
                    "referencedDeclaration": 62911,
                    "src": "2147:12:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapManager_$62911",
                      "typeString": "contract ISwapManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2146:27:85"
            },
            "returnParameters": {
              "id": 62675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2182:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62689,
            "nodeType": "FunctionDefinition",
            "src": "2553:111:85",
            "nodes": [],
            "documentation": {
              "id": 62677,
              "nodeType": "StructuredDocumentation",
              "src": "2189:359:85",
              "text": " @notice Creates a new LP token for the given token pair.\n @param _thisToken The first token in the new pool pair.\n @param _thatToken The second token in the new pool pair.\n @return The new LP token for the created pool.\n @dev This function can typically be called by any user, unless the implementation restricts it."
            },
            "functionSelector": "09ee07c4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createLpToken",
            "nameLocation": "2562:13:85",
            "parameters": {
              "id": 62684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62680,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "2592:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62689,
                  "src": "2585:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62679,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62678,
                      "name": "IERC20",
                      "nameLocations": [
                        "2585:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2585:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2585:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62683,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "2619:10:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62689,
                  "src": "2612:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62682,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62681,
                      "name": "IERC20",
                      "nameLocations": [
                        "2612:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2612:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2612:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:60:85"
            },
            "returnParameters": {
              "id": 62688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62689,
                  "src": "2654:8:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILPToken_$62484",
                    "typeString": "contract ILPToken"
                  },
                  "typeName": {
                    "id": 62686,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62685,
                      "name": "ILPToken",
                      "nameLocations": [
                        "2654:8:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62484,
                      "src": "2654:8:85"
                    },
                    "referencedDeclaration": 62484,
                    "src": "2654:8:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2653:10:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62705,
            "nodeType": "FunctionDefinition",
            "src": "3155:159:85",
            "nodes": [],
            "documentation": {
              "id": 62690,
              "nodeType": "StructuredDocumentation",
              "src": "2670:480:85",
              "text": " @notice Allows users to add liquidity to a given pool.\n @param tokenA The first token in the pool pair.\n @param tokenB The second token in the pool pair.\n @param amountA The amount of tokenA to add to the pool.\n @param amountB The amount of tokenB to add to the pool.\n @param provider The address that will receive the minted LP tokens.\n @dev Prior to calling this function, users should approve the tokens for this contract."
            },
            "functionSelector": "4b2fc7bb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "3164:12:85",
            "parameters": {
              "id": 62703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62693,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3193:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3186:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62692,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62691,
                      "name": "IERC20",
                      "nameLocations": [
                        "3186:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3186:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3186:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62696,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3216:6:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3209:13:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62695,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62694,
                      "name": "IERC20",
                      "nameLocations": [
                        "3209:6:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "3209:6:85"
                    },
                    "referencedDeclaration": 48295,
                    "src": "3209:6:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62698,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "3240:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3232:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3232:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62700,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "3265:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3257:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3257:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62702,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "3290:8:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "3282:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3176:128:85"
            },
            "returnParameters": {
              "id": 62704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3313:0:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62720,
            "nodeType": "FunctionDefinition",
            "src": "3802:168:85",
            "nodes": [],
            "documentation": {
              "id": 62706,
              "nodeType": "StructuredDocumentation",
              "src": "3320:477:85",
              "text": " @notice Redeems LP tokens for underlying assets.\n @param lpToken The LP token to be redeemed.\n @param amountLpTokens The amount of LP tokens to redeem.\n @param recipient The address to receive the redeemed assets.\n @return thisOut The amount of the first token that will be received.\n @return thatOut The amount of the second token that will be received.\n @dev This function can typically be called by any LP token holder."
            },
            "functionSelector": "e5f415c9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemLiquidity",
            "nameLocation": "3811:15:85",
            "parameters": {
              "id": 62714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62709,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nameLocation": "3845:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3836:16:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILPToken_$62484",
                    "typeString": "contract ILPToken"
                  },
                  "typeName": {
                    "id": 62708,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62707,
                      "name": "ILPToken",
                      "nameLocations": [
                        "3836:8:85"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62484,
                      "src": "3836:8:85"
                    },
                    "referencedDeclaration": 62484,
                    "src": "3836:8:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62711,
                  "mutability": "mutable",
                  "name": "amountLpTokens",
                  "nameLocation": "3870:14:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3862:22:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62713,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3902:9:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3894:17:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:7:85",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3826:91:85"
            },
            "returnParameters": {
              "id": 62719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62716,
                  "mutability": "mutable",
                  "name": "thisOut",
                  "nameLocation": "3944:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3936:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62718,
                  "mutability": "mutable",
                  "name": "thatOut",
                  "nameLocation": "3961:7:85",
                  "nodeType": "VariableDeclaration",
                  "scope": 62720,
                  "src": "3953:15:85",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3953:7:85",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3935:34:85"
            },
            "scope": 62721,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILiquidityRamp",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 62613,
          "nodeType": "StructuredDocumentation",
          "src": "285:250:85",
          "text": " @title ILiquidityRamp\n @notice This interface defines the methods required for managing liquidity in decentralized pools.\n @dev Implementations should adhere to the interface specifications for compatibility with upper-layer protocols."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          62721
        ],
        "name": "ILiquidityRamp",
        "nameLocation": "546:14:85",
        "scope": 62722,
        "usedErrors": [
          62615,
          62617,
          62619,
          62621,
          62623
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 85
}