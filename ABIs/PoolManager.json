{
  "abi": [
    {
      "inputs": [],
      "name": "PoolManager__PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolManager__PoolExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolManager__Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "thatToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityRamp",
      "outputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpTokens",
      "outputs": [
        {
          "internalType": "contract ILPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolIdxForPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "_liquidityRamp",
          "type": "address"
        }
      ],
      "name": "setLiquidityRamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106a38061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638ae93f0b116100665780638ae93f0b146101305780638da5cb5b1461015b578063d3c9cc261461016c578063e34336151461019f578063f2fde38b146101b257600080fd5b80631bb5e2dc146100a357806323bae8a7146100e957806335c62bc2146100fe5780634dfd324e14610115578063715018a614610128575b600080fd5b6100cc6100b136600461059e565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f73660046105cc565b6101c5565b005b61010760025481565b6040519081526020016100e0565b6001546100cc906001600160a01b031681565b6100fc610219565b61010761013e3660046105f0565b600460209081526000928352604080842090915290825290205481565b6000546001600160a01b03166100cc565b61017f61017a36600461059e565b61022d565b604080516001600160a01b039384168152929091166020830152016100e0565b6101076101ad3660046105f0565b610340565b6100fc6101c03660046105cc565b610476565b6101cd6104f4565b6001546001600160a01b0316156101f7576040516319b828f360e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6102216104f4565b61022b600061054e565b565b60008082158061023e575060025483115b1561025c5760405163cebecd7b60e01b815260040160405180910390fd5b600083815260036020908152604091829020548251633afa78c760e11b815292516001600160a01b039091169283926375f4f18e926004808401938290030181865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d49190610629565b9250806001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103389190610629565b915050915091565b6001600160a01b038083166000908152600460209081526040808320938516835292905290812054156103865760405163aa684b2360e01b815260040160405180910390fd5b60026000815461039590610646565b918290555060015460405163027b81f160e21b81526001600160a01b0386811660048301528581166024830152929350600092909116906309ee07c4906044016020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610629565b600083815260036020908152604080832080546001600160a01b0319166001600160a01b0395861617905596831680835260048083528884209790941683529581528682208590559182528581209481529390525091902081905590565b61047e6104f4565b6001600160a01b0381166104e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104f18161054e565b50565b6000546001600160a01b0316331461022b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105b057600080fd5b5035919050565b6001600160a01b03811681146104f157600080fd5b6000602082840312156105de57600080fd5b81356105e9816105b7565b9392505050565b6000806040838503121561060357600080fd5b823561060e816105b7565b9150602083013561061e816105b7565b809150509250929050565b60006020828403121561063b57600080fd5b81516105e9816105b7565b60006001820161066657634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122025a8833c329d997076cf75a7e9b7d7aa20f5a3ea35bcfde3e79d148f3a4588fe64736f6c63430008130033",
    "sourceMap": "339:2839:72:-:0;;;;;;;;;;;;-1:-1:-1;964:32:21;736:10:49;964:18:21;:32::i;:::-;339:2839:72;;2503:191:21;2577:16;2596:6;;-1:-1:-1;;;;;2613:17:21;;;-1:-1:-1;;;;;;2613:17:21;;;;;;2646:40;;2596:6;;;;;;;2646:40;;2577:16;2646:40;2566:128;2503:191;:::o;339:2839:72:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638ae93f0b116100665780638ae93f0b146101305780638da5cb5b1461015b578063d3c9cc261461016c578063e34336151461019f578063f2fde38b146101b257600080fd5b80631bb5e2dc146100a357806323bae8a7146100e957806335c62bc2146100fe5780634dfd324e14610115578063715018a614610128575b600080fd5b6100cc6100b136600461059e565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f73660046105cc565b6101c5565b005b61010760025481565b6040519081526020016100e0565b6001546100cc906001600160a01b031681565b6100fc610219565b61010761013e3660046105f0565b600460209081526000928352604080842090915290825290205481565b6000546001600160a01b03166100cc565b61017f61017a36600461059e565b61022d565b604080516001600160a01b039384168152929091166020830152016100e0565b6101076101ad3660046105f0565b610340565b6100fc6101c03660046105cc565b610476565b6101cd6104f4565b6001546001600160a01b0316156101f7576040516319b828f360e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6102216104f4565b61022b600061054e565b565b60008082158061023e575060025483115b1561025c5760405163cebecd7b60e01b815260040160405180910390fd5b600083815260036020908152604091829020548251633afa78c760e11b815292516001600160a01b039091169283926375f4f18e926004808401938290030181865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d49190610629565b9250806001600160a01b031663c451463b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103389190610629565b915050915091565b6001600160a01b038083166000908152600460209081526040808320938516835292905290812054156103865760405163aa684b2360e01b815260040160405180910390fd5b60026000815461039590610646565b918290555060015460405163027b81f160e21b81526001600160a01b0386811660048301528581166024830152929350600092909116906309ee07c4906044016020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610629565b600083815260036020908152604080832080546001600160a01b0319166001600160a01b0395861617905596831680835260048083528884209790941683529581528682208590559182528581209481529390525091902081905590565b61047e6104f4565b6001600160a01b0381166104e85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104f18161054e565b50565b6000546001600160a01b0316331461022b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105b057600080fd5b5035919050565b6001600160a01b03811681146104f157600080fd5b6000602082840312156105de57600080fd5b81356105e9816105b7565b9392505050565b6000806040838503121561060357600080fd5b823561060e816105b7565b9150602083013561061e816105b7565b809150509250929050565b60006020828403121561063b57600080fd5b81516105e9816105b7565b60006001820161066657634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122025a8833c329d997076cf75a7e9b7d7aa20f5a3ea35bcfde3e79d148f3a4588fe64736f6c63430008130033",
    "sourceMap": "339:2839:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;564:44;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;564:44:72;;;;;;-1:-1:-1;;;;;381:32:93;;;363:51;;351:2;336:18;564:44:72;;;;;;;;1005:267;;;;;;:::i;:::-;;:::i;:::-;;501:23;;;;;;;;;1015:25:93;;;1003:2;988:18;501:23:72;869:177:93;416:35:72;;;;;-1:-1:-1;;;;;416:35:72;;;1884:103:21;;;:::i;665:67:72:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1243:87:21;1289:7;1316:6;-1:-1:-1;;;;;1316:6:21;1243:87;;2696:479:72;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2210:15:93;;;2192:34;;2262:15;;;;2257:2;2242:18;;2235:43;2127:18;2696:479:72;1948:336:93;1595:807:72;;;;;;:::i;:::-;;:::i;2142:201:21:-;;;;;;:::i;:::-;;:::i;1005:267:72:-;1129:13:21;:11;:13::i;:::-;1120::72::1;::::0;-1:-1:-1;;;;;1120:13:72::1;1112:36:::0;1108:116:::1;;1172:40;;-1:-1:-1::0;;;1172:40:72::1;;;;;;;;;;;1108:116;1234:13;:30:::0;;-1:-1:-1;;;;;;1234:30:72::1;-1:-1:-1::0;;;;;1234:30:72;;;::::1;::::0;;;::::1;::::0;;1005:267::o;1884:103:21:-;1129:13;:11;:13::i;:::-;1949:30:::1;1976:1;1949:18;:30::i;:::-;1884:103::o:0;2696:479:72:-;2771:16;;2822:12;;;:34;;;2848:8;;2838:7;:18;2822:34;2818:118;;;2880:44;;-1:-1:-1;;;2880:44:72;;;;;;;;;;;2818:118;3004:16;3023:17;;;:8;:17;;;;;;;;;;3106:19;;-1:-1:-1;;;3106:19:72;;;;-1:-1:-1;;;;;3023:17:72;;;;;;3106;;:19;;;;;;;;;;3023:17;3106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3094:31;;3148:7;-1:-1:-1;;;;;3148:17:72;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3136:31;;2807:368;2696:479;;;:::o;1595:807::-;-1:-1:-1;;;;;1728:26:72;;;1696:15;1728:26;;;:14;:26;;;;;;;;:38;;;;;;;;;;;;:43;1724:121;;1795:38;;-1:-1:-1;;;1795:38:72;;;;;;;;;;;1724:121;1948:8;;1946:10;;;;;:::i;:::-;;;;;-1:-1:-1;2049:13:72;;:88;;-1:-1:-1;;;2049:88:72;;-1:-1:-1;;;;;2210:15:93;;;2049:88:72;;;2192:34:93;2262:15;;;2242:18;;;2235:43;1946:10:72;;-1:-1:-1;2027:19:72;;2049:13;;;;:27;;2127:18:93;;2049:88:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2195:17;;;;:8;:17;;;;;;;;:30;;-1:-1:-1;;;;;;2195:30:72;-1:-1:-1;;;;;2195:30:72;;;;;;2287:26;;;;;;:14;:26;;;;;;:38;;;;;;;;;;;;:48;;;2346:26;;;;;;:38;;;;;;-1:-1:-1;2346:38:72;;;:48;;;2195:17;1595:807::o;2142:201:21:-;1129:13;:11;:13::i;:::-;-1:-1:-1;;;;;2231:22:21;::::1;2223:73;;;::::0;-1:-1:-1;;;2223:73:21;;3574:2:93;2223:73:21::1;::::0;::::1;3556:21:93::0;3613:2;3593:18;;;3586:30;3652:34;3632:18;;;3625:62;-1:-1:-1;;;3703:18:93;;;3696:36;3749:19;;2223:73:21::1;;;;;;;;;2307:28;2326:8;2307:18;:28::i;:::-;2142:201:::0;:::o;1408:132::-;1289:7;1316:6;-1:-1:-1;;;;;1316:6:21;736:10:49;1472:23:21;1464:68;;;;-1:-1:-1;;;1464:68:21;;3981:2:93;1464:68:21;;;3963:21:93;;;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;4111:18;;1464:68:21;3779:356:93;2503:191:21;2577:16;2596:6;;-1:-1:-1;;;;;2613:17:21;;;-1:-1:-1;;;;;;2613:17:21;;;;;;2646:40;;2596:6;;;;;;;2646:40;;2577:16;2646:40;2566:128;2503:191;:::o;14:180:93:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:93;;14:180;-1:-1:-1;14:180:93:o;425:147::-;-1:-1:-1;;;;;516:31:93;;506:42;;496:70;;562:1;559;552:12;577:287;660:6;713:2;701:9;692:7;688:23;684:32;681:52;;;729:1;726;719:12;681:52;768:9;755:23;787:47;828:5;787:47;:::i;:::-;853:5;577:287;-1:-1:-1;;;577:287:93:o;1283:452::-;1383:6;1391;1444:2;1432:9;1423:7;1419:23;1415:32;1412:52;;;1460:1;1457;1450:12;1412:52;1499:9;1486:23;1518:47;1559:5;1518:47;:::i;:::-;1584:5;-1:-1:-1;1641:2:93;1626:18;;1613:32;1654:49;1613:32;1654:49;:::i;:::-;1722:7;1712:17;;;1283:452;;;;;:::o;2557:283::-;2643:6;2696:2;2684:9;2675:7;2671:23;2667:32;2664:52;;;2712:1;2709;2702:12;2664:52;2744:9;2738:16;2763:47;2804:5;2763:47;:::i;2845:232::-;2884:3;2905:17;;;2902:140;;2964:10;2959:3;2955:20;2952:1;2945:31;2999:4;2996:1;2989:15;3027:4;3024:1;3017:15;2902:140;-1:-1:-1;3069:1:93;3058:13;;2845:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createPool(address,address)": "e3433615",
    "getTokens(uint256)": "d3c9cc26",
    "liquidityRamp()": "4dfd324e",
    "lpTokens(uint256)": "1bb5e2dc",
    "numPools()": "35c62bc2",
    "owner()": "8da5cb5b",
    "poolIdxForPair(address,address)": "8ae93f0b",
    "renounceOwnership()": "715018a6",
    "setLiquidityRamp(address)": "23bae8a7",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PoolManager__PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManager__PoolExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManager__Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"thatToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityRamp\",\"outputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpTokens\",\"outputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolIdxForPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"_liquidityRamp\",\"type\":\"address\"}],\"name\":\"setLiquidityRamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements IPoolManager and extends Ownable for governance.\",\"kind\":\"dev\",\"methods\":{\"createPool(address,address)\":{\"details\":\"Cannot create a pool for an existing token pair.\",\"params\":{\"_thatToken\":\"The second token of the pair.\",\"_thisToken\":\"The first token of the pair.\"},\"returns\":{\"poolIdx\":\"The index of the newly created pool.\"}},\"getTokens(uint256)\":{\"details\":\"Throws if the pool does not exist.\",\"params\":{\"poolIdx\":\"The index of the pool.\"},\"returns\":{\"thatToken\":\"The second token in the pair.\",\"thisToken\":\"The first token in the pair.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setLiquidityRamp(address)\":{\"details\":\"Can only be called by the contract owner. Cannot be updated once set.\",\"params\":{\"_liquidityRamp\":\"The address of the LiquidityRamp contract.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"lpTokens\":{\"params\":{\"poolIdx\":\"The index of the liquidity pool.\"},\"return\":\"The ILPToken contract for the given pool index.\",\"returns\":{\"_0\":\"The ILPToken contract for the given pool index.\"}},\"numPools\":{\"return\":\"The total number of liquidity pools.\",\"returns\":{\"_0\":\"The total number of liquidity pools.\"}},\"poolIdxForPair\":{\"params\":{\"tokenA\":\"The first token in the pair.\",\"tokenB\":\"The second token in the pair.\"},\"return\":\"The index of the pool for the token pair.\",\"returns\":{\"_0\":\"The index of the pool for the token pair.\"}}},\"title\":\"PoolManager Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPool(address,address)\":{\"notice\":\"Creates a new liquidity pool for a token pair.\"},\"getTokens(uint256)\":{\"notice\":\"Fetches the token pair for a given pool index.\"},\"lpTokens(uint256)\":{\"notice\":\"Retrieve the LP Token contract for a given pool index.\"},\"numPools()\":{\"notice\":\"Get the total number of pools.\"},\"poolIdxForPair(address,address)\":{\"notice\":\"Fetch the pool index for a given token pair.\"},\"setLiquidityRamp(address)\":{\"notice\":\"Sets the LiquidityRamp contract.\"}},\"notice\":\"Manages the creation and details of liquidity pools.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/PoolManager.sol\":\"PoolManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db\",\"dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811\",\"dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda\",\"dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"src/core/PoolManager.sol\":{\"keccak256\":\"0xa5c3c90a1a37f7fe3f474d622723b48dbaa08077f4e0aaaf70e1ee321ac8061d\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://4910ebe06e27267ef2bf28519654bd38c63c89dd4e1b50dabc607527318d1faf\",\"dweb:/ipfs/QmSHHZviJ4jypP1ZK8qLDxkKYvm5hqFj3z7u7spQUxsuNN\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd\",\"dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7\",\"dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45\",\"dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935\",\"dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc\",\"dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f\",\"dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07\",\"dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__PoolDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__PoolExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "thatToken",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityRamp",
          "outputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpTokens",
          "outputs": [
            {
              "internalType": "contract ILPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numPools",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolIdxForPair",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "_liquidityRamp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityRamp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createPool(address,address)": {
            "details": "Cannot create a pool for an existing token pair.",
            "params": {
              "_thatToken": "The second token of the pair.",
              "_thisToken": "The first token of the pair."
            },
            "returns": {
              "poolIdx": "The index of the newly created pool."
            }
          },
          "getTokens(uint256)": {
            "details": "Throws if the pool does not exist.",
            "params": {
              "poolIdx": "The index of the pool."
            },
            "returns": {
              "thatToken": "The second token in the pair.",
              "thisToken": "The first token in the pair."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setLiquidityRamp(address)": {
            "details": "Can only be called by the contract owner. Cannot be updated once set.",
            "params": {
              "_liquidityRamp": "The address of the LiquidityRamp contract."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createPool(address,address)": {
            "notice": "Creates a new liquidity pool for a token pair."
          },
          "getTokens(uint256)": {
            "notice": "Fetches the token pair for a given pool index."
          },
          "lpTokens(uint256)": {
            "notice": "Retrieve the LP Token contract for a given pool index."
          },
          "numPools()": {
            "notice": "Get the total number of pools."
          },
          "poolIdxForPair(address,address)": {
            "notice": "Fetch the pool index for a given token pair."
          },
          "setLiquidityRamp(address)": {
            "notice": "Sets the LiquidityRamp contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/core/PoolManager.sol": "PoolManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0",
        "urls": [
          "bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3",
          "dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193",
        "urls": [
          "bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db",
          "dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821",
        "urls": [
          "bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811",
          "dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f",
        "urls": [
          "bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3",
          "dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59",
        "urls": [
          "bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda",
          "dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e",
        "urls": [
          "bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5",
          "dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN"
        ],
        "license": "MIT"
      },
      "src/core/PoolManager.sol": {
        "keccak256": "0xa5c3c90a1a37f7fe3f474d622723b48dbaa08077f4e0aaaf70e1ee321ac8061d",
        "urls": [
          "bzz-raw://4910ebe06e27267ef2bf28519654bd38c63c89dd4e1b50dabc607527318d1faf",
          "dweb:/ipfs/QmSHHZviJ4jypP1ZK8qLDxkKYvm5hqFj3z7u7spQUxsuNN"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae",
        "urls": [
          "bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd",
          "dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552",
        "urls": [
          "bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7",
          "dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def",
        "urls": [
          "bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45",
          "dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af",
        "urls": [
          "bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935",
          "dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065",
        "urls": [
          "bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc",
          "dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4",
        "urls": [
          "bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f",
          "dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74",
        "urls": [
          "bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07",
          "dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/core/PoolManager.sol",
    "id": 60843,
    "exportedSymbols": {
      "Context": [
        51552
      ],
      "IERC20": [
        48295
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "IVotes": [
        47472
      ],
      "Ownable": [
        43393
      ],
      "PoolManager": [
        60842
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3143:72",
    "nodes": [
      {
        "id": 60677,
        "nodeType": "PragmaDirective",
        "src": "37:24:72",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 60678,
        "nodeType": "ImportDirective",
        "src": "65:40:72",
        "nodes": [],
        "absolutePath": "src/interfaces/IPoolManager.sol",
        "file": "../interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60843,
        "sourceUnit": 62792,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60679,
        "nodeType": "ImportDirective",
        "src": "107:52:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60843,
        "sourceUnit": 43394,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 60842,
        "nodeType": "ContractDefinition",
        "src": "339:2839:72",
        "nodes": [
          {
            "id": 60687,
            "nodeType": "VariableDeclaration",
            "src": "416:35:72",
            "nodes": [],
            "constant": false,
            "functionSelector": "4dfd324e",
            "mutability": "mutable",
            "name": "liquidityRamp",
            "nameLocation": "438:13:72",
            "scope": 60842,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
              "typeString": "contract ILiquidityRamp"
            },
            "typeName": {
              "id": 60686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60685,
                "name": "ILiquidityRamp",
                "nameLocations": [
                  "416:14:72"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62721,
                "src": "416:14:72"
              },
              "referencedDeclaration": 62721,
              "src": "416:14:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                "typeString": "contract ILiquidityRamp"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60689,
            "nodeType": "VariableDeclaration",
            "src": "501:23:72",
            "nodes": [],
            "baseFunctions": [
              62769
            ],
            "constant": false,
            "functionSelector": "35c62bc2",
            "mutability": "mutable",
            "name": "numPools",
            "nameLocation": "516:8:72",
            "scope": 60842,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60688,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "501:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 60694,
            "nodeType": "VariableDeclaration",
            "src": "564:44:72",
            "nodes": [],
            "baseFunctions": [
              62790
            ],
            "constant": false,
            "functionSelector": "1bb5e2dc",
            "mutability": "mutable",
            "name": "lpTokens",
            "nameLocation": "600:8:72",
            "scope": 60842,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ILPToken_$62484_$",
              "typeString": "mapping(uint256 => contract ILPToken)"
            },
            "typeName": {
              "id": 60693,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60690,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "572:7:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "564:28:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ILPToken_$62484_$",
                "typeString": "mapping(uint256 => contract ILPToken)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 60692,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60691,
                  "name": "ILPToken",
                  "nameLocations": [
                    "583:8:72"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62484,
                  "src": "583:8:72"
                },
                "referencedDeclaration": 62484,
                "src": "583:8:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ILPToken_$62484",
                  "typeString": "contract ILPToken"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 60702,
            "nodeType": "VariableDeclaration",
            "src": "665:67:72",
            "nodes": [],
            "baseFunctions": [
              62781
            ],
            "constant": false,
            "functionSelector": "8ae93f0b",
            "mutability": "mutable",
            "name": "poolIdxForPair",
            "nameLocation": "718:14:72",
            "scope": 60842,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$_$",
              "typeString": "mapping(contract IERC20 => mapping(contract IERC20 => uint256))"
            },
            "typeName": {
              "id": 60701,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60696,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 60695,
                  "name": "IERC20",
                  "nameLocations": [
                    "673:6:72"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48295,
                  "src": "673:6:72"
                },
                "referencedDeclaration": 48295,
                "src": "673:6:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$48295",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "665:45:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$_$",
                "typeString": "mapping(contract IERC20 => mapping(contract IERC20 => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 60700,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 60698,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 60697,
                    "name": "IERC20",
                    "nameLocations": [
                      "691:6:72"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 48295,
                    "src": "691:6:72"
                  },
                  "referencedDeclaration": 48295,
                  "src": "691:6:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  }
                },
                "nodeType": "Mapping",
                "src": "683:26:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$",
                  "typeString": "mapping(contract IERC20 => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 60699,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "701:7:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 60732,
            "nodeType": "FunctionDefinition",
            "src": "1005:267:72",
            "nodes": [],
            "body": {
              "id": 60731,
              "nodeType": "Block",
              "src": "1097:175:72",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 60719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 60713,
                          "name": "liquidityRamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60687,
                          "src": "1120:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                            "typeString": "contract ILiquidityRamp"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                            "typeString": "contract ILiquidityRamp"
                          }
                        ],
                        "id": 60712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1112:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 60711,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:72",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1112:22:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 60717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1146:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 60716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1138:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 60715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1138:7:72",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1138:10:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1112:36:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60726,
                  "nodeType": "IfStatement",
                  "src": "1108:116:72",
                  "trueBody": {
                    "id": 60725,
                    "nodeType": "Block",
                    "src": "1150:74:72",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 60720,
                              "name": "IPoolManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62791,
                              "src": "1172:12:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPoolManager_$62791_$",
                                "typeString": "type(contract IPoolManager)"
                              }
                            },
                            "id": 60722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1185:25:72",
                            "memberName": "PoolManager__Unauthorized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62728,
                            "src": "1172:38:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 60723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1172:40:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60724,
                        "nodeType": "RevertStatement",
                        "src": "1165:47:72"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 60729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60727,
                      "name": "liquidityRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60687,
                      "src": "1234:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                        "typeString": "contract ILiquidityRamp"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60728,
                      "name": "_liquidityRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60706,
                      "src": "1250:14:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                        "typeString": "contract ILiquidityRamp"
                      }
                    },
                    "src": "1234:30:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "id": 60730,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:30:72"
                }
              ]
            },
            "baseFunctions": [
              62739
            ],
            "documentation": {
              "id": 60703,
              "nodeType": "StructuredDocumentation",
              "src": "782:217:72",
              "text": " @notice Sets the LiquidityRamp contract.\n @dev Can only be called by the contract owner. Cannot be updated once set.\n @param _liquidityRamp The address of the LiquidityRamp contract."
            },
            "functionSelector": "23bae8a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60709,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60708,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1087:9:72"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43312,
                  "src": "1087:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "1087:9:72"
              }
            ],
            "name": "setLiquidityRamp",
            "nameLocation": "1014:16:72",
            "parameters": {
              "id": 60707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60706,
                  "mutability": "mutable",
                  "name": "_liquidityRamp",
                  "nameLocation": "1056:14:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60732,
                  "src": "1041:29:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                    "typeString": "contract ILiquidityRamp"
                  },
                  "typeName": {
                    "id": 60705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60704,
                      "name": "ILiquidityRamp",
                      "nameLocations": [
                        "1041:14:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62721,
                      "src": "1041:14:72"
                    },
                    "referencedDeclaration": 62721,
                    "src": "1041:14:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:47:72"
            },
            "returnParameters": {
              "id": 60710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:0:72"
            },
            "scope": 60842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60795,
            "nodeType": "FunctionDefinition",
            "src": "1595:807:72",
            "nodes": [],
            "body": {
              "id": 60794,
              "nodeType": "Block",
              "src": "1713:689:72",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 60744,
                          "name": "poolIdxForPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60702,
                          "src": "1728:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(contract IERC20 => uint256))"
                          }
                        },
                        "id": 60746,
                        "indexExpression": {
                          "id": 60745,
                          "name": "_thisToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60736,
                          "src": "1743:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$48295",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1728:26:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 60748,
                      "indexExpression": {
                        "id": 60747,
                        "name": "_thatToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60739,
                        "src": "1755:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1728:38:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1770:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1728:43:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60757,
                  "nodeType": "IfStatement",
                  "src": "1724:121:72",
                  "trueBody": {
                    "id": 60756,
                    "nodeType": "Block",
                    "src": "1773:72:72",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 60751,
                              "name": "IPoolManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62791,
                              "src": "1795:12:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPoolManager_$62791_$",
                                "typeString": "type(contract IPoolManager)"
                              }
                            },
                            "id": 60753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1808:23:72",
                            "memberName": "PoolManager__PoolExists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62730,
                            "src": "1795:36:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 60754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1795:38:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60755,
                        "nodeType": "RevertStatement",
                        "src": "1788:45:72"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 60761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60758,
                      "name": "poolIdx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60742,
                      "src": "1936:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1946:10:72",
                      "subExpression": {
                        "id": 60759,
                        "name": "numPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60689,
                        "src": "1948:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1936:20:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60762,
                  "nodeType": "ExpressionStatement",
                  "src": "1936:20:72"
                },
                {
                  "assignments": [
                    60765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60765,
                      "mutability": "mutable",
                      "name": "newLpToken",
                      "nameLocation": "2036:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 60794,
                      "src": "2027:19:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILPToken_$62484",
                        "typeString": "contract ILPToken"
                      },
                      "typeName": {
                        "id": 60764,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60763,
                          "name": "ILPToken",
                          "nameLocations": [
                            "2027:8:72"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62484,
                          "src": "2027:8:72"
                        },
                        "referencedDeclaration": 62484,
                        "src": "2027:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$62484",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60771,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60768,
                        "name": "_thisToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60736,
                        "src": "2091:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 60769,
                        "name": "_thatToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60739,
                        "src": "2116:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 60766,
                        "name": "liquidityRamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60687,
                        "src": "2049:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                          "typeString": "contract ILiquidityRamp"
                        }
                      },
                      "id": 60767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2063:13:72",
                      "memberName": "createLpToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62689,
                      "src": "2049:27:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$48295_$_t_contract$_IERC20_$48295_$returns$_t_contract$_ILPToken_$62484_$",
                        "typeString": "function (contract IERC20,contract IERC20) external returns (contract ILPToken)"
                      }
                    },
                    "id": 60770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:88:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2027:110:72"
                },
                {
                  "expression": {
                    "id": 60776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60772,
                        "name": "lpTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60694,
                        "src": "2195:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ILPToken_$62484_$",
                          "typeString": "mapping(uint256 => contract ILPToken)"
                        }
                      },
                      "id": 60774,
                      "indexExpression": {
                        "id": 60773,
                        "name": "poolIdx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60742,
                        "src": "2204:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2195:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILPToken_$62484",
                        "typeString": "contract ILPToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60775,
                      "name": "newLpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60765,
                      "src": "2215:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILPToken_$62484",
                        "typeString": "contract ILPToken"
                      }
                    },
                    "src": "2195:30:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "id": 60777,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:30:72"
                },
                {
                  "expression": {
                    "id": 60784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 60778,
                          "name": "poolIdxForPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60702,
                          "src": "2287:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(contract IERC20 => uint256))"
                          }
                        },
                        "id": 60781,
                        "indexExpression": {
                          "id": 60779,
                          "name": "_thisToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60736,
                          "src": "2302:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$48295",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2287:26:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 60782,
                      "indexExpression": {
                        "id": 60780,
                        "name": "_thatToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60739,
                        "src": "2314:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2287:38:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60783,
                      "name": "poolIdx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60742,
                      "src": "2328:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2287:48:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60785,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:48:72"
                },
                {
                  "expression": {
                    "id": 60792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 60786,
                          "name": "poolIdxForPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60702,
                          "src": "2346:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(contract IERC20 => uint256))"
                          }
                        },
                        "id": 60789,
                        "indexExpression": {
                          "id": 60787,
                          "name": "_thatToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60739,
                          "src": "2361:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$48295",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:26:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$48295_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 60790,
                      "indexExpression": {
                        "id": 60788,
                        "name": "_thisToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60736,
                        "src": "2373:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$48295",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2346:38:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60791,
                      "name": "poolIdx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60742,
                      "src": "2387:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2346:48:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 60793,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:48:72"
                }
              ]
            },
            "baseFunctions": [
              62751
            ],
            "documentation": {
              "id": 60733,
              "nodeType": "StructuredDocumentation",
              "src": "1280:309:72",
              "text": " @notice Creates a new liquidity pool for a token pair.\n @dev Cannot create a pool for an existing token pair.\n @param _thisToken The first token of the pair.\n @param _thatToken The second token of the pair.\n @return poolIdx The index of the newly created pool."
            },
            "functionSelector": "e3433615",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "1604:10:72",
            "parameters": {
              "id": 60740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60736,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "1632:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60795,
                  "src": "1625:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 60735,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60734,
                      "name": "IERC20",
                      "nameLocations": [
                        "1625:6:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1625:6:72"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1625:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60739,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "1660:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60795,
                  "src": "1653:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 60738,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60737,
                      "name": "IERC20",
                      "nameLocations": [
                        "1653:6:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1653:6:72"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1653:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1614:63:72"
            },
            "returnParameters": {
              "id": 60743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60742,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1704:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60795,
                  "src": "1696:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1695:17:72"
            },
            "scope": 60842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60841,
            "nodeType": "FunctionDefinition",
            "src": "2696:479:72",
            "nodes": [],
            "body": {
              "id": 60840,
              "nodeType": "Block",
              "src": "2807:368:72",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60807,
                        "name": "poolIdx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60798,
                        "src": "2822:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 60808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2822:12:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60810,
                        "name": "poolIdx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60798,
                        "src": "2838:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 60811,
                        "name": "numPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60689,
                        "src": "2848:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2838:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2822:34:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60820,
                  "nodeType": "IfStatement",
                  "src": "2818:118:72",
                  "trueBody": {
                    "id": 60819,
                    "nodeType": "Block",
                    "src": "2858:78:72",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 60814,
                              "name": "IPoolManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62791,
                              "src": "2880:12:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPoolManager_$62791_$",
                                "typeString": "type(contract IPoolManager)"
                              }
                            },
                            "id": 60816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2893:29:72",
                            "memberName": "PoolManager__PoolDoesNotExist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62732,
                            "src": "2880:42:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 60817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2880:44:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60818,
                        "nodeType": "RevertStatement",
                        "src": "2873:51:72"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    60823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60823,
                      "mutability": "mutable",
                      "name": "lpToken",
                      "nameLocation": "3013:7:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 60840,
                      "src": "3004:16:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILPToken_$62484",
                        "typeString": "contract ILPToken"
                      },
                      "typeName": {
                        "id": 60822,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 60821,
                          "name": "ILPToken",
                          "nameLocations": [
                            "3004:8:72"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62484,
                          "src": "3004:8:72"
                        },
                        "referencedDeclaration": 62484,
                        "src": "3004:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILPToken_$62484",
                          "typeString": "contract ILPToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60827,
                  "initialValue": {
                    "baseExpression": {
                      "id": 60824,
                      "name": "lpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60694,
                      "src": "3023:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_ILPToken_$62484_$",
                        "typeString": "mapping(uint256 => contract ILPToken)"
                      }
                    },
                    "id": 60826,
                    "indexExpression": {
                      "id": 60825,
                      "name": "poolIdx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60798,
                      "src": "3032:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3023:17:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3004:36:72"
                },
                {
                  "expression": {
                    "id": 60832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60828,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60802,
                      "src": "3094:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 60829,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60823,
                          "src": "3106:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILPToken_$62484",
                            "typeString": "contract ILPToken"
                          }
                        },
                        "id": 60830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3114:9:72",
                        "memberName": "thisToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62452,
                        "src": "3106:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$48295_$",
                          "typeString": "function () view external returns (contract IERC20)"
                        }
                      },
                      "id": 60831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3106:19:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3094:31:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 60833,
                  "nodeType": "ExpressionStatement",
                  "src": "3094:31:72"
                },
                {
                  "expression": {
                    "id": 60838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60834,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60805,
                      "src": "3136:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 60835,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60823,
                          "src": "3148:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILPToken_$62484",
                            "typeString": "contract ILPToken"
                          }
                        },
                        "id": 60836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3156:9:72",
                        "memberName": "thatToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62459,
                        "src": "3148:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$48295_$",
                          "typeString": "function () view external returns (contract IERC20)"
                        }
                      },
                      "id": 60837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3148:19:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3136:31:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 60839,
                  "nodeType": "ExpressionStatement",
                  "src": "3136:31:72"
                }
              ]
            },
            "baseFunctions": [
              62763
            ],
            "documentation": {
              "id": 60796,
              "nodeType": "StructuredDocumentation",
              "src": "2410:280:72",
              "text": " @notice Fetches the token pair for a given pool index.\n @dev Throws if the pool does not exist.\n @param poolIdx The index of the pool.\n @return thisToken The first token in the pair.\n @return thatToken The second token in the pair."
            },
            "functionSelector": "d3c9cc26",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nameLocation": "2705:9:72",
            "parameters": {
              "id": 60799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60798,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "2733:7:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60841,
                  "src": "2725:15:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2714:33:72"
            },
            "returnParameters": {
              "id": 60806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60802,
                  "mutability": "mutable",
                  "name": "thisToken",
                  "nameLocation": "2778:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60841,
                  "src": "2771:16:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 60801,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60800,
                      "name": "IERC20",
                      "nameLocations": [
                        "2771:6:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2771:6:72"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2771:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60805,
                  "mutability": "mutable",
                  "name": "thatToken",
                  "nameLocation": "2796:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 60841,
                  "src": "2789:16:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 60804,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60803,
                      "name": "IERC20",
                      "nameLocations": [
                        "2789:6:72"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2789:6:72"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2789:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:36:72"
            },
            "scope": 60842,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60681,
              "name": "IPoolManager",
              "nameLocations": [
                "363:12:72"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62791,
              "src": "363:12:72"
            },
            "id": 60682,
            "nodeType": "InheritanceSpecifier",
            "src": "363:12:72"
          },
          {
            "baseName": {
              "id": 60683,
              "name": "Ownable",
              "nameLocations": [
                "377:7:72"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43393,
              "src": "377:7:72"
            },
            "id": 60684,
            "nodeType": "InheritanceSpecifier",
            "src": "377:7:72"
          }
        ],
        "canonicalName": "PoolManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 60680,
          "nodeType": "StructuredDocumentation",
          "src": "163:174:72",
          "text": " @title PoolManager Contract\n @notice Manages the creation and details of liquidity pools.\n @dev Implements IPoolManager and extends Ownable for governance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          60842,
          43393,
          51552,
          62791
        ],
        "name": "PoolManager",
        "nameLocation": "348:11:72",
        "scope": 60843,
        "usedErrors": [
          62728,
          62730,
          62732
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 72
}