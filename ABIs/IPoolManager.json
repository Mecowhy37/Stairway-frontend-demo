{
  "abi": [
    {
      "inputs": [],
      "name": "PoolManager__PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolManager__PoolExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolManager__Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "thatToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "name": "lpTokens",
      "outputs": [
        {
          "internalType": "contract ILPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "poolIdxForPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "_liquidityRamp",
          "type": "address"
        }
      ],
      "name": "setLiquidityRamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createPool(address,address)": "e3433615",
    "getTokens(uint256)": "d3c9cc26",
    "lpTokens(uint256)": "1bb5e2dc",
    "numPools()": "35c62bc2",
    "poolIdxForPair(address,address)": "8ae93f0b",
    "setLiquidityRamp(address)": "23bae8a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PoolManager__PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManager__PoolExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManager__Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"thatToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"name\":\"lpTokens\",\"outputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"poolIdxForPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"_liquidityRamp\",\"type\":\"address\"}],\"name\":\"setLiquidityRamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the methods necessary for pool management.\",\"kind\":\"dev\",\"methods\":{\"createPool(address,address)\":{\"details\":\"Cannot create a pool that already exists.\",\"params\":{\"_thatToken\":\"The second token of the token pair.\",\"_thisToken\":\"The first token of the token pair.\"},\"returns\":{\"poolIdx\":\"The index of the newly created pool.\"}},\"getTokens(uint256)\":{\"details\":\"Throws an error if the pool does not exist.\",\"params\":{\"poolIdx\":\"The index of the liquidity pool.\"},\"returns\":{\"thatToken\":\"The second token in the liquidity pool.\",\"thisToken\":\"The first token in the liquidity pool.\"}},\"lpTokens(uint256)\":{\"params\":{\"poolIdx\":\"The index of the liquidity pool.\"},\"returns\":{\"_0\":\"The ILPToken contract for the given pool index.\"}},\"numPools()\":{\"returns\":{\"_0\":\"The total number of liquidity pools.\"}},\"poolIdxForPair(address,address)\":{\"params\":{\"tokenA\":\"The first token in the pair.\",\"tokenB\":\"The second token in the pair.\"},\"returns\":{\"_0\":\"The index of the pool for the token pair.\"}},\"setLiquidityRamp(address)\":{\"details\":\"Only callable by the contract owner. Address cannot be changed once set.\",\"params\":{\"_liquidityRamp\":\"The address of the LiquidityRamp contract.\"}}},\"title\":\"IPoolManager Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPool(address,address)\":{\"notice\":\"Create a new liquidity pool for a given token pair.\"},\"getTokens(uint256)\":{\"notice\":\"Retrieve the tokens for a specific liquidity pool.\"},\"lpTokens(uint256)\":{\"notice\":\"Retrieve the LP Token contract for a given pool index.\"},\"numPools()\":{\"notice\":\"Get the total number of pools.\"},\"poolIdxForPair(address,address)\":{\"notice\":\"Fetch the pool index for a given token pair.\"},\"setLiquidityRamp(address)\":{\"notice\":\"Set the LiquidityRamp contract address.\"}},\"notice\":\"Interface for the PoolManager contract, responsible for creating and managing liquidity pools.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c\",\"dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x757b3d4e8f07444ab9cdd82b560eb4d06e92e50c668ef0fb2eb550442f54c295\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://8181ee22ce05ac0d6295f431c2974ffc97c33cff6768aeb1c8e79ce1c1270471\",\"dweb:/ipfs/QmWW4MY4j3aSTkqNuezvKYSR2mJ84mm2WzGtMJP1dGSoGk\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xdd269676f741bb101ae0224e83b7c1d85e0785694eb60383d914cfbe163abafa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4c07852bf5526250ead721482352e98bea9d2a61272926b11b5d94432b1c5cb\",\"dweb:/ipfs/QmP3RjTdf71xFJdgbCUc7YUDHxXgv17CLAXpvuLZmCQxiR\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0xb4223304961c3c8af8032bcc75f25812840e93df586bc4dfac79d2137473a794\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://0c988c89e36868504064b21a6e0977a1d0141cb7115cbd8d4c06e3061829079b\",\"dweb:/ipfs/QmR5i3XrjnbHu94Mft1wAatPDWd6DDh72EXJMMGzy6tpjD\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x68af625f740b481c65f9d98e0100c91bb76b777064995c29e7f30f1069b3520b\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://acc6241fe72ec17057ba5c176c7a44260926ab29564e0719d208875714353089\",\"dweb:/ipfs/QmXFvyseX7Nh7PofX8iLS134zKw5RSS53PgDuejrEFEBq8\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x0a1cb5ff0327d32e28e0f82808d74d494bb103c1ddcbe611f8f17ff5991d01d0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://0654168f8a1a9388fef765dd41d263803ef7eb537175e3bb51b24f0c8b452eed\",\"dweb:/ipfs/QmQMGpMuHyAnYsfcJkQk5Q1tKinCJbchaJzBWX5mCmkz6C\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x47f671f5d2c9b1f51b3857b12c5528f76c4161367d11e5f67861cec6a0c67d24\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://34f309ab690eb906c3a59f8ef90567d3600f5b793f95d8e006a845b78b00a4bb\",\"dweb:/ipfs/Qmc3TVsT6XmaHaVzzUtg7Ln9EaUxJPv9yNPtoudJQrPuAU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__PoolDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__PoolExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "thatToken",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpTokens",
          "outputs": [
            {
              "internalType": "contract ILPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numPools",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolIdxForPair",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "_liquidityRamp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityRamp"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createPool(address,address)": {
            "details": "Cannot create a pool that already exists.",
            "params": {
              "_thatToken": "The second token of the token pair.",
              "_thisToken": "The first token of the token pair."
            },
            "returns": {
              "poolIdx": "The index of the newly created pool."
            }
          },
          "getTokens(uint256)": {
            "details": "Throws an error if the pool does not exist.",
            "params": {
              "poolIdx": "The index of the liquidity pool."
            },
            "returns": {
              "thatToken": "The second token in the liquidity pool.",
              "thisToken": "The first token in the liquidity pool."
            }
          },
          "lpTokens(uint256)": {
            "params": {
              "poolIdx": "The index of the liquidity pool."
            },
            "returns": {
              "_0": "The ILPToken contract for the given pool index."
            }
          },
          "numPools()": {
            "returns": {
              "_0": "The total number of liquidity pools."
            }
          },
          "poolIdxForPair(address,address)": {
            "params": {
              "tokenA": "The first token in the pair.",
              "tokenB": "The second token in the pair."
            },
            "returns": {
              "_0": "The index of the pool for the token pair."
            }
          },
          "setLiquidityRamp(address)": {
            "details": "Only callable by the contract owner. Address cannot be changed once set.",
            "params": {
              "_liquidityRamp": "The address of the LiquidityRamp contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createPool(address,address)": {
            "notice": "Create a new liquidity pool for a given token pair."
          },
          "getTokens(uint256)": {
            "notice": "Retrieve the tokens for a specific liquidity pool."
          },
          "lpTokens(uint256)": {
            "notice": "Retrieve the LP Token contract for a given pool index."
          },
          "numPools()": {
            "notice": "Get the total number of pools."
          },
          "poolIdxForPair(address,address)": {
            "notice": "Fetch the pool index for a given token pair."
          },
          "setLiquidityRamp(address)": {
            "notice": "Set the LiquidityRamp contract address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IPoolManager.sol": "IPoolManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7",
        "urls": [
          "bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d",
          "dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb",
        "urls": [
          "bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96",
          "dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9",
        "urls": [
          "bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6",
          "dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc",
        "urls": [
          "bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c",
          "dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x757b3d4e8f07444ab9cdd82b560eb4d06e92e50c668ef0fb2eb550442f54c295",
        "urls": [
          "bzz-raw://8181ee22ce05ac0d6295f431c2974ffc97c33cff6768aeb1c8e79ce1c1270471",
          "dweb:/ipfs/QmWW4MY4j3aSTkqNuezvKYSR2mJ84mm2WzGtMJP1dGSoGk"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xdd269676f741bb101ae0224e83b7c1d85e0785694eb60383d914cfbe163abafa",
        "urls": [
          "bzz-raw://f4c07852bf5526250ead721482352e98bea9d2a61272926b11b5d94432b1c5cb",
          "dweb:/ipfs/QmP3RjTdf71xFJdgbCUc7YUDHxXgv17CLAXpvuLZmCQxiR"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0xb4223304961c3c8af8032bcc75f25812840e93df586bc4dfac79d2137473a794",
        "urls": [
          "bzz-raw://0c988c89e36868504064b21a6e0977a1d0141cb7115cbd8d4c06e3061829079b",
          "dweb:/ipfs/QmR5i3XrjnbHu94Mft1wAatPDWd6DDh72EXJMMGzy6tpjD"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x68af625f740b481c65f9d98e0100c91bb76b777064995c29e7f30f1069b3520b",
        "urls": [
          "bzz-raw://acc6241fe72ec17057ba5c176c7a44260926ab29564e0719d208875714353089",
          "dweb:/ipfs/QmXFvyseX7Nh7PofX8iLS134zKw5RSS53PgDuejrEFEBq8"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x0a1cb5ff0327d32e28e0f82808d74d494bb103c1ddcbe611f8f17ff5991d01d0",
        "urls": [
          "bzz-raw://0654168f8a1a9388fef765dd41d263803ef7eb537175e3bb51b24f0c8b452eed",
          "dweb:/ipfs/QmQMGpMuHyAnYsfcJkQk5Q1tKinCJbchaJzBWX5mCmkz6C"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x47f671f5d2c9b1f51b3857b12c5528f76c4161367d11e5f67861cec6a0c67d24",
        "urls": [
          "bzz-raw://34f309ab690eb906c3a59f8ef90567d3600f5b793f95d8e006a845b78b00a4bb",
          "dweb:/ipfs/Qmc3TVsT6XmaHaVzzUtg7Ln9EaUxJPv9yNPtoudJQrPuAU"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IPoolManager.sol",
    "id": 62792,
    "exportedSymbols": {
      "IERC20": [
        48295
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "IVotes": [
        47472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:2515:86",
    "nodes": [
      {
        "id": 62723,
        "nodeType": "PragmaDirective",
        "src": "36:24:86",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 62724,
        "nodeType": "ImportDirective",
        "src": "62:42:86",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityRamp.sol",
        "file": "../interfaces/ILiquidityRamp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62792,
        "sourceUnit": 62722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62725,
        "nodeType": "ImportDirective",
        "src": "105:36:86",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPToken.sol",
        "file": "../interfaces/ILPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 62792,
        "sourceUnit": 62485,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62791,
        "nodeType": "ContractDefinition",
        "src": "364:2186:86",
        "nodes": [
          {
            "id": 62728,
            "nodeType": "ErrorDefinition",
            "src": "460:34:86",
            "nodes": [],
            "errorSelector": "19b828f3",
            "name": "PoolManager__Unauthorized",
            "nameLocation": "466:25:86",
            "parameters": {
              "id": 62727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:2:86"
            }
          },
          {
            "id": 62730,
            "nodeType": "ErrorDefinition",
            "src": "499:32:86",
            "nodes": [],
            "errorSelector": "aa684b23",
            "name": "PoolManager__PoolExists",
            "nameLocation": "505:23:86",
            "parameters": {
              "id": 62729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:2:86"
            }
          },
          {
            "id": 62732,
            "nodeType": "ErrorDefinition",
            "src": "536:38:86",
            "nodes": [],
            "errorSelector": "cebecd7b",
            "name": "PoolManager__PoolDoesNotExist",
            "nameLocation": "542:29:86",
            "parameters": {
              "id": 62731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:2:86"
            }
          },
          {
            "id": 62739,
            "nodeType": "FunctionDefinition",
            "src": "808:66:86",
            "nodes": [],
            "documentation": {
              "id": 62733,
              "nodeType": "StructuredDocumentation",
              "src": "580:223:86",
              "text": " @notice Set the LiquidityRamp contract address.\n @dev Only callable by the contract owner. Address cannot be changed once set.\n @param _liquidityRamp The address of the LiquidityRamp contract."
            },
            "functionSelector": "23bae8a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidityRamp",
            "nameLocation": "817:16:86",
            "parameters": {
              "id": 62737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62736,
                  "mutability": "mutable",
                  "name": "_liquidityRamp",
                  "nameLocation": "849:14:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62739,
                  "src": "834:29:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                    "typeString": "contract ILiquidityRamp"
                  },
                  "typeName": {
                    "id": 62735,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62734,
                      "name": "ILiquidityRamp",
                      "nameLocations": [
                        "834:14:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62721,
                      "src": "834:14:86"
                    },
                    "referencedDeclaration": 62721,
                    "src": "834:14:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:31:86"
            },
            "returnParameters": {
              "id": 62738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:0:86"
            },
            "scope": 62791,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62751,
            "nodeType": "FunctionDefinition",
            "src": "1198:115:86",
            "nodes": [],
            "documentation": {
              "id": 62740,
              "nodeType": "StructuredDocumentation",
              "src": "880:313:86",
              "text": " @notice Create a new liquidity pool for a given token pair.\n @dev Cannot create a pool that already exists.\n @param _thisToken The first token of the token pair.\n @param _thatToken The second token of the token pair.\n @return poolIdx The index of the newly created pool."
            },
            "functionSelector": "e3433615",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "1207:10:86",
            "parameters": {
              "id": 62747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62743,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "1234:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62751,
                  "src": "1227:17:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62742,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62741,
                      "name": "IERC20",
                      "nameLocations": [
                        "1227:6:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1227:6:86"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1227:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62746,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "1261:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62751,
                  "src": "1254:17:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62745,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62744,
                      "name": "IERC20",
                      "nameLocations": [
                        "1254:6:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1254:6:86"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1254:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1217:60:86"
            },
            "returnParameters": {
              "id": 62750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62749,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1304:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62751,
                  "src": "1296:15:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1295:17:86"
            },
            "scope": 62791,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62763,
            "nodeType": "FunctionDefinition",
            "src": "1641:109:86",
            "nodes": [],
            "documentation": {
              "id": 62752,
              "nodeType": "StructuredDocumentation",
              "src": "1319:317:86",
              "text": " @notice Retrieve the tokens for a specific liquidity pool.\n @dev Throws an error if the pool does not exist.\n @param poolIdx The index of the liquidity pool.\n @return thisToken The first token in the liquidity pool.\n @return thatToken The second token in the liquidity pool."
            },
            "functionSelector": "d3c9cc26",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nameLocation": "1650:9:86",
            "parameters": {
              "id": 62755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62754,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1677:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62763,
                  "src": "1669:15:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1659:31:86"
            },
            "returnParameters": {
              "id": 62762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62758,
                  "mutability": "mutable",
                  "name": "thisToken",
                  "nameLocation": "1721:9:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62763,
                  "src": "1714:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62757,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62756,
                      "name": "IERC20",
                      "nameLocations": [
                        "1714:6:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1714:6:86"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1714:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62761,
                  "mutability": "mutable",
                  "name": "thatToken",
                  "nameLocation": "1739:9:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62763,
                  "src": "1732:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62759,
                      "name": "IERC20",
                      "nameLocations": [
                        "1732:6:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1732:6:86"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1732:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1713:36:86"
            },
            "scope": 62791,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62769,
            "nodeType": "FunctionDefinition",
            "src": "1870:52:86",
            "nodes": [],
            "documentation": {
              "id": 62764,
              "nodeType": "StructuredDocumentation",
              "src": "1756:109:86",
              "text": " @notice Get the total number of pools.\n @return The total number of liquidity pools."
            },
            "functionSelector": "35c62bc2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numPools",
            "nameLocation": "1879:8:86",
            "parameters": {
              "id": 62765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1887:2:86"
            },
            "returnParameters": {
              "id": 62768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62769,
                  "src": "1913:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:9:86"
            },
            "scope": 62791,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62781,
            "nodeType": "FunctionDefinition",
            "src": "2162:108:86",
            "nodes": [],
            "documentation": {
              "id": 62770,
              "nodeType": "StructuredDocumentation",
              "src": "1928:229:86",
              "text": " @notice Fetch the pool index for a given token pair.\n @param tokenA The first token in the pair.\n @param tokenB The second token in the pair.\n @return The index of the pool for the token pair."
            },
            "functionSelector": "8ae93f0b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolIdxForPair",
            "nameLocation": "2171:14:86",
            "parameters": {
              "id": 62777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62773,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2202:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62781,
                  "src": "2195:13:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62772,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62771,
                      "name": "IERC20",
                      "nameLocations": [
                        "2195:6:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2195:6:86"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2195:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62776,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2225:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62781,
                  "src": "2218:13:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 62775,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62774,
                      "name": "IERC20",
                      "nameLocations": [
                        "2218:6:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2218:6:86"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2218:6:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2185:52:86"
            },
            "returnParameters": {
              "id": 62780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62781,
                  "src": "2261:7:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2260:9:86"
            },
            "scope": 62791,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62790,
            "nodeType": "FunctionDefinition",
            "src": "2480:68:86",
            "nodes": [],
            "documentation": {
              "id": 62782,
              "nodeType": "StructuredDocumentation",
              "src": "2276:199:86",
              "text": " @notice Retrieve the LP Token contract for a given pool index.\n @param poolIdx The index of the liquidity pool.\n @return The ILPToken contract for the given pool index."
            },
            "functionSelector": "1bb5e2dc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lpTokens",
            "nameLocation": "2489:8:86",
            "parameters": {
              "id": 62785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62784,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "2506:7:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 62790,
                  "src": "2498:15:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:7:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2497:17:86"
            },
            "returnParameters": {
              "id": 62789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62790,
                  "src": "2538:8:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILPToken_$62484",
                    "typeString": "contract ILPToken"
                  },
                  "typeName": {
                    "id": 62787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62786,
                      "name": "ILPToken",
                      "nameLocations": [
                        "2538:8:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62484,
                      "src": "2538:8:86"
                    },
                    "referencedDeclaration": 62484,
                    "src": "2538:8:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62484",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:10:86"
            },
            "scope": 62791,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPoolManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 62726,
          "nodeType": "StructuredDocumentation",
          "src": "143:220:86",
          "text": " @title IPoolManager Interface\n @notice Interface for the PoolManager contract, responsible for creating and managing liquidity pools.\n @dev This interface defines the methods necessary for pool management."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          62791
        ],
        "name": "IPoolManager",
        "nameLocation": "374:12:86",
        "scope": 62792,
        "usedErrors": [
          62728,
          62730,
          62732
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 86
}