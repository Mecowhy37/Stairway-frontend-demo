{
  "abi": [
    {
      "inputs": [],
      "name": "PoolManager__PoolDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolManager__PoolExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolManager__Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "thatToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolIdx",
          "type": "uint256"
        }
      ],
      "name": "lpTokens",
      "outputs": [
        {
          "internalType": "contract ILPToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "poolIdxForPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "_liquidityRamp",
          "type": "address"
        }
      ],
      "name": "setLiquidityRamp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createPool(address,address)": "e3433615",
    "getTokens(uint256)": "d3c9cc26",
    "lpTokens(uint256)": "1bb5e2dc",
    "numPools()": "35c62bc2",
    "poolIdxForPair(address,address)": "8ae93f0b",
    "setLiquidityRamp(address)": "23bae8a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PoolManager__PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManager__PoolExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolManager__Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"thatToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIdx\",\"type\":\"uint256\"}],\"name\":\"lpTokens\",\"outputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"poolIdxForPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"_liquidityRamp\",\"type\":\"address\"}],\"name\":\"setLiquidityRamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This interface defines the methods necessary for pool management.\",\"kind\":\"dev\",\"methods\":{\"createPool(address,address)\":{\"details\":\"Cannot create a pool that already exists.\",\"params\":{\"_thatToken\":\"The second token of the token pair.\",\"_thisToken\":\"The first token of the token pair.\"},\"returns\":{\"poolIdx\":\"The index of the newly created pool.\"}},\"getTokens(uint256)\":{\"details\":\"Throws an error if the pool does not exist.\",\"params\":{\"poolIdx\":\"The index of the liquidity pool.\"},\"returns\":{\"thatToken\":\"The second token in the liquidity pool.\",\"thisToken\":\"The first token in the liquidity pool.\"}},\"lpTokens(uint256)\":{\"params\":{\"poolIdx\":\"The index of the liquidity pool.\"},\"returns\":{\"_0\":\"The ILPToken contract for the given pool index.\"}},\"numPools()\":{\"returns\":{\"_0\":\"The total number of liquidity pools.\"}},\"poolIdxForPair(address,address)\":{\"params\":{\"tokenA\":\"The first token in the pair.\",\"tokenB\":\"The second token in the pair.\"},\"returns\":{\"_0\":\"The index of the pool for the token pair.\"}},\"setLiquidityRamp(address)\":{\"details\":\"Only callable by the contract owner. Address cannot be changed once set.\",\"params\":{\"_liquidityRamp\":\"The address of the LiquidityRamp contract.\"}}},\"title\":\"IPoolManager Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPool(address,address)\":{\"notice\":\"Create a new liquidity pool for a given token pair.\"},\"getTokens(uint256)\":{\"notice\":\"Retrieve the tokens for a specific liquidity pool.\"},\"lpTokens(uint256)\":{\"notice\":\"Retrieve the LP Token contract for a given pool index.\"},\"numPools()\":{\"notice\":\"Get the total number of pools.\"},\"poolIdxForPair(address,address)\":{\"notice\":\"Fetch the pool index for a given token pair.\"},\"setLiquidityRamp(address)\":{\"notice\":\"Set the LiquidityRamp contract address.\"}},\"notice\":\"Interface for the PoolManager contract, responsible for creating and managing liquidity pools.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db\",\"dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811\",\"dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda\",\"dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x0264712ad2eba36671aee3979abefede4a8e5bfe539961a0380dcfe9b1119eaf\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://e4deac1d33016f25b42ef9b5a4afa876c57aadeb55f41179218ac67d9540d1ab\",\"dweb:/ipfs/QmX2oZUwHjHDnYgLsPArqwELN6H9WwAm97vVBia9nku8zB\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7\",\"dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45\",\"dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0x3f24ebc519156188d822530d4741e72d094148db272fbd18e9b1844f567bc39c\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://485407fb11d8a1df28edb835942a0c52d8f9cb3cbee7c75592c0108087f303bf\",\"dweb:/ipfs/QmSctQ3J8B3D6pqRqNddByiJSdtghWTCwy6Tgmr45T1zLP\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x4f09f0de3214e5015dcdfd33ab4e292bc4cd873666a9d4d929f20381d159dbf0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://937d7a757974053ed11ff81f1ccf72cec416b6fecc3603b3e698dbbe1c1b6b9d\",\"dweb:/ipfs/QmVwCPNmQtNoHYNAwDxSdr7u4c8EzfgfnuM1YArddWojJq\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x23718695a445b8dd96aed059f600e3e34b68e9e4cc938051cb00739a22b6ac3b\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://251fbb01a896bbedc32fb1945a314c41502edbc2f40fde902a370c6aa271a3ab\",\"dweb:/ipfs/QmSxgtaY5KZyfzDaH2SR5suP48P1PHV5LggRt6Z8seL3MY\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x4129c6f776999e7fc1fb2b1c21580ae0572f22c81e2c357e3a0c740d4bba9264\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://c937502fe72334ee6bf672bc8d180e20418b6a6bb4fbf385fa0bd283b83ccdab\",\"dweb:/ipfs/QmZ6CqWUhxTVL2sN7ksp6ZMPmGpu88KJjc4UU6UQiRXfYr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__PoolDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__PoolExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PoolManager__Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "thatToken",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolIdx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpTokens",
          "outputs": [
            {
              "internalType": "contract ILPToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numPools",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenB",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolIdxForPair",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "_liquidityRamp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidityRamp"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createPool(address,address)": {
            "details": "Cannot create a pool that already exists.",
            "params": {
              "_thatToken": "The second token of the token pair.",
              "_thisToken": "The first token of the token pair."
            },
            "returns": {
              "poolIdx": "The index of the newly created pool."
            }
          },
          "getTokens(uint256)": {
            "details": "Throws an error if the pool does not exist.",
            "params": {
              "poolIdx": "The index of the liquidity pool."
            },
            "returns": {
              "thatToken": "The second token in the liquidity pool.",
              "thisToken": "The first token in the liquidity pool."
            }
          },
          "lpTokens(uint256)": {
            "params": {
              "poolIdx": "The index of the liquidity pool."
            },
            "returns": {
              "_0": "The ILPToken contract for the given pool index."
            }
          },
          "numPools()": {
            "returns": {
              "_0": "The total number of liquidity pools."
            }
          },
          "poolIdxForPair(address,address)": {
            "params": {
              "tokenA": "The first token in the pair.",
              "tokenB": "The second token in the pair."
            },
            "returns": {
              "_0": "The index of the pool for the token pair."
            }
          },
          "setLiquidityRamp(address)": {
            "details": "Only callable by the contract owner. Address cannot be changed once set.",
            "params": {
              "_liquidityRamp": "The address of the LiquidityRamp contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createPool(address,address)": {
            "notice": "Create a new liquidity pool for a given token pair."
          },
          "getTokens(uint256)": {
            "notice": "Retrieve the tokens for a specific liquidity pool."
          },
          "lpTokens(uint256)": {
            "notice": "Retrieve the LP Token contract for a given pool index."
          },
          "numPools()": {
            "notice": "Get the total number of pools."
          },
          "poolIdxForPair(address,address)": {
            "notice": "Fetch the pool index for a given token pair."
          },
          "setLiquidityRamp(address)": {
            "notice": "Set the LiquidityRamp contract address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/IPoolManager.sol": "IPoolManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193",
        "urls": [
          "bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db",
          "dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821",
        "urls": [
          "bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811",
          "dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f",
        "urls": [
          "bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3",
          "dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59",
        "urls": [
          "bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda",
          "dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e",
        "urls": [
          "bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5",
          "dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x0264712ad2eba36671aee3979abefede4a8e5bfe539961a0380dcfe9b1119eaf",
        "urls": [
          "bzz-raw://e4deac1d33016f25b42ef9b5a4afa876c57aadeb55f41179218ac67d9540d1ab",
          "dweb:/ipfs/QmX2oZUwHjHDnYgLsPArqwELN6H9WwAm97vVBia9nku8zB"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552",
        "urls": [
          "bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7",
          "dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def",
        "urls": [
          "bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45",
          "dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0x3f24ebc519156188d822530d4741e72d094148db272fbd18e9b1844f567bc39c",
        "urls": [
          "bzz-raw://485407fb11d8a1df28edb835942a0c52d8f9cb3cbee7c75592c0108087f303bf",
          "dweb:/ipfs/QmSctQ3J8B3D6pqRqNddByiJSdtghWTCwy6Tgmr45T1zLP"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x4f09f0de3214e5015dcdfd33ab4e292bc4cd873666a9d4d929f20381d159dbf0",
        "urls": [
          "bzz-raw://937d7a757974053ed11ff81f1ccf72cec416b6fecc3603b3e698dbbe1c1b6b9d",
          "dweb:/ipfs/QmVwCPNmQtNoHYNAwDxSdr7u4c8EzfgfnuM1YArddWojJq"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x23718695a445b8dd96aed059f600e3e34b68e9e4cc938051cb00739a22b6ac3b",
        "urls": [
          "bzz-raw://251fbb01a896bbedc32fb1945a314c41502edbc2f40fde902a370c6aa271a3ab",
          "dweb:/ipfs/QmSxgtaY5KZyfzDaH2SR5suP48P1PHV5LggRt6Z8seL3MY"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x4129c6f776999e7fc1fb2b1c21580ae0572f22c81e2c357e3a0c740d4bba9264",
        "urls": [
          "bzz-raw://c937502fe72334ee6bf672bc8d180e20418b6a6bb4fbf385fa0bd283b83ccdab",
          "dweb:/ipfs/QmZ6CqWUhxTVL2sN7ksp6ZMPmGpu88KJjc4UU6UQiRXfYr"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/IPoolManager.sol",
    "id": 63299,
    "exportedSymbols": {
      "IERC20": [
        48295
      ],
      "ILPToken": [
        62968
      ],
      "ILiquidityRamp": [
        63227
      ],
      "IPoolManager": [
        63298
      ],
      "ISwapManager": [
        63420
      ],
      "IVotes": [
        47472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2627:87",
    "nodes": [
      {
        "id": 63229,
        "nodeType": "PragmaDirective",
        "src": "37:24:87",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 63230,
        "nodeType": "ImportDirective",
        "src": "65:36:87",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPToken.sol",
        "file": "../interfaces/ILPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63299,
        "sourceUnit": 62969,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63231,
        "nodeType": "ImportDirective",
        "src": "103:40:87",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapManager.sol",
        "file": "../interfaces/ISwapManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63299,
        "sourceUnit": 63421,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63232,
        "nodeType": "ImportDirective",
        "src": "145:42:87",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityRamp.sol",
        "file": "../interfaces/ILiquidityRamp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63299,
        "sourceUnit": 63228,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63298,
        "nodeType": "ContractDefinition",
        "src": "417:2245:87",
        "nodes": [
          {
            "id": 63235,
            "nodeType": "ErrorDefinition",
            "src": "515:34:87",
            "nodes": [],
            "errorSelector": "19b828f3",
            "name": "PoolManager__Unauthorized",
            "nameLocation": "521:25:87",
            "parameters": {
              "id": 63234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:87"
            }
          },
          {
            "id": 63237,
            "nodeType": "ErrorDefinition",
            "src": "555:32:87",
            "nodes": [],
            "errorSelector": "aa684b23",
            "name": "PoolManager__PoolExists",
            "nameLocation": "561:23:87",
            "parameters": {
              "id": 63236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:2:87"
            }
          },
          {
            "id": 63239,
            "nodeType": "ErrorDefinition",
            "src": "593:38:87",
            "nodes": [],
            "errorSelector": "cebecd7b",
            "name": "PoolManager__PoolDoesNotExist",
            "nameLocation": "599:29:87",
            "parameters": {
              "id": 63238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:87"
            }
          },
          {
            "id": 63246,
            "nodeType": "FunctionDefinition",
            "src": "872:66:87",
            "nodes": [],
            "documentation": {
              "id": 63240,
              "nodeType": "StructuredDocumentation",
              "src": "639:227:87",
              "text": " @notice Set the LiquidityRamp contract address.\n @dev Only callable by the contract owner. Address cannot be changed once set.\n @param _liquidityRamp The address of the LiquidityRamp contract."
            },
            "functionSelector": "23bae8a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLiquidityRamp",
            "nameLocation": "881:16:87",
            "parameters": {
              "id": 63244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63243,
                  "mutability": "mutable",
                  "name": "_liquidityRamp",
                  "nameLocation": "913:14:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63246,
                  "src": "898:29:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityRamp_$63227",
                    "typeString": "contract ILiquidityRamp"
                  },
                  "typeName": {
                    "id": 63242,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63241,
                      "name": "ILiquidityRamp",
                      "nameLocations": [
                        "898:14:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63227,
                      "src": "898:14:87"
                    },
                    "referencedDeclaration": 63227,
                    "src": "898:14:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$63227",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:31:87"
            },
            "returnParameters": {
              "id": 63245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "937:0:87"
            },
            "scope": 63298,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63258,
            "nodeType": "FunctionDefinition",
            "src": "1271:118:87",
            "nodes": [],
            "documentation": {
              "id": 63247,
              "nodeType": "StructuredDocumentation",
              "src": "946:319:87",
              "text": " @notice Create a new liquidity pool for a given token pair.\n @dev Cannot create a pool that already exists.\n @param _thisToken The first token of the token pair.\n @param _thatToken The second token of the token pair.\n @return poolIdx The index of the newly created pool."
            },
            "functionSelector": "e3433615",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "1280:10:87",
            "parameters": {
              "id": 63254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63250,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "1308:10:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63258,
                  "src": "1301:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 63249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63248,
                      "name": "IERC20",
                      "nameLocations": [
                        "1301:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1301:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1301:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63253,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "1336:10:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63258,
                  "src": "1329:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 63252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63251,
                      "name": "IERC20",
                      "nameLocations": [
                        "1329:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1329:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1329:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1290:63:87"
            },
            "returnParameters": {
              "id": 63257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63256,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1380:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63258,
                  "src": "1372:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1372:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1371:17:87"
            },
            "scope": 63298,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63270,
            "nodeType": "FunctionDefinition",
            "src": "1726:111:87",
            "nodes": [],
            "documentation": {
              "id": 63259,
              "nodeType": "StructuredDocumentation",
              "src": "1397:323:87",
              "text": " @notice Retrieve the tokens for a specific liquidity pool.\n @dev Throws an error if the pool does not exist.\n @param poolIdx The index of the liquidity pool.\n @return thisToken The first token in the liquidity pool.\n @return thatToken The second token in the liquidity pool."
            },
            "functionSelector": "d3c9cc26",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nameLocation": "1735:9:87",
            "parameters": {
              "id": 63262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63261,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "1763:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63270,
                  "src": "1755:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1744:33:87"
            },
            "returnParameters": {
              "id": 63269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63265,
                  "mutability": "mutable",
                  "name": "thisToken",
                  "nameLocation": "1808:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63270,
                  "src": "1801:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 63264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63263,
                      "name": "IERC20",
                      "nameLocations": [
                        "1801:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1801:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1801:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63268,
                  "mutability": "mutable",
                  "name": "thatToken",
                  "nameLocation": "1826:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63270,
                  "src": "1819:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 63267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63266,
                      "name": "IERC20",
                      "nameLocations": [
                        "1819:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1819:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1819:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1800:36:87"
            },
            "scope": 63298,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63276,
            "nodeType": "FunctionDefinition",
            "src": "1963:52:87",
            "nodes": [],
            "documentation": {
              "id": 63271,
              "nodeType": "StructuredDocumentation",
              "src": "1845:112:87",
              "text": " @notice Get the total number of pools.\n @return The total number of liquidity pools."
            },
            "functionSelector": "35c62bc2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numPools",
            "nameLocation": "1972:8:87",
            "parameters": {
              "id": 63272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:2:87"
            },
            "returnParameters": {
              "id": 63275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63276,
                  "src": "2006:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:9:87"
            },
            "scope": 63298,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63288,
            "nodeType": "FunctionDefinition",
            "src": "2263:111:87",
            "nodes": [],
            "documentation": {
              "id": 63277,
              "nodeType": "StructuredDocumentation",
              "src": "2023:234:87",
              "text": " @notice Fetch the pool index for a given token pair.\n @param tokenA The first token in the pair.\n @param tokenB The second token in the pair.\n @return The index of the pool for the token pair."
            },
            "functionSelector": "8ae93f0b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolIdxForPair",
            "nameLocation": "2272:14:87",
            "parameters": {
              "id": 63284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63280,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2304:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63288,
                  "src": "2297:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 63279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63278,
                      "name": "IERC20",
                      "nameLocations": [
                        "2297:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2297:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2297:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63283,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2328:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63288,
                  "src": "2321:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 63282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63281,
                      "name": "IERC20",
                      "nameLocations": [
                        "2321:6:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2321:6:87"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2321:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2286:55:87"
            },
            "returnParameters": {
              "id": 63287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63288,
                  "src": "2365:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2364:9:87"
            },
            "scope": 63298,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63297,
            "nodeType": "FunctionDefinition",
            "src": "2591:68:87",
            "nodes": [],
            "documentation": {
              "id": 63289,
              "nodeType": "StructuredDocumentation",
              "src": "2382:203:87",
              "text": " @notice Retrieve the LP Token contract for a given pool index.\n @param poolIdx The index of the liquidity pool.\n @return The ILPToken contract for the given pool index."
            },
            "functionSelector": "1bb5e2dc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lpTokens",
            "nameLocation": "2600:8:87",
            "parameters": {
              "id": 63292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63291,
                  "mutability": "mutable",
                  "name": "poolIdx",
                  "nameLocation": "2617:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 63297,
                  "src": "2609:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2608:17:87"
            },
            "returnParameters": {
              "id": 63296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63297,
                  "src": "2649:8:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILPToken_$62968",
                    "typeString": "contract ILPToken"
                  },
                  "typeName": {
                    "id": 63294,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63293,
                      "name": "ILPToken",
                      "nameLocations": [
                        "2649:8:87"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62968,
                      "src": "2649:8:87"
                    },
                    "referencedDeclaration": 62968,
                    "src": "2649:8:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILPToken_$62968",
                      "typeString": "contract ILPToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2648:10:87"
            },
            "scope": 63298,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPoolManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 63233,
          "nodeType": "StructuredDocumentation",
          "src": "191:224:87",
          "text": " @title IPoolManager Interface\n @notice Interface for the PoolManager contract, responsible for creating and managing liquidity pools.\n @dev This interface defines the methods necessary for pool management."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          63298
        ],
        "name": "IPoolManager",
        "nameLocation": "427:12:87",
        "scope": 63299,
        "usedErrors": [
          63235,
          63237,
          63239
        ]
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 87
}