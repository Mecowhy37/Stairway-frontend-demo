{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        },
        {
          "internalType": "contract ILiquidityRamp",
          "name": "_liquidityRamp",
          "type": "address"
        },
        {
          "internalType": "contract ISwapManager",
          "name": "_swapManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LPToken__Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LPToken__UnknownToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLOCK_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clock",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityRamp",
      "outputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "otherToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapManager",
      "outputs": [
        {
          "internalType": "contract ISwapManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thatToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thisToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101e06040523480156200001257600080fd5b5060405162002a3c38038062002a3c833981016040819052620000359162000263565b6040518060400160405280601181526020017029ba30b4b93bb0bc902628102a37b5b2b760791b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601181526020017029ba30b4b93bb0bc902628102a37b5b2b760791b8152506040518060400160405280600681526020016505357592d4c560d41b8152508160039081620000d4919062000370565b506004620000e3828262000370565b50620000f591508390506005620001c5565b6101205262000106816006620001c5565b61014052815160208084019190912060e052815190820120610100524660a0526200019460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506001600160a01b039384166101a0529183166101c0528216610160521661018052620004b1565b6000602083511015620001e557620001dd83620001fe565b9050620001f8565b81620001f2848262000370565b5060ff90505b92915050565b600080829050601f8151111562000235578260405163305a27a960e01b81526004016200022c91906200043c565b60405180910390fd5b805162000242826200048c565b179392505050565b6001600160a01b03811681146200026057600080fd5b50565b600080600080608085870312156200027a57600080fd5b845162000287816200024a565b60208601519094506200029a816200024a565b6040860151909350620002ad816200024a565b6060860151909250620002c0816200024a565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002f657607f821691505b6020821081036200031757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036b57600081815260208120601f850160051c81016020861015620003465750805b601f850160051c820191505b81811015620003675782815560010162000352565b5050505b505050565b81516001600160401b038111156200038c576200038c620002cb565b620003a4816200039d8454620002e1565b846200031d565b602080601f831160018114620003dc5760008415620003c35750858301515b600019600386901b1c1916600185901b17855562000367565b600085815260208120601f198616915b828110156200040d57888601518255948401946001909101908401620003ec565b50858210156200042c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200046b578581018301518582016040015282016200044d565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003175760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516124da62000562600039600081816104b101528181610644015261066a0152600081816103d60152818161060a01526106a401526000818161038601526107ce0152600081816102f801526108000152600061099c01526000610971015260006112e3015260006112bb01526000611216015260006112400152600061126a01526124da6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063709d039d1161010f5780639ab24eb0116100a2578063c451463b11610071578063c451463b146104ac578063d505accf146104d3578063dd62ed3e146104e6578063f1127ed8146104f957600080fd5b80639ab24eb014610460578063a457c2d714610473578063a9059cbb14610486578063c3cda5201461049957600080fd5b806384b0196e116100de57806384b0196e1461040b5780638e539e8c1461042657806391ddadf41461043957806395d89b411461045857600080fd5b8063709d039d1461038157806370a08231146103a857806375f4f18e146103d15780637ecebe00146103f857600080fd5b80633a46b1a8116101875780634dfd324e116101565780634dfd324e146102f3578063587cde1e1461031a5780635c19a95c146103465780636fcfff451461035957600080fd5b80633a46b1a8146102b057806340c10f19146102c357806342966c68146102d85780634bf5d7e9146102eb57600080fd5b8063302bb94d116101c3578063302bb94d1461025b578063313ce567146102865780633644e51514610295578063395093511461029d57600080fd5b806306fdde03146101f5578063095ea7b31461021357806318160ddd1461023657806323b872dd14610248575b600080fd5b6101fd610536565b60405161020a9190612121565b60405180910390f35b610226610221366004612149565b6105c8565b604051901515815260200161020a565b6002545b60405190815260200161020a565b610226610256366004612175565b6105e2565b61026e6102693660046121b6565b610606565b6040516001600160a01b03909116815260200161020a565b6040516012815260200161020a565b61023a61070d565b6102266102ab366004612149565b61071c565b61023a6102be366004612149565b61073e565b6102d66102d1366004612149565b6107c3565b005b6102d66102e63660046121d3565b610874565b6101fd610881565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61026e6103283660046121b6565b6001600160a01b039081166000908152600960205260409020541690565b6102d66103543660046121b6565b610919565b61036c6103673660046121b6565b610923565b60405163ffffffff909116815260200161020a565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6103b63660046121b6565b6001600160a01b031660009081526020819052604090205490565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6104063660046121b6565b610945565b610413610963565b60405161020a97969594939291906121ec565b61023a6104343660046121d3565b6109ec565b610441610a53565b60405165ffffffffffff909116815260200161020a565b6101fd610a5e565b61023a61046e3660046121b6565b610a6d565b610226610481366004612149565b610aef565b610226610494366004612149565b610b6a565b6102d66104a7366004612298565b610b78565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b6102d66104e13660046122f2565b610cae565b61023a6104f4366004612360565b610e12565b61050c610507366004612399565b610e3d565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161020a565b606060038054610545906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610571906123d0565b80156105be5780601f10610593576101008083540402835291602001916105be565b820191906000526020600020905b8154815290600101906020018083116105a157829003601f168201915b5050505050905090565b6000336105d6818585610ec1565b60019150505b92915050565b6000336105f0858285610fe5565b6105fb85858561105f565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03160361066857507f0000000000000000000000000000000000000000000000000000000000000000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036106c857507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405162461bcd60e51b815260206004820152601560248201527426282a37b5b2b72fafaab735b737bbb72a37b5b2b760591b60448201526064015b60405180910390fd5b6000610717611209565b905090565b6000336105d681858561072f8383610e12565b610739919061241a565b610ec1565b6000610748610a53565b65ffffffffffff16821061079a5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6001600160a01b0383166000908152600a602052604090206107bc9083611334565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806108225750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6108665760405162461bcd60e51b81526020600482015260156024820152741314151bdad95b97d7d55b985d5d1a1bdc9a5e9959605a1b6044820152606401610704565b610870828261141d565b5050565b61087e3382611427565b50565b60604361088c610a53565b65ffffffffffff16146108e15760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610704565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61087e3382611431565b6001600160a01b0381166000908152600a60205260408120546105dc906114aa565b6001600160a01b0381166000908152600760205260408120546105dc565b6000606080828080836109977f00000000000000000000000000000000000000000000000000000000000000006005611513565b6109c27f00000000000000000000000000000000000000000000000000000000000000006006611513565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006109f6610a53565b65ffffffffffff168210610a485760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6105dc600b83611334565b6000610717436115be565b606060048054610545906123d0565b6001600160a01b0381166000908152600a60205260408120548015610adc576001600160a01b0383166000908152600a6020526040902080546000198301908110610aba57610aba61242d565b60009182526020909120015464010000000090046001600160e01b0316610adf565b60005b6001600160e01b03169392505050565b60003381610afd8286610e12565b905083811015610b5d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610704565b6105fb8286868403610ec1565b6000336105d681858561105f565b83421115610bc85760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610704565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610c4290610c3a9060a00160405160208183030381529060405280519060200120611625565b858585611652565b9050610c4d8161167a565b8614610c9b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610704565b610ca58188611431565b50505050505050565b83421115610cfe5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610704565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d2d8c61167a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d8882611625565b90506000610d9882878787611652565b9050896001600160a01b0316816001600160a01b031614610dfb5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610704565b610e068a8a8a610ec1565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610e8157610e8161242d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610f235760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610704565b6001600160a01b038216610f845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610704565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ff18484610e12565b90506000198114611059578181101561104c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610704565b6110598484848403610ec1565b50505050565b6001600160a01b0383166110c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610704565b6001600160a01b0382166111255760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610704565b6001600160a01b0383166000908152602081905260409020548181101561119d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610704565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110598484846116a7565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561126257507f000000000000000000000000000000000000000000000000000000000000000046145b1561128c57507f000000000000000000000000000000000000000000000000000000000000000090565b610717604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b81546000908181600581111561138e57600061134f846116b2565b6113599085612443565b600088815260209020909150869082015463ffffffff16111561137e5780915061138c565b61138981600161241a565b92505b505b808210156113db5760006113a2838361179a565b600088815260209020909150869082015463ffffffff1611156113c7578091506113d5565b6113d281600161241a565b92505b5061138e565b8015611407576000868152602090208101600019015464010000000090046001600160e01b031661140a565b60005b6001600160e01b03169695505050505050565b61087082826117b5565b610870828261183f565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611059828483611857565b600063ffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610704565b5090565b606060ff831461152d5761152683611994565b90506105dc565b818054611539906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611565906123d0565b80156115b25780601f10611587576101008083540402835291602001916115b2565b820191906000526020600020905b81548152906001019060200180831161159557829003601f168201915b505050505090506105dc565b600065ffffffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610704565b60006105dc611632611209565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611663878787876119d3565b9150915061167081611a97565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b6116a2838383611be1565b6000816000036116c457506000919050565b600060016116d184611c13565b901c6001901b905060018184816116ea576116ea612456565b048201901c9050600181848161170257611702612456565b048201901c9050600181848161171a5761171a612456565b048201901c9050600181848161173257611732612456565b048201901c9050600181848161174a5761174a612456565b048201901c9050600181848161176257611762612456565b048201901c9050600181848161177a5761177a612456565b048201901c90506107bc8182858161179457611794612456565b04611ca7565b60006117a9600284841861246c565b6107bc9084841661241a565b6117bf8282611cbd565b6002546001600160e01b0310156118315760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610704565b611059600b611d8483611d90565b6118498282611f05565b611059600b61203e83611d90565b816001600160a01b0316836001600160a01b0316141580156118795750600081115b156116a2576001600160a01b03831615611907576001600160a01b0383166000908152600a6020526040812081906118b49061203e85611d90565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516118fc929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156116a2576001600160a01b0382166000908152600a60205260408120819061193d90611d8485611d90565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611985929190918252602082015260400190565b60405180910390a25050505050565b606060006119a18361204a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a0a5750600090506003611a8e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a5e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8757600060019250925050611a8e565b9150600090505b94509492505050565b6000816004811115611aab57611aab61248e565b03611ab35750565b6001816004811115611ac757611ac761248e565b03611b145760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610704565b6002816004811115611b2857611b2861248e565b03611b755760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610704565b6003816004811115611b8957611b8961248e565b0361087e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610704565b6001600160a01b038381166000908152600960205260408082205485841683529120546116a292918216911683611857565b600080608083901c15611c2857608092831c92015b604083901c15611c3a57604092831c92015b602083901c15611c4c57602092831c92015b601083901c15611c5e57601092831c92015b600883901c15611c7057600892831c92015b600483901c15611c8257600492831c92015b600283901c15611c9457600292831c92015b600183901c156105dc5760010192915050565b6000818310611cb657816107bc565b5090919050565b6001600160a01b038216611d135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610704565b8060026000828254611d25919061241a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610870600083836116a7565b60006107bc828461241a565b82546000908190818115611ddd5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611df2565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611e1284868863ffffffff16565b9250600082118015611e3c5750611e27610a53565b65ffffffffffff16816000015163ffffffff16145b15611e8157611e4a83612072565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055611efb565b866040518060400160405280611ea5611e98610a53565b65ffffffffffff166114aa565b63ffffffff168152602001611eb986612072565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b038216611f655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610704565b6001600160a01b03821660009081526020819052604090205481811015611fd95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610704565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36116a2836000846116a7565b60006107bc8284612443565b600060ff8216601f8111156105dc57604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b0382111561150f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610704565b6000815180845260005b81811015612101576020818501810151868301820152016120e5565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107bc60208301846120db565b6001600160a01b038116811461087e57600080fd5b6000806040838503121561215c57600080fd5b823561216781612134565b946020939093013593505050565b60008060006060848603121561218a57600080fd5b833561219581612134565b925060208401356121a581612134565b929592945050506040919091013590565b6000602082840312156121c857600080fd5b81356107bc81612134565b6000602082840312156121e557600080fd5b5035919050565b60ff60f81b881681526000602060e08184015261220c60e084018a6120db565b838103604085015261221e818a6120db565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561227057835183529284019291840191600101612254565b50909c9b505050505050505050505050565b803560ff8116811461229357600080fd5b919050565b60008060008060008060c087890312156122b157600080fd5b86356122bc81612134565b955060208701359450604087013593506122d860608801612282565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561230d57600080fd5b873561231881612134565b9650602088013561232881612134565b9550604088013594506060880135935061234460808901612282565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561237357600080fd5b823561237e81612134565b9150602083013561238e81612134565b809150509250929050565b600080604083850312156123ac57600080fd5b82356123b781612134565b9150602083013563ffffffff8116811461238e57600080fd5b600181811c908216806123e457607f821691505b60208210810361169c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105dc576105dc612404565b634e487b7160e01b600052603260045260246000fd5b818103818111156105dc576105dc612404565b634e487b7160e01b600052601260045260246000fd5b60008261248957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea264697066735822122022ddb164c390feedd1fbf864a0203495fab379c8ab1b47e22caa45980b48737564736f6c63430008130033",
    "sourceMap": "457:3036:69:-:0;;;1508:373;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1860:52:40;;;;;;;;;;;;;-1:-1:-1;;;1860:52:40;;;1899:4;3244:440:55;;;;;;;;;;;;;-1:-1:-1;;;3244:440:55;;;2033:116:38;;;;;;;;;;;;;-1:-1:-1;;;2033:116:38;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:116:38;;;2108:5;2100;:13;;;;;;:::i;:::-;-1:-1:-1;2124:7:38;:17;2134:7;2124;:17;:::i;:::-;-1:-1:-1;3318:45:55;;-1:-1:-1;3318:4:55;;-1:-1:-1;3349:13:55;3318:30;:45::i;:::-;3310:53;;3385:51;:7;3419:16;3385:33;:51::i;:::-;3374:62;;3461:22;;;;;;;;;;3447:36;;3511:25;;;;;;3494:42;;3566:13;3549:30;;3615:23;4166:11;;4179:14;;4143:81;;;1967:95;4143:81;;;3907:25:93;3948:18;;;3941:34;;;;3991:18;;;3984:34;4195:13:55;4034:18:93;;;4027:34;4218:4:55;4077:19:93;;;4070:61;4106:7:55;;3879:19:93;;4143:81:55;;;;;;;;;;;;4133:92;;;;;;4126:99;;4051:182;;3615:23;3590:48;;-1:-1:-1;;3671:4:55;3649:27;;-1:-1:-1;;;;;;1740:22:69;;::::2;;::::0;1773;;::::2;;::::0;1806:30;::::2;;::::0;1847:26:::2;;::::0;457:3036;;2983:348:51;3079:11;3129:2;3113:5;3107:19;:24;3103:221;;;3155:20;3169:5;3155:13;:20::i;:::-;3148:27;;;;3103:221;3234:5;3208:46;3249:5;3234;3208:46;:::i;:::-;-1:-1:-1;1412:66:51;;-1:-1:-1;3103:221:51;2983:348;;;;:::o;1740:292::-;1805:11;1829:17;1855:3;1829:30;;1888:2;1874:4;:11;:16;1870:74;;;1928:3;1914:18;;-1:-1:-1;;;1914:18:51;;;;;;;;:::i;:::-;;;;;;;;1870:74;2011:11;;1994:13;2011:4;1994:13;:::i;:::-;1986:36;;1740:292;-1:-1:-1;;;1740:292:51:o;14:139:93:-;-1:-1:-1;;;;;97:31:93;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:764::-;333:6;341;349;357;410:3;398:9;389:7;385:23;381:33;378:53;;;427:1;424;417:12;378:53;459:9;453:16;478:39;511:5;478:39;:::i;:::-;586:2;571:18;;565:25;536:5;;-1:-1:-1;599:41:93;565:25;599:41;:::i;:::-;711:2;696:18;;690:25;659:7;;-1:-1:-1;724:41:93;690:25;724:41;:::i;:::-;836:2;821:18;;815:25;784:7;;-1:-1:-1;849:41:93;815:25;849:41;:::i;:::-;158:764;;;;-1:-1:-1;158:764:93;;-1:-1:-1;;158:764:93:o;927:127::-;988:10;983:3;979:20;976:1;969:31;1019:4;1016:1;1009:15;1043:4;1040:1;1033:15;1059:380;1138:1;1134:12;;;;1181;;;1202:61;;1256:4;1248:6;1244:17;1234:27;;1202:61;1309:2;1301:6;1298:14;1278:18;1275:38;1272:161;;1355:10;1350:3;1346:20;1343:1;1336:31;1390:4;1387:1;1380:15;1418:4;1415:1;1408:15;1272:161;;1059:380;;;:::o;1570:545::-;1672:2;1667:3;1664:11;1661:448;;;1708:1;1733:5;1729:2;1722:17;1778:4;1774:2;1764:19;1848:2;1836:10;1832:19;1829:1;1825:27;1819:4;1815:38;1884:4;1872:10;1869:20;1866:47;;;-1:-1:-1;1907:4:93;1866:47;1962:2;1957:3;1953:12;1950:1;1946:20;1940:4;1936:31;1926:41;;2017:82;2035:2;2028:5;2025:13;2017:82;;;2080:17;;;2061:1;2050:13;2017:82;;;2021:3;;;1661:448;1570:545;;;:::o;2291:1352::-;2411:10;;-1:-1:-1;;;;;2433:30:93;;2430:56;;;2466:18;;:::i;:::-;2495:97;2585:6;2545:38;2577:4;2571:11;2545:38;:::i;:::-;2539:4;2495:97;:::i;:::-;2647:4;;2711:2;2700:14;;2728:1;2723:663;;;;3430:1;3447:6;3444:89;;;-1:-1:-1;3499:19:93;;;3493:26;3444:89;-1:-1:-1;;2248:1:93;2244:11;;;2240:24;2236:29;2226:40;2272:1;2268:11;;;2223:57;3546:81;;2693:944;;2723:663;1517:1;1510:14;;;1554:4;1541:18;;-1:-1:-1;;2759:20:93;;;2877:236;2891:7;2888:1;2885:14;2877:236;;;2980:19;;;2974:26;2959:42;;3072:27;;;;3040:1;3028:14;;;;2907:19;;2877:236;;;2881:3;3141:6;3132:7;3129:19;3126:201;;;3202:19;;;3196:26;-1:-1:-1;;3285:1:93;3281:14;;;3297:3;3277:24;3273:37;3269:42;3254:58;3239:74;;3126:201;-1:-1:-1;;;;;3373:1:93;3357:14;;;3353:22;3340:36;;-1:-1:-1;2291:1352:93:o;4142:548::-;4254:4;4283:2;4312;4301:9;4294:21;4344:6;4338:13;4387:6;4382:2;4371:9;4367:18;4360:34;4412:1;4422:140;4436:6;4433:1;4430:13;4422:140;;;4531:14;;;4527:23;;4521:30;4497:17;;;4516:2;4493:26;4486:66;4451:10;;4422:140;;;4426:3;4611:1;4606:2;4597:6;4586:9;4582:22;4578:31;4571:42;4681:2;4674;4670:7;4665:2;4657:6;4653:15;4649:29;4638:9;4634:45;4630:54;4622:62;;;;4142:548;;;;:::o;4695:297::-;4813:12;;4860:4;4849:16;;;4843:23;;4813:12;4878:16;;4875:111;;;-1:-1:-1;;4952:4:93;4948:17;;;;4945:1;4941:25;4937:38;4926:50;;4695:297;-1:-1:-1;4695:297:93:o;:::-;457:3036:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c8063709d039d1161010f5780639ab24eb0116100a2578063c451463b11610071578063c451463b146104ac578063d505accf146104d3578063dd62ed3e146104e6578063f1127ed8146104f957600080fd5b80639ab24eb014610460578063a457c2d714610473578063a9059cbb14610486578063c3cda5201461049957600080fd5b806384b0196e116100de57806384b0196e1461040b5780638e539e8c1461042657806391ddadf41461043957806395d89b411461045857600080fd5b8063709d039d1461038157806370a08231146103a857806375f4f18e146103d15780637ecebe00146103f857600080fd5b80633a46b1a8116101875780634dfd324e116101565780634dfd324e146102f3578063587cde1e1461031a5780635c19a95c146103465780636fcfff451461035957600080fd5b80633a46b1a8146102b057806340c10f19146102c357806342966c68146102d85780634bf5d7e9146102eb57600080fd5b8063302bb94d116101c3578063302bb94d1461025b578063313ce567146102865780633644e51514610295578063395093511461029d57600080fd5b806306fdde03146101f5578063095ea7b31461021357806318160ddd1461023657806323b872dd14610248575b600080fd5b6101fd610536565b60405161020a9190612121565b60405180910390f35b610226610221366004612149565b6105c8565b604051901515815260200161020a565b6002545b60405190815260200161020a565b610226610256366004612175565b6105e2565b61026e6102693660046121b6565b610606565b6040516001600160a01b03909116815260200161020a565b6040516012815260200161020a565b61023a61070d565b6102266102ab366004612149565b61071c565b61023a6102be366004612149565b61073e565b6102d66102d1366004612149565b6107c3565b005b6102d66102e63660046121d3565b610874565b6101fd610881565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61026e6103283660046121b6565b6001600160a01b039081166000908152600960205260409020541690565b6102d66103543660046121b6565b610919565b61036c6103673660046121b6565b610923565b60405163ffffffff909116815260200161020a565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6103b63660046121b6565b6001600160a01b031660009081526020819052604090205490565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6104063660046121b6565b610945565b610413610963565b60405161020a97969594939291906121ec565b61023a6104343660046121d3565b6109ec565b610441610a53565b60405165ffffffffffff909116815260200161020a565b6101fd610a5e565b61023a61046e3660046121b6565b610a6d565b610226610481366004612149565b610aef565b610226610494366004612149565b610b6a565b6102d66104a7366004612298565b610b78565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b6102d66104e13660046122f2565b610cae565b61023a6104f4366004612360565b610e12565b61050c610507366004612399565b610e3d565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161020a565b606060038054610545906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610571906123d0565b80156105be5780601f10610593576101008083540402835291602001916105be565b820191906000526020600020905b8154815290600101906020018083116105a157829003601f168201915b5050505050905090565b6000336105d6818585610ec1565b60019150505b92915050565b6000336105f0858285610fe5565b6105fb85858561105f565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03160361066857507f0000000000000000000000000000000000000000000000000000000000000000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036106c857507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405162461bcd60e51b815260206004820152601560248201527426282a37b5b2b72fafaab735b737bbb72a37b5b2b760591b60448201526064015b60405180910390fd5b6000610717611209565b905090565b6000336105d681858561072f8383610e12565b610739919061241a565b610ec1565b6000610748610a53565b65ffffffffffff16821061079a5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6001600160a01b0383166000908152600a602052604090206107bc9083611334565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806108225750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6108665760405162461bcd60e51b81526020600482015260156024820152741314151bdad95b97d7d55b985d5d1a1bdc9a5e9959605a1b6044820152606401610704565b610870828261141d565b5050565b61087e3382611427565b50565b60604361088c610a53565b65ffffffffffff16146108e15760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610704565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61087e3382611431565b6001600160a01b0381166000908152600a60205260408120546105dc906114aa565b6001600160a01b0381166000908152600760205260408120546105dc565b6000606080828080836109977f00000000000000000000000000000000000000000000000000000000000000006005611513565b6109c27f00000000000000000000000000000000000000000000000000000000000000006006611513565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006109f6610a53565b65ffffffffffff168210610a485760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6105dc600b83611334565b6000610717436115be565b606060048054610545906123d0565b6001600160a01b0381166000908152600a60205260408120548015610adc576001600160a01b0383166000908152600a6020526040902080546000198301908110610aba57610aba61242d565b60009182526020909120015464010000000090046001600160e01b0316610adf565b60005b6001600160e01b03169392505050565b60003381610afd8286610e12565b905083811015610b5d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610704565b6105fb8286868403610ec1565b6000336105d681858561105f565b83421115610bc85760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610704565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610c4290610c3a9060a00160405160208183030381529060405280519060200120611625565b858585611652565b9050610c4d8161167a565b8614610c9b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610704565b610ca58188611431565b50505050505050565b83421115610cfe5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610704565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d2d8c61167a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d8882611625565b90506000610d9882878787611652565b9050896001600160a01b0316816001600160a01b031614610dfb5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610704565b610e068a8a8a610ec1565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610e8157610e8161242d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610f235760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610704565b6001600160a01b038216610f845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610704565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ff18484610e12565b90506000198114611059578181101561104c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610704565b6110598484848403610ec1565b50505050565b6001600160a01b0383166110c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610704565b6001600160a01b0382166111255760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610704565b6001600160a01b0383166000908152602081905260409020548181101561119d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610704565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110598484846116a7565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561126257507f000000000000000000000000000000000000000000000000000000000000000046145b1561128c57507f000000000000000000000000000000000000000000000000000000000000000090565b610717604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b81546000908181600581111561138e57600061134f846116b2565b6113599085612443565b600088815260209020909150869082015463ffffffff16111561137e5780915061138c565b61138981600161241a565b92505b505b808210156113db5760006113a2838361179a565b600088815260209020909150869082015463ffffffff1611156113c7578091506113d5565b6113d281600161241a565b92505b5061138e565b8015611407576000868152602090208101600019015464010000000090046001600160e01b031661140a565b60005b6001600160e01b03169695505050505050565b61087082826117b5565b610870828261183f565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611059828483611857565b600063ffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610704565b5090565b606060ff831461152d5761152683611994565b90506105dc565b818054611539906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611565906123d0565b80156115b25780601f10611587576101008083540402835291602001916115b2565b820191906000526020600020905b81548152906001019060200180831161159557829003601f168201915b505050505090506105dc565b600065ffffffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610704565b60006105dc611632611209565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611663878787876119d3565b9150915061167081611a97565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b6116a2838383611be1565b6000816000036116c457506000919050565b600060016116d184611c13565b901c6001901b905060018184816116ea576116ea612456565b048201901c9050600181848161170257611702612456565b048201901c9050600181848161171a5761171a612456565b048201901c9050600181848161173257611732612456565b048201901c9050600181848161174a5761174a612456565b048201901c9050600181848161176257611762612456565b048201901c9050600181848161177a5761177a612456565b048201901c90506107bc8182858161179457611794612456565b04611ca7565b60006117a9600284841861246c565b6107bc9084841661241a565b6117bf8282611cbd565b6002546001600160e01b0310156118315760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610704565b611059600b611d8483611d90565b6118498282611f05565b611059600b61203e83611d90565b816001600160a01b0316836001600160a01b0316141580156118795750600081115b156116a2576001600160a01b03831615611907576001600160a01b0383166000908152600a6020526040812081906118b49061203e85611d90565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516118fc929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156116a2576001600160a01b0382166000908152600a60205260408120819061193d90611d8485611d90565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611985929190918252602082015260400190565b60405180910390a25050505050565b606060006119a18361204a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a0a5750600090506003611a8e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a5e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8757600060019250925050611a8e565b9150600090505b94509492505050565b6000816004811115611aab57611aab61248e565b03611ab35750565b6001816004811115611ac757611ac761248e565b03611b145760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610704565b6002816004811115611b2857611b2861248e565b03611b755760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610704565b6003816004811115611b8957611b8961248e565b0361087e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610704565b6001600160a01b038381166000908152600960205260408082205485841683529120546116a292918216911683611857565b600080608083901c15611c2857608092831c92015b604083901c15611c3a57604092831c92015b602083901c15611c4c57602092831c92015b601083901c15611c5e57601092831c92015b600883901c15611c7057600892831c92015b600483901c15611c8257600492831c92015b600283901c15611c9457600292831c92015b600183901c156105dc5760010192915050565b6000818310611cb657816107bc565b5090919050565b6001600160a01b038216611d135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610704565b8060026000828254611d25919061241a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610870600083836116a7565b60006107bc828461241a565b82546000908190818115611ddd5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611df2565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611e1284868863ffffffff16565b9250600082118015611e3c5750611e27610a53565b65ffffffffffff16816000015163ffffffff16145b15611e8157611e4a83612072565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055611efb565b866040518060400160405280611ea5611e98610a53565b65ffffffffffff166114aa565b63ffffffff168152602001611eb986612072565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b038216611f655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610704565b6001600160a01b03821660009081526020819052604090205481811015611fd95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610704565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36116a2836000846116a7565b60006107bc8284612443565b600060ff8216601f8111156105dc57604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b0382111561150f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610704565b6000815180845260005b81811015612101576020818501810151868301820152016120e5565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107bc60208301846120db565b6001600160a01b038116811461087e57600080fd5b6000806040838503121561215c57600080fd5b823561216781612134565b946020939093013593505050565b60008060006060848603121561218a57600080fd5b833561219581612134565b925060208401356121a581612134565b929592945050506040919091013590565b6000602082840312156121c857600080fd5b81356107bc81612134565b6000602082840312156121e557600080fd5b5035919050565b60ff60f81b881681526000602060e08184015261220c60e084018a6120db565b838103604085015261221e818a6120db565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561227057835183529284019291840191600101612254565b50909c9b505050505050505050505050565b803560ff8116811461229357600080fd5b919050565b60008060008060008060c087890312156122b157600080fd5b86356122bc81612134565b955060208701359450604087013593506122d860608801612282565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561230d57600080fd5b873561231881612134565b9650602088013561232881612134565b9550604088013594506060880135935061234460808901612282565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561237357600080fd5b823561237e81612134565b9150602083013561238e81612134565b809150509250929050565b600080604083850312156123ac57600080fd5b82356123b781612134565b9150602083013563ffffffff8116811461238e57600080fd5b600181811c908216806123e457607f821691505b60208210810361169c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105dc576105dc612404565b634e487b7160e01b600052603260045260246000fd5b818103818111156105dc576105dc612404565b634e487b7160e01b600052601260045260246000fd5b60008261248957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea264697066735822122022ddb164c390feedd1fbf864a0203495fab379c8ab1b47e22caa45980b48737564736f6c63430008130033",
    "sourceMap": "457:3036:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4579:201;;;;;;:::i;:::-;;:::i;:::-;;;1288:14:93;;1281:22;1263:41;;1251:2;1236:18;4579:201:38;1123:187:93;3348:108:38;3436:12;;3348:108;;;1461:25:93;;;1449:2;1434:18;3348:108:38;1315:177:93;5360:261:38;;;;;;:::i;:::-;;:::i;2170:215:69:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2406:32:93;;;2388:51;;2376:2;2361:18;2170:215:69;2226:219:93;3190:93:38;;;3273:2;2592:36:93;;2580:2;2565:18;3190:93:38;2450:184:93;2947:115:40;;;:::i;6030:238:38:-;;;;;;:::i;:::-;;:::i;3560:251:41:-;;;;;;:::i;:::-;;:::i;2664:99:69:-;;;;;;:::i;:::-;;:::i;:::-;;2903:81;;;;;;:::i;:::-;;:::i;2097:258:41:-;;;:::i;542:45:69:-;;;;;2911:128:41;;;;;;:::i;:::-;-1:-1:-1;;;;;3012:19:41;;;2985:7;3012:19;;;:10;:19;;;;;;;;2911:128;6434:114;;;;;;:::i;:::-;;:::i;2667:151::-;;;;;;:::i;:::-;;:::i;:::-;;;3872:10:93;3860:23;;;3842:42;;3830:2;3815:18;2667:151:41;3698:192:93;644:41:69;;;;;3519:127:38;;;;;;:::i;:::-;-1:-1:-1;;;;;3620:18:38;3593:7;3620:18;;;;;;;;;;;;3519:127;741:33:69;;;;;2689:128:40;;;;;;:::i;:::-;;:::i;5137:657:55:-;;;:::i;:::-;;;;;;;;;;;;;:::i;4083:242:41:-;;;;;;:::i;:::-;;:::i;1859:120::-;;;:::i;:::-;;;5563:14:93;5551:27;;;5533:46;;5521:2;5506:18;1859:120:41;5389:196:93;2438:104:38;;;:::i;3123:248:41:-;;;;;;:::i;:::-;;:::i;6771:436:38:-;;;;;;:::i;:::-;;:::i;3852:193::-;;;;;;:::i;:::-;;:::i;6630:591:41:-;;;;;;:::i;:::-;;:::i;824:33:69:-;;;;;1978:645:40;;;;;;:::i;:::-;;:::i;4108:151:38:-;;;;;;:::i;:::-;;:::i;2437:150:41:-;;;;;;:::i;:::-;;:::i;:::-;;;;8130:13:93;;8145:10;8126:30;8108:49;;8217:4;8205:17;;;8199:24;-1:-1:-1;;;;;8195:50:93;8173:20;;;8166:80;;;;8081:18;2437:150:41;7904:348:93;2219:100:38;2273:13;2306:5;2299:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100;:::o;4579:201::-;4662:4;736:10:49;4718:32:38;736:10:49;4734:7:38;4743:6;4718:8;:32::i;:::-;4768:4;4761:11;;;4579:201;;;;;:::o;5360:261::-;5457:4;736:10:49;5515:38:38;5531:4;736:10:49;5546:6:38;5515:15;:38::i;:::-;5564:27;5574:4;5580:2;5584:6;5564:9;:27::i;:::-;-1:-1:-1;5609:4:38;;5360:261;-1:-1:-1;;;;5360:261:38:o;2170:215:69:-;2225:6;2257:9;-1:-1:-1;;;;;2248:18:69;:5;-1:-1:-1;;;;;2248:18:69;;2244:40;;-1:-1:-1;2275:9:69;;2170:215;-1:-1:-1;2170:215:69:o;2244:40::-;2308:9;-1:-1:-1;;;;;2299:18:69;:5;-1:-1:-1;;;;;2299:18:69;;2295:40;;-1:-1:-1;2326:9:69;;2170:215;-1:-1:-1;2170:215:69:o;2295:40::-;2346:31;;-1:-1:-1;;;2346:31:69;;8844:2:93;2346:31:69;;;8826:21:93;8883:2;8863:18;;;8856:30;-1:-1:-1;;;8902:18:93;;;8895:51;8963:18;;2346:31:69;;;;;;;;2947:115:40;3007:7;3034:20;:18;:20::i;:::-;3027:27;;2947:115;:::o;6030:238:38:-;6118:4;736:10:49;6174:64:38;736:10:49;6190:7:38;6227:10;6199:25;736:10:49;6190:7:38;6199:9;:25::i;:::-;:38;;;;:::i;:::-;6174:8;:64::i;3560:251:41:-;3656:7;3696;:5;:7::i;:::-;3684:19;;:9;:19;3676:57;;;;-1:-1:-1;;;3676:57:41;;9456:2:93;3676:57:41;;;9438:21:93;9495:2;9475:18;;;9468:30;-1:-1:-1;;;9514:18:93;;;9507:55;9579:18;;3676:57:41;9254:349:93;3676:57:41;-1:-1:-1;;;;;3770:21:41;;;;;;:12;:21;;;;;3751:52;;3793:9;3751:18;:52::i;:::-;3744:59;3560:251;-1:-1:-1;;;3560:251:41:o;2664:99:69:-;981:10;-1:-1:-1;;;;;1003:11:69;981:34;;;:91;;-1:-1:-1;1036:10:69;-1:-1:-1;;;;;1058:13:69;1036:36;;981:91;959:162;;;;-1:-1:-1;;;959:162:69;;9810:2:93;959:162:69;;;9792:21:93;9849:2;9829:18;;;9822:30;-1:-1:-1;;;9868:18:93;;;9861:51;9929:18;;959:162:69;9608:345:93;959:162:69;2738:17:::1;2744:2;2748:6;2738:5;:17::i;:::-;2664:99:::0;;:::o;2903:81::-;2951:25;2957:10;2969:6;2951:5;:25::i;:::-;2903:81;:::o;2097:258:41:-;2157:13;2252:12;2241:7;:5;:7::i;:::-;:23;;;2233:65;;;;-1:-1:-1;;;2233:65:41;;10160:2:93;2233:65:41;;;10142:21:93;10199:2;10179:18;;;10172:30;10238:31;10218:18;;;10211:59;10287:18;;2233:65:41;9958:353:93;2233:65:41;-1:-1:-1;2309:38:41;;;;;;;;;;;;;;;;;;2097:258::o;6434:114::-;6506:34;736:10:49;6530:9:41;6506;:34::i;2667:151::-;-1:-1:-1;;;;;2781:21:41;;2737:6;2781:21;;;:12;:21;;;;;:28;2763:47;;:17;:47::i;2689:128:40:-;-1:-1:-1;;;;;2785:14:40;;2758:7;2785:14;;;:7;:14;;;;;940::50;2785:24:40;848:114:50;5137:657:55;5258:13;5286:18;;5258:13;;;5286:18;5560:41;:5;5587:13;5560:26;:41::i;:::-;5616:47;:8;5646:16;5616:29;:47::i;:::-;5759:16;;;5742:1;5759:16;;;;;;;;;-1:-1:-1;;;5507:279:55;;;-1:-1:-1;5507:279:55;;-1:-1:-1;5678:13:55;;-1:-1:-1;5714:4:55;;-1:-1:-1;5742:1:55;-1:-1:-1;5759:16:55;-1:-1:-1;5507:279:55;-1:-1:-1;5137:657:55:o;4083:242:41:-;4168:7;4208;:5;:7::i;:::-;4196:19;;:9;:19;4188:57;;;;-1:-1:-1;;;4188:57:41;;9456:2:93;4188:57:41;;;9438:21:93;9495:2;9475:18;;;9468:30;-1:-1:-1;;;9514:18:93;;;9507:55;9579:18;;4188:57:41;9254:349:93;4188:57:41;4263:54;4282:23;4307:9;4263:18;:54::i;1859:120::-;1914:6;1940:31;1958:12;1940:17;:31::i;2438:104:38:-;2494:13;2527:7;2520:14;;;;;:::i;3123:248:41:-;-1:-1:-1;;;;;3230:21:41;;3196:7;3230:21;;;:12;:21;;;;;:28;3301:8;;:51;;-1:-1:-1;;;;;3316:21:41;;;;;;:12;:21;;;;;:30;;-1:-1:-1;;3338:7:41;;;3316:30;;;;;;:::i;:::-;;;;;;;;;;:36;;;;-1:-1:-1;;;;;3316:36:41;3301:51;;;3312:1;3301:51;-1:-1:-1;;;;;3294:58:41;;3123:248;-1:-1:-1;;;3123:248:41:o;6771:436:38:-;6864:4;736:10:49;6864:4:38;6947:25;736:10:49;6964:7:38;6947:9;:25::i;:::-;6920:52;;7011:15;6991:16;:35;;6983:85;;;;-1:-1:-1;;;6983:85:38;;10782:2:93;6983:85:38;;;10764:21:93;10821:2;10801:18;;;10794:30;10860:34;10840:18;;;10833:62;-1:-1:-1;;;10911:18:93;;;10904:35;10956:19;;6983:85:38;10580:401:93;6983:85:38;7104:60;7113:5;7120:7;7148:15;7129:16;:34;7104:8;:60::i;3852:193::-;3931:4;736:10:49;3987:28:38;736:10:49;4004:2:38;4008:6;3987:9;:28::i;6630:591:41:-;6857:6;6838:15;:25;;6830:67;;;;-1:-1:-1;;;6830:67:41;;11188:2:93;6830:67:41;;;11170:21:93;11227:2;11207:18;;;11200:30;11266:31;11246:18;;;11239:59;11315:18;;6830:67:41;10986:353:93;6830:67:41;6980:58;;;1472:71;6980:58;;;11575:25:93;-1:-1:-1;;;;;11636:32:93;;11616:18;;;11609:60;;;;11685:18;;;11678:34;;;11728:18;;;11721:34;;;6908:14:41;;6925:174;;6953:87;;11547:19:93;;6980:58:41;;;;;;;;;;;;6970:69;;;;;;6953:16;:87::i;:::-;7055:1;7071;7087;6925:13;:174::i;:::-;6908:191;;7127:17;7137:6;7127:9;:17::i;:::-;7118:5;:26;7110:64;;;;-1:-1:-1;;;7110:64:41;;11968:2:93;7110:64:41;;;11950:21:93;12007:2;11987:18;;;11980:30;12046:27;12026:18;;;12019:55;12091:18;;7110:64:41;11766:349:93;7110:64:41;7185:28;7195:6;7203:9;7185;:28::i;:::-;6819:402;6630:591;;;;;;:::o;1978:645:40:-;2222:8;2203:15;:27;;2195:69;;;;-1:-1:-1;;;2195:69:40;;12322:2:93;2195:69:40;;;12304:21:93;12361:2;12341:18;;;12334:30;12400:31;12380:18;;;12373:59;12449:18;;2195:69:40;12120:353:93;2195:69:40;2277:18;1153:95;2337:5;2344:7;2353:5;2360:16;2370:5;2360:9;:16::i;:::-;2308:79;;;;;;12765:25:93;;;;-1:-1:-1;;;;;12864:15:93;;;12844:18;;;12837:43;12916:15;;;;12896:18;;;12889:43;12948:18;;;12941:34;12991:19;;;12984:35;13035:19;;;13028:35;;;12737:19;;2308:79:40;;;;;;;;;;;;2298:90;;;;;;2277:111;;2401:12;2416:28;2433:10;2416:16;:28::i;:::-;2401:43;;2457:14;2474:28;2488:4;2494:1;2497;2500;2474:13;:28::i;:::-;2457:45;;2531:5;-1:-1:-1;;;;;2521:15:40;:6;-1:-1:-1;;;;;2521:15:40;;2513:58;;;;-1:-1:-1;;;2513:58:40;;13276:2:93;2513:58:40;;;13258:21:93;13315:2;13295:18;;;13288:30;13354:32;13334:18;;;13327:60;13404:18;;2513:58:40;13074:354:93;2513:58:40;2584:31;2593:5;2600:7;2609:5;2584:8;:31::i;:::-;2184:439;;;1978:645;;;;;;;:::o;4108:151:38:-;-1:-1:-1;;;;;4224:18:38;;;4197:7;4224:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4108:151::o;2437:150:41:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2553:21:41;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2546:33;;;;;;;;;2553:26;;2546:33;;;;;;;;;-1:-1:-1;;;;;2546:33:41;;;;;;;;;2437:150;-1:-1:-1;;;2437:150:41:o;10764:346:38:-;-1:-1:-1;;;;;10866:19:38;;10858:68;;;;-1:-1:-1;;;10858:68:38;;13635:2:93;10858:68:38;;;13617:21:93;13674:2;13654:18;;;13647:30;13713:34;13693:18;;;13686:62;-1:-1:-1;;;13764:18:93;;;13757:34;13808:19;;10858:68:38;13433:400:93;10858:68:38;-1:-1:-1;;;;;10945:21:38;;10937:68;;;;-1:-1:-1;;;10937:68:38;;14040:2:93;10937:68:38;;;14022:21:93;14079:2;14059:18;;;14052:30;14118:34;14098:18;;;14091:62;-1:-1:-1;;;14169:18:93;;;14162:32;14211:19;;10937:68:38;13838:398:93;10937:68:38;-1:-1:-1;;;;;11018:18:38;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11070:32;;1461:25:93;;;11070:32:38;;1434:18:93;11070:32:38;;;;;;;10764:346;;;:::o;11401:419::-;11502:24;11529:25;11539:5;11546:7;11529:9;:25::i;:::-;11502:52;;-1:-1:-1;;11569:16:38;:37;11565:248;;11651:6;11631:16;:26;;11623:68;;;;-1:-1:-1;;;11623:68:38;;14443:2:93;11623:68:38;;;14425:21:93;14482:2;14462:18;;;14455:30;14521:31;14501:18;;;14494:59;14570:18;;11623:68:38;14241:353:93;11623:68:38;11735:51;11744:5;11751:7;11779:6;11760:16;:25;11735:8;:51::i;:::-;11491:329;11401:419;;;:::o;7677:806::-;-1:-1:-1;;;;;7774:18:38;;7766:68;;;;-1:-1:-1;;;7766:68:38;;14801:2:93;7766:68:38;;;14783:21:93;14840:2;14820:18;;;14813:30;14879:34;14859:18;;;14852:62;-1:-1:-1;;;14930:18:93;;;14923:35;14975:19;;7766:68:38;14599:401:93;7766:68:38;-1:-1:-1;;;;;7853:16:38;;7845:64;;;;-1:-1:-1;;;7845:64:38;;15207:2:93;7845:64:38;;;15189:21:93;15246:2;15226:18;;;15219:30;15285:34;15265:18;;;15258:62;-1:-1:-1;;;15336:18:93;;;15329:33;15379:19;;7845:64:38;15005:399:93;7845:64:38;-1:-1:-1;;;;;7995:15:38;;7973:19;7995:15;;;;;;;;;;;8029:21;;;;8021:72;;;;-1:-1:-1;;;8021:72:38;;15611:2:93;8021:72:38;;;15593:21:93;15650:2;15630:18;;;15623:30;15689:34;15669:18;;;15662:62;-1:-1:-1;;;15740:18:93;;;15733:36;15786:19;;8021:72:38;15409:402:93;8021:72:38;-1:-1:-1;;;;;8129:15:38;;;:9;:15;;;;;;;;;;;8147:20;;;8129:38;;8347:13;;;;;;;;;;:23;;;;;;8399:26;;1461:25:93;;;8347:13:38;;8399:26;;1434:18:93;8399:26:38;;;;;;;8438:37;8458:4;8464:2;8468:6;8438:19;:37::i;3775:268:55:-;3828:7;3860:4;-1:-1:-1;;;;;3869:11:55;3852:28;;:63;;;;;3901:14;3884:13;:31;3852:63;3848:188;;;-1:-1:-1;3939:22:55;;3775:268::o;3848:188::-;4001:23;4143:81;;;1967:95;4143:81;;;17022:25:93;4166:11:55;17063:18:93;;;17056:34;;;;4179:14:55;17106:18:93;;;17099:34;4195:13:55;17149:18:93;;;17142:34;4218:4:55;17192:19:93;;;17185:61;4106:7:55;;16994:19:93;;4143:81:55;;;;;;;;;;;;4133:92;;;;;;4126:99;;4051:182;;4414:1934:41;5638:12;;4511:7;;;5638:12;5736:1;5727:10;;5723:249;;;5754:11;5777:17;5787:6;5777:9;:17::i;:::-;5768:26;;:6;:26;:::i;:::-;10909:25;10971:21;;;11038:4;11025:18;;5754:40;;-1:-1:-1;5851:9:41;;11021:28;;5813:35;;;:47;5809:152;;;5888:3;5881:10;;5809:152;;;5938:7;:3;5944:1;5938:7;:::i;:::-;5932:13;;5809:152;5739:233;5723:249;5997:4;5991:3;:10;5984:249;;;6018:11;6032:23;6045:3;6050:4;6032:12;:23::i;:::-;10909:25;10971:21;;;11038:4;11025:18;;6018:37;;-1:-1:-1;6112:9:41;;11021:28;;6074:35;;;:47;6070:152;;;6149:3;6142:10;;6070:152;;;6199:7;:3;6205:1;6199:7;:::i;:::-;6193:13;;6070:152;6003:230;5984:249;;;6277:9;;:52;;10909:25;10971:21;;;11038:4;11025:18;;11021:28;;-1:-1:-1;;11021:28:41;6293:36;;;;-1:-1:-1;;;;;6293:36:41;6277:52;;;6289:1;6277:52;-1:-1:-1;;;;;6270:59:41;;4414:1934;-1:-1:-1;;;;;;4414:1934:41:o;3266:103:69:-;3338:23;3350:2;3354:6;3338:11;:23::i;3377:113::-;3454:28;3466:7;3475:6;3454:11;:28::i;8658:388:41:-;-1:-1:-1;;;;;3012:19:41;;;8743:23;3012:19;;;:10;:19;;;;;;;;;;3620:18:38;;;;;;;8858:21:41;;;;:33;;;-1:-1:-1;;;;;;8858:33:41;;;;;;;8909:54;;3012:19;;;;;3620:18:38;;8858:33:41;;3012:19;;;8909:54;;8743:23;8909:54;8976:62;8993:15;9010:9;9021:16;8976;:62::i;15757:190:59:-;15813:6;15849:16;15840:25;;;15832:76;;;;-1:-1:-1;;;15832:76:59;;16151:2:93;15832:76:59;;;16133:21:93;16190:2;16170:18;;;16163:30;16229:34;16209:18;;;16202:62;-1:-1:-1;;;16280:18:93;;;16273:36;16326:19;;15832:76:59;15949:402:93;15832:76:59;-1:-1:-1;15933:5:59;15757:190::o;3467:274:51:-;3561:13;1412:66;3591:47;;3587:147;;3662:15;3671:5;3662:8;:15::i;:::-;3655:22;;;;3587:147;3717:5;3710:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14699:190:59;14755:6;14791:16;14782:25;;;14774:76;;;;-1:-1:-1;;;14774:76:59;;16558:2:93;14774:76:59;;;16540:21:93;16597:2;16577:18;;;16570:30;16636:34;16616:18;;;16609:62;-1:-1:-1;;;16687:18:93;;;16680:36;16733:19;;14774:76:59;16356:402:93;4875:167:55;4952:7;4979:55;5001:20;:18;:20::i;:::-;5023:10;8735:4:54;8729:11;-1:-1:-1;;;8754:23:54;;8807:4;8798:14;;8791:39;;;;8860:4;8851:14;;8844:34;8915:4;8900:20;;;8532:406;6748:236;6833:7;6854:17;6873:18;6895:25;6906:4;6912:1;6915;6918;6895:10;:25::i;:::-;6853:67;;;;6931:18;6943:5;6931:11;:18::i;:::-;-1:-1:-1;6967:9:54;6748:236;-1:-1:-1;;;;;6748:236:54:o;3200:207:40:-;-1:-1:-1;;;;;3321:14:40;;3260:15;3321:14;;;:7;:14;;;;;940::50;;1077:1;1059:19;;;;940:14;3382:17:40;3277:130;3200:207;;;:::o;12420:91:38:-;;;;:::o;3073:185:69:-;3207:43;3233:4;3239:2;3243:6;3207:25;:43::i;6681:1673:58:-;6729:7;6753:1;6758;6753:6;6749:47;;-1:-1:-1;6783:1:58;;6681:1673;-1:-1:-1;6681:1673:58:o;6749:47::-;7487:14;7521:1;7510:7;7515:1;7510:4;:7::i;:::-;:12;;7504:1;:19;;7487:36;;7989:1;7978:6;7974:1;:10;;;;;:::i;:::-;;7965:6;:19;7964:26;;7955:35;;8039:1;8028:6;8024:1;:10;;;;;:::i;:::-;;8015:6;:19;8014:26;;8005:35;;8089:1;8078:6;8074:1;:10;;;;;:::i;:::-;;8065:6;:19;8064:26;;8055:35;;8139:1;8128:6;8124:1;:10;;;;;:::i;:::-;;8115:6;:19;8114:26;;8105:35;;8189:1;8178:6;8174:1;:10;;;;;:::i;:::-;;8165:6;:19;8164:26;;8155:35;;8239:1;8228:6;8224:1;:10;;;;;:::i;:::-;;8215:6;:19;8214:26;;8205:35;;8289:1;8278:6;8274:1;:10;;;;;:::i;:::-;;8265:6;:19;8264:26;;8255:35;;8312:23;8316:6;8328;8324:1;:10;;;;;:::i;:::-;;8312:3;:23::i;838:156::-;900:7;975:11;985:1;976:5;;;975:11;:::i;:::-;965:21;;966:5;;;965:21;:::i;7527:290:41:-;7612:28;7624:7;7633:6;7612:11;:28::i;:::-;3436:12:38;;-1:-1:-1;;;;;;7659:29:41;7651:90;;;;-1:-1:-1;;;7651:90:41;;17813:2:93;7651:90:41;;;17795:21:93;17852:2;17832:18;;;17825:30;17891:34;17871:18;;;17864:62;-1:-1:-1;;;17942:18:93;;;17935:46;17998:19;;7651:90:41;17611:412:93;7651:90:41;7754:55;7771:23;7796:4;7802:6;7754:16;:55::i;7911:194::-;7996:28;8008:7;8017:6;7996:11;:28::i;:::-;8037:60;8054:23;8079:9;8090:6;8037:16;:60::i;9054:609::-;9152:3;-1:-1:-1;;;;;9145:10:41;:3;-1:-1:-1;;;;;9145:10:41;;;:24;;;;;9168:1;9159:6;:10;9145:24;9141:515;;;-1:-1:-1;;;;;9190:17:41;;;9186:224;;-1:-1:-1;;;;;9286:17:41;;9229;9286;;;:12;:17;;;;;9229;;9269:54;;9305:9;9316:6;9269:16;:54::i;:::-;9228:95;;;;9368:3;-1:-1:-1;;;;;9347:47:41;;9373:9;9384;9347:47;;;;;;18202:25:93;;;18258:2;18243:18;;18236:34;18190:2;18175:18;;18028:248;9347:47:41;;;;;;;;9209:201;;9186:224;-1:-1:-1;;;;;9430:17:41;;;9426:219;;-1:-1:-1;;;;;9526:17:41;;9469;9526;;;:12;:17;;;;;9469;;9509:49;;9545:4;9551:6;9509:16;:49::i;:::-;9468:90;;;;9603:3;-1:-1:-1;;;;;9582:47:41;;9608:9;9619;9582:47;;;;;;18202:25:93;;;18258:2;18243:18;;18236:34;18190:2;18175:18;;18028:248;9582:47:41;;;;;;;;9449:196;;9054:609;;;:::o;2121:415:51:-;2180:13;2206:11;2220:16;2231:4;2220:10;:16::i;:::-;2346:14;;;2357:2;2346:14;;;;;;;;;2206:30;;-1:-1:-1;2326:17:51;;2346:14;;;;;;;;;-1:-1:-1;;;2439:16:51;;;-1:-1:-1;2485:4:51;2476:14;;2469:28;;;;-1:-1:-1;2439:16:51;2121:415::o;5132:1477:54:-;5220:7;;6154:66;6141:79;;6137:163;;;-1:-1:-1;6253:1:54;;-1:-1:-1;6257:30:54;6237:51;;6137:163;6414:24;;;6397:14;6414:24;;;;;;;;;18508:25:93;;;18581:4;18569:17;;18549:18;;;18542:45;;;;18603:18;;;18596:34;;;18646:18;;;18639:34;;;6414:24:54;;18480:19:93;;6414:24:54;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6414:24:54;;-1:-1:-1;;6414:24:54;;;-1:-1:-1;;;;;;;6453:20:54;;6449:103;;6506:1;6510:29;6490:50;;;;;;;6449:103;6572:6;-1:-1:-1;6580:20:54;;-1:-1:-1;5132:1477:54;;;;;;;;:::o;592:521::-;670:20;661:5;:29;;;;;;;;:::i;:::-;;657:449;;592:521;:::o;657:449::-;768:29;759:5;:38;;;;;;;;:::i;:::-;;755:351;;814:34;;-1:-1:-1;;;814:34:54;;19018:2:93;814:34:54;;;19000:21:93;19057:2;19037:18;;;19030:30;19096:26;19076:18;;;19069:54;19140:18;;814:34:54;18816:348:93;755:351:54;879:35;870:5;:44;;;;;;;;:::i;:::-;;866:240;;931:41;;-1:-1:-1;;;931:41:54;;19371:2:93;931:41:54;;;19353:21:93;19410:2;19390:18;;;19383:30;19449:33;19429:18;;;19422:61;19500:18;;931:41:54;19169:355:93;866:240:54;1003:30;994:5;:39;;;;;;;;:::i;:::-;;990:116;;1050:44;;-1:-1:-1;;;1050:44:54;;19731:2:93;1050:44:54;;;19713:21:93;19770:2;19750:18;;;19743:30;19809:34;19789:18;;;19782:62;-1:-1:-1;;;19860:18:93;;;19853:32;19902:19;;1050:44:54;19529:398:93;8252:228:41;-1:-1:-1;;;;;3012:19:41;;;2985:7;3012:19;;;:10;:19;;;;;;;;;;;;;;;8416:56;;3012:19;;;;;8465:6;8416:16;:56::i;8831:1019:58:-;8883:7;;8970:3;8961:12;;;:16;8957:102;;9008:3;8998:13;;;;9030;8957:102;9086:2;9077:11;;;:15;9073:99;;9123:2;9113:12;;;;9144;9073:99;9199:2;9190:11;;;:15;9186:99;;9236:2;9226:12;;;;9257;9186:99;9312:2;9303:11;;;:15;9299:99;;9349:2;9339:12;;;;9370;9299:99;9425:1;9416:10;;;:14;9412:96;;9461:1;9451:11;;;;9481;9412:96;9535:1;9526:10;;;:14;9522:96;;9571:1;9561:11;;;;9591;9522:96;9645:1;9636:10;;;:14;9632:96;;9681:1;9671:11;;;;9701;9632:96;9755:1;9746:10;;;:14;9742:66;;9791:1;9781:11;9836:6;8831:1019;-1:-1:-1;;8831:1019:58:o;613:106::-;671:7;702:1;698;:5;:13;;710:1;698:13;;;-1:-1:-1;706:1:58;;613:106;-1:-1:-1;613:106:58:o;8770:548:38:-;-1:-1:-1;;;;;8854:21:38;;8846:65;;;;-1:-1:-1;;;8846:65:38;;20134:2:93;8846:65:38;;;20116:21:93;20173:2;20153:18;;;20146:30;20212:33;20192:18;;;20185:61;20263:18;;8846:65:38;19932:355:93;8846:65:38;9002:6;8986:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9157:18:38;;:9;:18;;;;;;;;;;;:28;;;;;;9212:37;1461:25:93;;;9212:37:38;;1434:18:93;9212:37:38;;;;;;;9262:48;9290:1;9294:7;9303:6;9262:19;:48::i;10466:98:41:-;10524:7;10551:5;10555:1;10551;:5;:::i;9671:787::-;9908:12;;9845:17;;;;;9986:8;;:59;;10909:25;10971:21;;;11038:4;11025:18;;11021:28;;-1:-1:-1;;11021:28:41;9986:59;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9986:59:41;;;;;;;;9997:16;;;;;;;;;-1:-1:-1;9997:16:41;;;;;;;9986:59;9958:87;;10074:7;:13;;;-1:-1:-1;;;;;10062:25:41;;;10114:20;10117:9;10128:5;10114:2;:20;;:::i;:::-;10102:32;;10161:1;10155:3;:7;:39;;;;;10187:7;:5;:7::i;:::-;10166:28;;:7;:17;;;:28;;;10155:39;10151:289;;;10253:29;10272:9;10253:18;:29::i;:::-;10909:25;10971:21;;;11038:4;11025:18;;11021:28;;-1:-1:-1;;11021:28:41;10215:67;;-1:-1:-1;;;;;10215:67:41;;;;;;;;;;;;;;;;10151:289;;;10323:5;10334:89;;;;;;;;10357:26;10375:7;:5;:7::i;:::-;10357:26;;:17;:26::i;:::-;10334:89;;;;;;10392:29;10411:9;10392:18;:29::i;:::-;-1:-1:-1;;;;;10334:89:41;;;;;;10323:101;;;;;;;-1:-1:-1;10323:101:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10151:289;9933:518;9883:575;9671:787;;;;;;:::o;9651:675:38:-;-1:-1:-1;;;;;9735:21:38;;9727:67;;;;-1:-1:-1;;;9727:67:38;;20494:2:93;9727:67:38;;;20476:21:93;20533:2;20513:18;;;20506:30;20572:34;20552:18;;;20545:62;-1:-1:-1;;;20623:18:93;;;20616:31;20664:19;;9727:67:38;20292:397:93;9727:67:38;-1:-1:-1;;;;;9894:18:38;;9869:22;9894:18;;;;;;;;;;;9931:24;;;;9923:71;;;;-1:-1:-1;;;9923:71:38;;20896:2:93;9923:71:38;;;20878:21:93;20935:2;20915:18;;;20908:30;20974:34;20954:18;;;20947:62;-1:-1:-1;;;21025:18:93;;;21018:32;21067:19;;9923:71:38;20694:398:93;9923:71:38;-1:-1:-1;;;;;10030:18:38;;:9;:18;;;;;;;;;;;10051:23;;;10030:44;;10169:12;:22;;;;;;;10220:37;1461:25:93;;;10030:9:38;;:18;10220:37;;1434:18:93;10220:37:38;;;;;;;10270:48;10290:7;10307:1;10311:6;10270:19;:48::i;10572:103:41:-;10635:7;10662:5;10666:1;10662;:5;:::i;2613:251:51:-;2674:7;2747:4;2711:40;;2775:2;2766:11;;2762:71;;;2801:20;;-1:-1:-1;;;2801:20:51;;;;;;;;;;;2921:195:59;2978:7;-1:-1:-1;;;;;3006:26:59;;;2998:78;;;;-1:-1:-1;;;2998:78:59;;21299:2:93;2998:78:59;;;21281:21:93;21338:2;21318:18;;;21311:30;21377:34;21357:18;;;21350:62;-1:-1:-1;;;21428:18:93;;;21421:37;21475:19;;2998:78:59;21097:403:93;14:423;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:131::-;-1:-1:-1;;;;;742:31:93;;732:42;;722:70;;788:1;785;778:12;803:315;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;987:9;974:23;1006:31;1031:5;1006:31;:::i;:::-;1056:5;1108:2;1093:18;;;;1080:32;;-1:-1:-1;;;803:315:93:o;1497:456::-;1574:6;1582;1590;1643:2;1631:9;1622:7;1618:23;1614:32;1611:52;;;1659:1;1656;1649:12;1611:52;1698:9;1685:23;1717:31;1742:5;1717:31;:::i;:::-;1767:5;-1:-1:-1;1824:2:93;1809:18;;1796:32;1837:33;1796:32;1837:33;:::i;:::-;1497:456;;1889:7;;-1:-1:-1;;;1943:2:93;1928:18;;;;1915:32;;1497:456::o;1958:263::-;2033:6;2086:2;2074:9;2065:7;2061:23;2057:32;2054:52;;;2102:1;2099;2092:12;2054:52;2141:9;2128:23;2160:31;2185:5;2160:31;:::i;2821:180::-;2880:6;2933:2;2921:9;2912:7;2908:23;2904:32;2901:52;;;2949:1;2946;2939:12;2901:52;-1:-1:-1;2972:23:93;;2821:180;-1:-1:-1;2821:180:93:o;4125:1259::-;4531:3;4526;4522:13;4514:6;4510:26;4499:9;4492:45;4473:4;4556:2;4594:3;4589:2;4578:9;4574:18;4567:31;4621:46;4662:3;4651:9;4647:19;4639:6;4621:46;:::i;:::-;4715:9;4707:6;4703:22;4698:2;4687:9;4683:18;4676:50;4749:33;4775:6;4767;4749:33;:::i;:::-;4813:2;4798:18;;4791:34;;;-1:-1:-1;;;;;4862:32:93;;4856:3;4841:19;;4834:61;4882:3;4911:19;;4904:35;;;4976:22;;;4970:3;4955:19;;4948:51;5048:13;;5070:22;;;5146:15;;;;-1:-1:-1;5108:15:93;;;;-1:-1:-1;5189:169:93;5203:6;5200:1;5197:13;5189:169;;;5264:13;;5252:26;;5333:15;;;;5298:12;;;;5225:1;5218:9;5189:169;;;-1:-1:-1;5375:3:93;;4125:1259;-1:-1:-1;;;;;;;;;;;;4125:1259:93:o;5590:156::-;5656:20;;5716:4;5705:16;;5695:27;;5685:55;;5736:1;5733;5726:12;5685:55;5590:156;;;:::o;5751:592::-;5853:6;5861;5869;5877;5885;5893;5946:3;5934:9;5925:7;5921:23;5917:33;5914:53;;;5963:1;5960;5953:12;5914:53;6002:9;5989:23;6021:31;6046:5;6021:31;:::i;:::-;6071:5;-1:-1:-1;6123:2:93;6108:18;;6095:32;;-1:-1:-1;6174:2:93;6159:18;;6146:32;;-1:-1:-1;6197:36:93;6229:2;6214:18;;6197:36;:::i;:::-;6187:46;;6280:3;6269:9;6265:19;6252:33;6242:43;;6332:3;6321:9;6317:19;6304:33;6294:43;;5751:592;;;;;;;;:::o;6348:734::-;6459:6;6467;6475;6483;6491;6499;6507;6560:3;6548:9;6539:7;6535:23;6531:33;6528:53;;;6577:1;6574;6567:12;6528:53;6616:9;6603:23;6635:31;6660:5;6635:31;:::i;:::-;6685:5;-1:-1:-1;6742:2:93;6727:18;;6714:32;6755:33;6714:32;6755:33;:::i;:::-;6807:7;-1:-1:-1;6861:2:93;6846:18;;6833:32;;-1:-1:-1;6912:2:93;6897:18;;6884:32;;-1:-1:-1;6935:37:93;6967:3;6952:19;;6935:37;:::i;:::-;6925:47;;7019:3;7008:9;7004:19;6991:33;6981:43;;7071:3;7060:9;7056:19;7043:33;7033:43;;6348:734;;;;;;;;;;:::o;7087:388::-;7155:6;7163;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;7271:9;7258:23;7290:31;7315:5;7290:31;:::i;:::-;7340:5;-1:-1:-1;7397:2:93;7382:18;;7369:32;7410:33;7369:32;7410:33;:::i;:::-;7462:7;7452:17;;;7087:388;;;;;:::o;7480:419::-;7547:6;7555;7608:2;7596:9;7587:7;7583:23;7579:32;7576:52;;;7624:1;7621;7614:12;7576:52;7663:9;7650:23;7682:31;7707:5;7682:31;:::i;:::-;7732:5;-1:-1:-1;7789:2:93;7774:18;;7761:32;7837:10;7824:24;;7812:37;;7802:65;;7863:1;7860;7853:12;8257:380;8336:1;8332:12;;;;8379;;;8400:61;;8454:4;8446:6;8442:17;8432:27;;8400:61;8507:2;8499:6;8496:14;8476:18;8473:38;8470:161;;8553:10;8548:3;8544:20;8541:1;8534:31;8588:4;8585:1;8578:15;8616:4;8613:1;8606:15;8992:127;9053:10;9048:3;9044:20;9041:1;9034:31;9084:4;9081:1;9074:15;9108:4;9105:1;9098:15;9124:125;9189:9;;;9210:10;;;9207:36;;;9223:18;;:::i;10448:127::-;10509:10;10504:3;10500:20;10497:1;10490:31;10540:4;10537:1;10530:15;10564:4;10561:1;10554:15;15816:128;15883:9;;;15904:11;;;15901:37;;;15918:18;;:::i;17257:127::-;17318:10;17313:3;17309:20;17306:1;17299:31;17349:4;17346:1;17339:15;17373:4;17370:1;17363:15;17389:217;17429:1;17455;17445:132;;17499:10;17494:3;17490:20;17487:1;17480:31;17534:4;17531:1;17524:15;17562:4;17559:1;17552:15;17445:132;-1:-1:-1;17591:9:93;;17389:217::o;18684:127::-;18745:10;18740:3;18736:20;18733:1;18726:31;18776:4;18773:1;18766:15;18800:4;18797:1;18790:15",
    "linkReferences": {},
    "immutableReferences": {
      "52564": [
        {
          "start": 4714,
          "length": 32
        }
      ],
      "52566": [
        {
          "start": 4672,
          "length": 32
        }
      ],
      "52568": [
        {
          "start": 4630,
          "length": 32
        }
      ],
      "52570": [
        {
          "start": 4795,
          "length": 32
        }
      ],
      "52572": [
        {
          "start": 4835,
          "length": 32
        }
      ],
      "52575": [
        {
          "start": 2417,
          "length": 32
        }
      ],
      "52578": [
        {
          "start": 2460,
          "length": 32
        }
      ],
      "59062": [
        {
          "start": 760,
          "length": 32
        },
        {
          "start": 2048,
          "length": 32
        }
      ],
      "59065": [
        {
          "start": 902,
          "length": 32
        },
        {
          "start": 1998,
          "length": 32
        }
      ],
      "59068": [
        {
          "start": 982,
          "length": 32
        },
        {
          "start": 1546,
          "length": 32
        },
        {
          "start": 1700,
          "length": 32
        }
      ],
      "59071": [
        {
          "start": 1201,
          "length": 32
        },
        {
          "start": 1604,
          "length": 32
        },
        {
          "start": 1642,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CLOCK_MODE()": "4bf5d7e9",
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "checkpoints(address,uint32)": "f1127ed8",
    "clock()": "91ddadf4",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "eip712Domain()": "84b0196e",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "liquidityRamp()": "4dfd324e",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "otherToken(address)": "302bb94d",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "swapManager()": "709d039d",
    "symbol()": "95d89b41",
    "thatToken()": "c451463b",
    "thisToken()": "75f4f18e",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"_liquidityRamp\",\"type\":\"address\"},{\"internalType\":\"contract ISwapManager\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LPToken__Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LPToken__UnknownToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityRamp\",\"outputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"otherToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"contract ISwapManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thatToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thisToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It inherits from ERC20Votes to enable governance features.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"params\":{\"amount\":\"The amount of LP tokens to burn.\"}},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"constructor\":{\"params\":{\"_liquidityRamp\":\"The liquidity ramp contract governing the pool.\",\"_swapManager\":\"The swap manager contract for asset exchanges.\",\"_thatToken\":\"The second token in the liquidity pair.\",\"_thisToken\":\"The first token in the liquidity pair.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Can only be called by addresses authorized to mint (i.e., swapManager or liquidityRamp).\",\"params\":{\"amount\":\"The amount of LP tokens to mint.\",\"to\":\"The address receiving the minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"otherToken(address)\":{\"details\":\"Reverts if the provided token is not part of the liquidity pair.\",\"params\":{\"token\":\"The token for which to find the complement.\"},\"returns\":{\"_0\":\"The complementary token.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"thatToken\":{\"return\":\"The IERC20 token address of `thatToken`.\",\"returns\":{\"_0\":\"The IERC20 token address of `thatToken`.\"}},\"thisToken\":{\"return\":\"The IERC20 token address of `thisToken`.\",\"returns\":{\"_0\":\"The IERC20 token address of `thisToken`.\"}}},\"title\":\"LPToken\",\"version\":1},\"userdoc\":{\"errors\":{\"LPToken__UnknownToken()\":[{\"notice\":\"Custom Errors\"}]},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns LP tokens from the caller's address.\"},\"constructor\":{\"notice\":\"Constructor for creating a new LP Token.\"},\"mint(address,uint256)\":{\"notice\":\"Mints new LP tokens.\"},\"otherToken(address)\":{\"notice\":\"Returns the complementary token for a given token in the pair.\"},\"thatToken()\":{\"notice\":\"Fetches the address of `thatToken` in the liquidity pair.\"},\"thisToken()\":{\"notice\":\"Fetches the address of `thisToken` in the liquidity pair.\"}},\"notice\":\"This contract represents a liquidity pool token (LP token) in the Stairway ecosystem.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db\",\"dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811\",\"dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3\",\"dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x03be5410145cc9e010dbe15152d58f320fe7584740bb65f085fe7af7b19ebb77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://710034d981a9827778ad8e27ab3d7905d7c0812f2a2a10d8cf582b31596c9fd1\",\"dweb:/ipfs/QmSyfX3MZ3cH7BBUXbQCPYYQMKE63ki66bZi6uoyzuLJcG\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x49226c7ce208de7c2142de70bf17ac4c0cc3dd4b57fe2c9d6bb2a5d903958c30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7944db62d873f1e5949551b51b3cd1f097f05b50ec7c1bf48f1d2626e7b0b93\",\"dweb:/ipfs/QmQoDFWDnPzCHs3xLrn9j8JC7j19aqfM5fYyCtWVyoJj2L\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda\",\"dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b\",\"dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x0b5f714ef5d85a22f2d9b5da085ba5ea23b1e2150bb7a64901da34f0759aeb9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://749e6a7658deb56735e53dc60af061149e3093db485097bfa8e4126cffb36015\",\"dweb:/ipfs/QmXAMYYfZRJHeQeEB7SudnHPkhGwhkWF7FEDVUeU2JDSGD\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0xb4c792475fe022e0cf788cda4a364b22aecf58a1d6dace956157716d57bad54a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02924649c79e2284998b20720ed5a05c51b9dac3498b8fc4e407d4d006127e43\",\"dweb:/ipfs/QmQFboTzzonyLjstbAqe4fUpmomFEmGjTagCHKhReNMquc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0x45f2d503ebecf25ea4b038d02a7ed96898bd197bec585d0ba3560bfb4b509a82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c87b73d7c9c7773c8d2b06e3f38d88a3980c04016bb44967ecacfa5ac45bc62b\",\"dweb:/ipfs/QmbQVT9fpAxMQ492735rZzUK2e73ayqdZz2fGPgey8jCVR\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x8e73229cbdd04840911231c96cf806bda48dc1e8db8def5163fbf581a015416e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d1212bd1729419e78377c28b7ad0233df68dd4693c56b59a05a669e079f4598\",\"dweb:/ipfs/QmTwpbK9JLwhnZcn5iNefcrDkdGiFSxcybZRNLWpSSYkUv\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xa02cad52e38d3ae448921b26b35d212043d4c19226984c0263f1c0235ad415f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90b0ed27343696de2d3958cf6c51c37e1f3988be436e1ba963d1fb6529e44cd5\",\"dweb:/ipfs/QmVzoffPnAdrHmh5mXc36Y9pTunFUs16WRrfxTymx45TfA\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x9946c519be92a722f98f82183cba69f1e7d7e16fd324ef4dcd32ab45c8e7fd04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb529c1d4d2393f819dab2a59cb0e545a68effb915101c8ce81b54cb63d3356a\",\"dweb:/ipfs/QmRBHJto5VsuZyfYMqr69GxVEpaGyhp9CPuqoPS8krrtrT\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x2c66e95ab107fd79a1c7f05348351ed954edf544854adf782c8b61bc67ecc074\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a069ca7a560c518d1338c48bf0618499ef601d34044c10f59a18b1e554cae37\",\"dweb:/ipfs/QmRXxKoq1Q47zpMcbCevkyUmV66zQcAcCrwhEQ2xtSvRQ1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]},\"src/core/LPToken.sol\":{\"keccak256\":\"0x903380d209b12a59425904143e4d098acb895064e370642414ad96e7d1d56a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba8f53cdd79663d65bf964857ed401b045165128b9d6f3938da0f34c0b0df39\",\"dweb:/ipfs/QmPaohChczmh5BHbvRQnFTGNDACeK5Q2PuA76uBCxwjCRD\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd\",\"dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7\",\"dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45\",\"dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935\",\"dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc\",\"dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f\",\"dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07\",\"dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            },
            {
              "internalType": "contract ILiquidityRamp",
              "name": "_liquidityRamp",
              "type": "address"
            },
            {
              "internalType": "contract ISwapManager",
              "name": "_swapManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LPToken__Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LPToken__UnknownToken"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLOCK_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "clock",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityRamp",
          "outputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "otherToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapManager",
          "outputs": [
            {
              "internalType": "contract ISwapManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "thatToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "thisToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "CLOCK_MODE()": {
            "details": "Description of the clock"
          },
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "params": {
              "amount": "The amount of LP tokens to burn."
            }
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "clock()": {
            "details": "Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."
          },
          "constructor": {
            "params": {
              "_liquidityRamp": "The liquidity ramp contract governing the pool.",
              "_swapManager": "The swap manager contract for asset exchanges.",
              "_thatToken": "The second token in the liquidity pair.",
              "_thisToken": "The first token in the liquidity pair."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past"
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Can only be called by addresses authorized to mint (i.e., swapManager or liquidityRamp).",
            "params": {
              "amount": "The amount of LP tokens to mint.",
              "to": "The address receiving the minted tokens."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "otherToken(address)": {
            "details": "Reverts if the provided token is not part of the liquidity pair.",
            "params": {
              "token": "The token for which to find the complement."
            },
            "returns": {
              "_0": "The complementary token."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Burns LP tokens from the caller's address."
          },
          "constructor": {
            "notice": "Constructor for creating a new LP Token."
          },
          "mint(address,uint256)": {
            "notice": "Mints new LP tokens."
          },
          "otherToken(address)": {
            "notice": "Returns the complementary token for a given token in the pair."
          },
          "thatToken()": {
            "notice": "Fetches the address of `thatToken` in the liquidity pair."
          },
          "thisToken()": {
            "notice": "Fetches the address of `thisToken` in the liquidity pair."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/core/LPToken.sol": "LPToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x8dea8d67674626aadd5a13851bf24992c28d9e7a7ee96621408f732592306193",
        "urls": [
          "bzz-raw://829875be124594e1e278c876ed05eb32d74c35c7ab349548d0244cdf491d57db",
          "dweb:/ipfs/Qma7fnq6nb7jzumzQGZ3xhiCk6mx3WReau7J1WyCdP7FE1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x79a8585a7247cd19632c541e9a64924a6f105e5a30c55d3015f9b2a2ae969821",
        "urls": [
          "bzz-raw://626d914437a398047d9ea9fe2e4d6fc746994b7c8faea26a07cd142d8b119811",
          "dweb:/ipfs/QmZxSJdEC48uj3PcfWWNe1hAxXSdinnzn53vmJrVseU5FJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x8045f7d526dd93c933f0f46b1637bace1ecb8282f150e004ada0bda898f8715f",
        "urls": [
          "bzz-raw://643d0f5beb2b0ce2e6c962b3fa87ca94333cf6237be8187460f5202d2813b1a3",
          "dweb:/ipfs/QmTPAqFeEVDnoJWm64DF2C53zfVBJZZC31wdGEeM8adGRE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x03be5410145cc9e010dbe15152d58f320fe7584740bb65f085fe7af7b19ebb77",
        "urls": [
          "bzz-raw://710034d981a9827778ad8e27ab3d7905d7c0812f2a2a10d8cf582b31596c9fd1",
          "dweb:/ipfs/QmSyfX3MZ3cH7BBUXbQCPYYQMKE63ki66bZi6uoyzuLJcG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5805.sol": {
        "keccak256": "0x49226c7ce208de7c2142de70bf17ac4c0cc3dd4b57fe2c9d6bb2a5d903958c30",
        "urls": [
          "bzz-raw://b7944db62d873f1e5949551b51b3cd1f097f05b50ec7c1bf48f1d2626e7b0b93",
          "dweb:/ipfs/QmQoDFWDnPzCHs3xLrn9j8JC7j19aqfM5fYyCtWVyoJj2L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0x305f314218bceeb63308322e025f0123190815037b4bb22d7bde7e684bcf5f59",
        "urls": [
          "bzz-raw://ab9d225a42aa3a4f13db01862b4b49cae6383a367e6136ffeb30ea4caa3c6fda",
          "dweb:/ipfs/QmTXqCk8oBzsBSkXDiwTKt4zf66saBQgMJygeVdVM2havg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7",
        "urls": [
          "bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b",
          "dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9",
        "urls": [
          "bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d",
          "dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x0b5f714ef5d85a22f2d9b5da085ba5ea23b1e2150bb7a64901da34f0759aeb9f",
        "urls": [
          "bzz-raw://749e6a7658deb56735e53dc60af061149e3093db485097bfa8e4126cffb36015",
          "dweb:/ipfs/QmXAMYYfZRJHeQeEB7SudnHPkhGwhkWF7FEDVUeU2JDSGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0xb4c792475fe022e0cf788cda4a364b22aecf58a1d6dace956157716d57bad54a",
        "urls": [
          "bzz-raw://02924649c79e2284998b20720ed5a05c51b9dac3498b8fc4e407d4d006127e43",
          "dweb:/ipfs/QmQFboTzzonyLjstbAqe4fUpmomFEmGjTagCHKhReNMquc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89",
        "urls": [
          "bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973",
          "dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f",
        "urls": [
          "bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf",
          "dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0x45f2d503ebecf25ea4b038d02a7ed96898bd197bec585d0ba3560bfb4b509a82",
        "urls": [
          "bzz-raw://c87b73d7c9c7773c8d2b06e3f38d88a3980c04016bb44967ecacfa5ac45bc62b",
          "dweb:/ipfs/QmbQVT9fpAxMQ492735rZzUK2e73ayqdZz2fGPgey8jCVR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0x8e73229cbdd04840911231c96cf806bda48dc1e8db8def5163fbf581a015416e",
        "urls": [
          "bzz-raw://6d1212bd1729419e78377c28b7ad0233df68dd4693c56b59a05a669e079f4598",
          "dweb:/ipfs/QmTwpbK9JLwhnZcn5iNefcrDkdGiFSxcybZRNLWpSSYkUv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6",
        "urls": [
          "bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7",
          "dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd",
        "urls": [
          "bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961",
          "dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xa02cad52e38d3ae448921b26b35d212043d4c19226984c0263f1c0235ad415f7",
        "urls": [
          "bzz-raw://90b0ed27343696de2d3958cf6c51c37e1f3988be436e1ba963d1fb6529e44cd5",
          "dweb:/ipfs/QmVzoffPnAdrHmh5mXc36Y9pTunFUs16WRrfxTymx45TfA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x9946c519be92a722f98f82183cba69f1e7d7e16fd324ef4dcd32ab45c8e7fd04",
        "urls": [
          "bzz-raw://eb529c1d4d2393f819dab2a59cb0e545a68effb915101c8ce81b54cb63d3356a",
          "dweb:/ipfs/QmRBHJto5VsuZyfYMqr69GxVEpaGyhp9CPuqoPS8krrtrT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e",
        "urls": [
          "bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5",
          "dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8",
        "urls": [
          "bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3",
          "dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x2c66e95ab107fd79a1c7f05348351ed954edf544854adf782c8b61bc67ecc074",
        "urls": [
          "bzz-raw://8a069ca7a560c518d1338c48bf0618499ef601d34044c10f59a18b1e554cae37",
          "dweb:/ipfs/QmRXxKoq1Q47zpMcbCevkyUmV66zQcAcCrwhEQ2xtSvRQ1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055",
        "urls": [
          "bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748",
          "dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng"
        ],
        "license": "MIT"
      },
      "src/core/LPToken.sol": {
        "keccak256": "0x903380d209b12a59425904143e4d098acb895064e370642414ad96e7d1d56a44",
        "urls": [
          "bzz-raw://6ba8f53cdd79663d65bf964857ed401b045165128b9d6f3938da0f34c0b0df39",
          "dweb:/ipfs/QmPaohChczmh5BHbvRQnFTGNDACeK5Q2PuA76uBCxwjCRD"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0xb5997d6744a9cc9a05d8edae9b5bc3a80cf0f6f825d18e0ee905db4c801d2dae",
        "urls": [
          "bzz-raw://d5169de16cddd63347efe4c18b578d5af3bf8aeb76cdc7b1c2d4f7ef29506edd",
          "dweb:/ipfs/QmNv9josobM8iiAcYL8EZVu3yytorFkjBZWuZKj2y24No6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x00b136c3f1cf62f04d7ac7bdc4b99fee5c541075cb8cb89337e9f01292ee5552",
        "urls": [
          "bzz-raw://185cacffe9c3b59bd06179507e3374cffc06104fee80303962cf1bec5f2eb4a7",
          "dweb:/ipfs/QmSuZbWi1d7qekZiudMrQC8boaVyzyFayLo39zadVe7dn1"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xebe2629d10390741db46ce216dc84f4a77ab0f08db0160878d297a4c45ef0def",
        "urls": [
          "bzz-raw://797ef0e42dff4f4d5f215671993b2d7f275bb7a346a60f1a24fe03f4d2496d45",
          "dweb:/ipfs/QmayJribsnqhCnvuwGEwtr7uvB3PXrS1rGngYuRPfaLvwP"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0x1772c58a0cde006b9e379a1a0d69ce6991f8d48a41349eaa058f621fc67ce5af",
        "urls": [
          "bzz-raw://7f19cbcb25d6ca998d6aa9af66d8103e73e9d6dea0eabb5ef885d3ef032e7935",
          "dweb:/ipfs/QmeNxGFTn26Z543TGG8wHHLaHymTR89UZ4GSuVeGQDBgpx"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x24bca18dd467df394272106bf01017137e0f674275b15f298aace7f04767f065",
        "urls": [
          "bzz-raw://04e7c48a42571775b621184c465b2cbf850ba461de65c5a143b591cf06c4e1bc",
          "dweb:/ipfs/QmTERz1gTvVsP9w6cw3bUBEbW9C34QHzqohNzwfpX3z3G6"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x92ed5d04b6f742cc3cf983500ac8c6226eed3f413fb4082e19397e4e31a5eed4",
        "urls": [
          "bzz-raw://9c0975eb9bb95ccc25aeaa6a48436c0da53c19a979b22d59f08e5380b59ef06f",
          "dweb:/ipfs/QmafgyH7VnRd1BART3DRZnxx5TB5XqGmbB2QLeMagwwHMK"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x4ae49eb2b910252e009ccc57790e7283b6f772fe8bdb9268fa6db13451761f74",
        "urls": [
          "bzz-raw://ba1984eb53b61e0c9540b9d2ca2282af5b77c35159951b86cf522ad5718abd07",
          "dweb:/ipfs/QmfBB6hYDa3ZCDpnULcJHhYALQQfVtj41hDNNZfeKLMerE"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/core/LPToken.sol",
    "id": 59243,
    "exportedSymbols": {
      "Context": [
        51552
      ],
      "Counters": [
        51626
      ],
      "ECDSA": [
        52547
      ],
      "EIP712": [
        52751
      ],
      "ERC20": [
        48217
      ],
      "ERC20Permit": [
        48467
      ],
      "ERC20Votes": [
        49201
      ],
      "ICluster": [
        61999
      ],
      "IClusterRegistry": [
        62023
      ],
      "IERC165": [
        52787
      ],
      "IERC20": [
        48295
      ],
      "IERC20Metadata": [
        49226
      ],
      "IERC20Permit": [
        49262
      ],
      "IERC5267": [
        47500
      ],
      "IERC5805": [
        47509
      ],
      "IERC6372": [
        47524
      ],
      "IGovernor": [
        45314
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityManager": [
        62605
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "ISwapManager": [
        62911
      ],
      "IVotes": [
        47472
      ],
      "LPToken": [
        59242
      ],
      "Math": [
        53653
      ],
      "SafeCast": [
        55194
      ],
      "ShortString": [
        51631
      ],
      "ShortStrings": [
        51842
      ],
      "SignedMath": [
        55299
      ],
      "StorageSlot": [
        51952
      ],
      "Strings": [
        52181
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3462:69",
    "nodes": [
      {
        "id": 59050,
        "nodeType": "PragmaDirective",
        "src": "33:24:69",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 59051,
        "nodeType": "ImportDirective",
        "src": "61:36:69",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPToken.sol",
        "file": "../interfaces/ILPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 62485,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59052,
        "nodeType": "ImportDirective",
        "src": "99:42:69",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityRamp.sol",
        "file": "../interfaces/ILiquidityRamp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 62722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59053,
        "nodeType": "ImportDirective",
        "src": "143:40:69",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapManager.sol",
        "file": "../interfaces/ISwapManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 62912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59054,
        "nodeType": "ImportDirective",
        "src": "187:71:69",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 49202,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59242,
        "nodeType": "ContractDefinition",
        "src": "457:3036:69",
        "nodes": [
          {
            "id": 59062,
            "nodeType": "VariableDeclaration",
            "src": "542:45:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "4dfd324e",
            "mutability": "immutable",
            "name": "liquidityRamp",
            "nameLocation": "574:13:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
              "typeString": "contract ILiquidityRamp"
            },
            "typeName": {
              "id": 59061,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59060,
                "name": "ILiquidityRamp",
                "nameLocations": [
                  "542:14:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62721,
                "src": "542:14:69"
              },
              "referencedDeclaration": 62721,
              "src": "542:14:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                "typeString": "contract ILiquidityRamp"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59065,
            "nodeType": "VariableDeclaration",
            "src": "644:41:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "709d039d",
            "mutability": "immutable",
            "name": "swapManager",
            "nameLocation": "674:11:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapManager_$62911",
              "typeString": "contract ISwapManager"
            },
            "typeName": {
              "id": 59064,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59063,
                "name": "ISwapManager",
                "nameLocations": [
                  "644:12:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62911,
                "src": "644:12:69"
              },
              "referencedDeclaration": 62911,
              "src": "644:12:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapManager_$62911",
                "typeString": "contract ISwapManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59068,
            "nodeType": "VariableDeclaration",
            "src": "741:33:69",
            "nodes": [],
            "baseFunctions": [
              62452
            ],
            "constant": false,
            "functionSelector": "75f4f18e",
            "mutability": "immutable",
            "name": "thisToken",
            "nameLocation": "765:9:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$48295",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 59067,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59066,
                "name": "IERC20",
                "nameLocations": [
                  "741:6:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48295,
                "src": "741:6:69"
              },
              "referencedDeclaration": 48295,
              "src": "741:6:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$48295",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59071,
            "nodeType": "VariableDeclaration",
            "src": "824:33:69",
            "nodes": [],
            "baseFunctions": [
              62459
            ],
            "constant": false,
            "functionSelector": "c451463b",
            "mutability": "immutable",
            "name": "thatToken",
            "nameLocation": "848:9:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$48295",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 59070,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59069,
                "name": "IERC20",
                "nameLocations": [
                  "824:6:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48295,
                "src": "824:6:69"
              },
              "referencedDeclaration": 48295,
              "src": "824:6:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$48295",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59094,
            "nodeType": "ModifierDefinition",
            "src": "925:216:69",
            "nodes": [],
            "body": {
              "id": 59093,
              "nodeType": "Block",
              "src": "948:193:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 59088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59074,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "981:3:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 59075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "985:6:69",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "981:10:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 59078,
                                "name": "swapManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59065,
                                "src": "1003:11:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISwapManager_$62911",
                                  "typeString": "contract ISwapManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISwapManager_$62911",
                                  "typeString": "contract ISwapManager"
                                }
                              ],
                              "id": 59077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "995:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59076,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "995:7:69",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "995:20:69",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "981:34:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59081,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1036:3:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 59082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1040:6:69",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1036:10:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 59085,
                                "name": "liquidityRamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59062,
                                "src": "1058:13:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                                  "typeString": "contract ILiquidityRamp"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                                  "typeString": "contract ILiquidityRamp"
                                }
                              ],
                              "id": 59084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1050:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59083,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1050:7:69",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1050:22:69",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1036:36:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "981:91:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c50546f6b656e5f5f556e617574686f72697a6564",
                        "id": 59089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1087:23:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e19971eb99f945a3bc13753572bb594da9c22b365fdadcdc23aa35c706ae645",
                          "typeString": "literal_string \"LPToken__Unauthorized\""
                        },
                        "value": "LPToken__Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e19971eb99f945a3bc13753572bb594da9c22b365fdadcdc23aa35c706ae645",
                          "typeString": "literal_string \"LPToken__Unauthorized\""
                        }
                      ],
                      "id": 59073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "959:7:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:162:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59091,
                  "nodeType": "ExpressionStatement",
                  "src": "959:162:69"
                },
                {
                  "id": 59092,
                  "nodeType": "PlaceholderStatement",
                  "src": "1132:1:69"
                }
              ]
            },
            "name": "onlyMinters",
            "nameLocation": "934:11:69",
            "parameters": {
              "id": 59072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "945:2:69"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59134,
            "nodeType": "FunctionDefinition",
            "src": "1508:373:69",
            "nodes": [],
            "body": {
              "id": 59133,
              "nodeType": "Block",
              "src": "1729:152:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59117,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59068,
                      "src": "1740:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59118,
                      "name": "_thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59098,
                      "src": "1752:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1740:22:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 59120,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:22:69"
                },
                {
                  "expression": {
                    "id": 59123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59121,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59071,
                      "src": "1773:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59122,
                      "name": "_thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59101,
                      "src": "1785:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1773:22:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 59124,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:22:69"
                },
                {
                  "expression": {
                    "id": 59127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59125,
                      "name": "liquidityRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59062,
                      "src": "1806:13:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                        "typeString": "contract ILiquidityRamp"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59126,
                      "name": "_liquidityRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59104,
                      "src": "1822:14:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                        "typeString": "contract ILiquidityRamp"
                      }
                    },
                    "src": "1806:30:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "id": 59128,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:30:69"
                },
                {
                  "expression": {
                    "id": 59131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59129,
                      "name": "swapManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59065,
                      "src": "1847:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapManager_$62911",
                        "typeString": "contract ISwapManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59130,
                      "name": "_swapManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59107,
                      "src": "1861:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapManager_$62911",
                        "typeString": "contract ISwapManager"
                      }
                    },
                    "src": "1847:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapManager_$62911",
                      "typeString": "contract ISwapManager"
                    }
                  },
                  "id": 59132,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:26:69"
                }
              ]
            },
            "documentation": {
              "id": 59095,
              "nodeType": "StructuredDocumentation",
              "src": "1149:353:69",
              "text": " @notice Constructor for creating a new LP Token.\n @param _thisToken The first token in the liquidity pair.\n @param _thatToken The second token in the liquidity pair.\n @param _liquidityRamp The liquidity ramp contract governing the pool.\n @param _swapManager The swap manager contract for asset exchanges."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5374616972776179204c5020546f6b656e",
                    "id": 59110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1665:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_327df05c383c93f9a81353fa756bcd6bdc556cb0fd9595587fc1f20fef7de34c",
                      "typeString": "literal_string \"Stairway LP Token\""
                    },
                    "value": "Stairway LP Token"
                  },
                  {
                    "hexValue": "5357592d4c50",
                    "id": 59111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1686:8:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0febf03c6b8ffe97606e967f5336c32e21cc13f69361d9873cd671ac5ec4dfcf",
                      "typeString": "literal_string \"SWY-LP\""
                    },
                    "value": "SWY-LP"
                  }
                ],
                "id": 59112,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59109,
                  "name": "ERC20",
                  "nameLocations": [
                    "1659:5:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48217,
                  "src": "1659:5:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "1659:36:69"
              },
              {
                "arguments": [
                  {
                    "hexValue": "5374616972776179204c5020546f6b656e",
                    "id": 59114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1708:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_327df05c383c93f9a81353fa756bcd6bdc556cb0fd9595587fc1f20fef7de34c",
                      "typeString": "literal_string \"Stairway LP Token\""
                    },
                    "value": "Stairway LP Token"
                  }
                ],
                "id": 59115,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59113,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "1696:11:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48467,
                  "src": "1696:11:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "1696:32:69"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59098,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "1537:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1530:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59096,
                      "name": "IERC20",
                      "nameLocations": [
                        "1530:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1530:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1530:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59101,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "1565:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1558:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59099,
                      "name": "IERC20",
                      "nameLocations": [
                        "1558:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1558:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1558:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59104,
                  "mutability": "mutable",
                  "name": "_liquidityRamp",
                  "nameLocation": "1601:14:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1586:29:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                    "typeString": "contract ILiquidityRamp"
                  },
                  "typeName": {
                    "id": 59103,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59102,
                      "name": "ILiquidityRamp",
                      "nameLocations": [
                        "1586:14:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62721,
                      "src": "1586:14:69"
                    },
                    "referencedDeclaration": 62721,
                    "src": "1586:14:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59107,
                  "mutability": "mutable",
                  "name": "_swapManager",
                  "nameLocation": "1639:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1626:25:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapManager_$62911",
                    "typeString": "contract ISwapManager"
                  },
                  "typeName": {
                    "id": 59106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59105,
                      "name": "ISwapManager",
                      "nameLocations": [
                        "1626:12:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62911,
                      "src": "1626:12:69"
                    },
                    "referencedDeclaration": 62911,
                    "src": "1626:12:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapManager_$62911",
                      "typeString": "contract ISwapManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:139:69"
            },
            "returnParameters": {
              "id": 59116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1729:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59161,
            "nodeType": "FunctionDefinition",
            "src": "2170:215:69",
            "nodes": [],
            "body": {
              "id": 59160,
              "nodeType": "Block",
              "src": "2233:152:69",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    },
                    "id": 59146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59144,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59138,
                      "src": "2248:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 59145,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59068,
                      "src": "2257:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2248:18:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59149,
                  "nodeType": "IfStatement",
                  "src": "2244:40:69",
                  "trueBody": {
                    "expression": {
                      "id": 59147,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59071,
                      "src": "2275:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "functionReturnParameters": 59143,
                    "id": 59148,
                    "nodeType": "Return",
                    "src": "2268:16:69"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    },
                    "id": 59152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59150,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59138,
                      "src": "2299:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 59151,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59071,
                      "src": "2308:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2299:18:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59155,
                  "nodeType": "IfStatement",
                  "src": "2295:40:69",
                  "trueBody": {
                    "expression": {
                      "id": 59153,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59068,
                      "src": "2326:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "functionReturnParameters": 59143,
                    "id": 59154,
                    "nodeType": "Return",
                    "src": "2319:16:69"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c50546f6b656e5f5f556e6b6e6f776e546f6b656e",
                        "id": 59157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:23:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9bb63a7f0c8868e2b6aa4c39e2b1014791ef481032499ac60d2b3d2d3d1a896",
                          "typeString": "literal_string \"LPToken__UnknownToken\""
                        },
                        "value": "LPToken__UnknownToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d9bb63a7f0c8868e2b6aa4c39e2b1014791ef481032499ac60d2b3d2d3d1a896",
                          "typeString": "literal_string \"LPToken__UnknownToken\""
                        }
                      ],
                      "id": 59156,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2346:6:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 59158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2346:31:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59159,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:31:69"
                }
              ]
            },
            "baseFunctions": [
              62469
            ],
            "documentation": {
              "id": 59135,
              "nodeType": "StructuredDocumentation",
              "src": "1889:275:69",
              "text": " @notice Returns the complementary token for a given token in the pair.\n @param token The token for which to find the complement.\n @return The complementary token.\n @dev Reverts if the provided token is not part of the liquidity pair."
            },
            "functionSelector": "302bb94d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "otherToken",
            "nameLocation": "2179:10:69",
            "parameters": {
              "id": 59139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59138,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2197:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59161,
                  "src": "2190:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59136,
                      "name": "IERC20",
                      "nameLocations": [
                        "2190:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2190:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2190:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:14:69"
            },
            "returnParameters": {
              "id": 59143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59161,
                  "src": "2225:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59140,
                      "name": "IERC20",
                      "nameLocations": [
                        "2225:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2225:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2225:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2224:8:69"
            },
            "scope": 59242,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59177,
            "nodeType": "FunctionDefinition",
            "src": "2664:99:69",
            "nodes": [],
            "body": {
              "id": 59176,
              "nodeType": "Block",
              "src": "2727:36:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59164,
                        "src": "2744:2:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59173,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59166,
                        "src": "2748:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59171,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59225
                      ],
                      "referencedDeclaration": 59225,
                      "src": "2738:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:17:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59175,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:17:69"
                }
              ]
            },
            "baseFunctions": [
              62477
            ],
            "documentation": {
              "id": 59162,
              "nodeType": "StructuredDocumentation",
              "src": "2393:265:69",
              "text": " @notice Mints new LP tokens.\n @param to The address receiving the minted tokens.\n @param amount The amount of LP tokens to mint.\n @dev Can only be called by addresses authorized to mint (i.e., swapManager or liquidityRamp)."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59168,
                  "name": "onlyMinters",
                  "nameLocations": [
                    "2715:11:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59094,
                  "src": "2715:11:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "2715:11:69"
              }
            ],
            "name": "mint",
            "nameLocation": "2673:4:69",
            "parameters": {
              "id": 59167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59164,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2686:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59177,
                  "src": "2678:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59166,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2698:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59177,
                  "src": "2690:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2677:28:69"
            },
            "returnParameters": {
              "id": 59170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2727:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59190,
            "nodeType": "FunctionDefinition",
            "src": "2903:81:69",
            "nodes": [],
            "body": {
              "id": 59189,
              "nodeType": "Block",
              "src": "2940:44:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2957:3:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2961:6:69",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2957:10:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59186,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59180,
                        "src": "2969:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59183,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59241
                      ],
                      "referencedDeclaration": 59241,
                      "src": "2951:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:25:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59188,
                  "nodeType": "ExpressionStatement",
                  "src": "2951:25:69"
                }
              ]
            },
            "baseFunctions": [
              62483
            ],
            "documentation": {
              "id": 59178,
              "nodeType": "StructuredDocumentation",
              "src": "2771:126:69",
              "text": " @notice Burns LP tokens from the caller's address.\n @param amount The amount of LP tokens to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2912:4:69",
            "parameters": {
              "id": 59181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59180,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2925:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59190,
                  "src": "2917:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2916:16:69"
            },
            "returnParameters": {
              "id": 59182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2940:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59209,
            "nodeType": "FunctionDefinition",
            "src": "3073:185:69",
            "nodes": [],
            "body": {
              "id": 59208,
              "nodeType": "Block",
              "src": "3196:62:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59203,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59192,
                        "src": "3233:4:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59204,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59194,
                        "src": "3239:2:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59205,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59196,
                        "src": "3243:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59200,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3207:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LPToken_$59242_$",
                          "typeString": "type(contract super LPToken)"
                        }
                      },
                      "id": 59202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3213:19:69",
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48946,
                      "src": "3207:25:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 59206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3207:43:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59207,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:43:69"
                }
              ]
            },
            "baseFunctions": [
              48946
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "3082:19:69",
            "overrides": {
              "id": 59198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3187:8:69"
            },
            "parameters": {
              "id": 59197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59192,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3120:4:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59209,
                  "src": "3112:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3112:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59194,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3143:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59209,
                  "src": "3135:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59196,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3164:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59209,
                  "src": "3156:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3101:76:69"
            },
            "returnParameters": {
              "id": 59199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3196:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59225,
            "nodeType": "FunctionDefinition",
            "src": "3266:103:69",
            "nodes": [],
            "body": {
              "id": 59224,
              "nodeType": "Block",
              "src": "3327:42:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59220,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59211,
                        "src": "3350:2:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59221,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59213,
                        "src": "3354:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3338:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LPToken_$59242_$",
                          "typeString": "type(contract super LPToken)"
                        }
                      },
                      "id": 59219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3344:5:69",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48893,
                      "src": "3338:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:23:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59223,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:23:69"
                }
              ]
            },
            "baseFunctions": [
              48893
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "3275:5:69",
            "overrides": {
              "id": 59215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3318:8:69"
            },
            "parameters": {
              "id": 59214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59211,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3289:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59225,
                  "src": "3281:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59213,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3301:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59225,
                  "src": "3293:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3280:28:69"
            },
            "returnParameters": {
              "id": 59216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3327:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59241,
            "nodeType": "FunctionDefinition",
            "src": "3377:113:69",
            "nodes": [],
            "body": {
              "id": 59240,
              "nodeType": "Block",
              "src": "3443:47:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59236,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59227,
                        "src": "3466:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59237,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59229,
                        "src": "3475:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59233,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3454:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LPToken_$59242_$",
                          "typeString": "type(contract super LPToken)"
                        }
                      },
                      "id": 59235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3460:5:69",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48916,
                      "src": "3454:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:28:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59239,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:28:69"
                }
              ]
            },
            "baseFunctions": [
              48916
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3386:5:69",
            "overrides": {
              "id": 59231,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3434:8:69"
            },
            "parameters": {
              "id": 59230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59227,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3400:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59241,
                  "src": "3392:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59229,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3417:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59241,
                  "src": "3409:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3391:33:69"
            },
            "returnParameters": {
              "id": 59232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3443:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59056,
              "name": "ERC20Votes",
              "nameLocations": [
                "477:10:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49201,
              "src": "477:10:69"
            },
            "id": 59057,
            "nodeType": "InheritanceSpecifier",
            "src": "477:10:69"
          },
          {
            "baseName": {
              "id": 59058,
              "name": "ILPToken",
              "nameLocations": [
                "489:8:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62484,
              "src": "489:8:69"
            },
            "id": 59059,
            "nodeType": "InheritanceSpecifier",
            "src": "489:8:69"
          }
        ],
        "canonicalName": "LPToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59055,
          "nodeType": "StructuredDocumentation",
          "src": "262:193:69",
          "text": " @title LPToken\n @notice This contract represents a liquidity pool token (LP token) in the Stairway ecosystem.\n @dev It inherits from ERC20Votes to enable governance features."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59242,
          62484,
          49201,
          47509,
          47472,
          47524,
          48467,
          52751,
          47500,
          49262,
          48217,
          49226,
          48295,
          51552
        ],
        "name": "LPToken",
        "nameLocation": "466:7:69",
        "scope": 59243,
        "usedErrors": [
          51639,
          51641,
          62443,
          62445
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 69
}