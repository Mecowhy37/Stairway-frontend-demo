{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_thisToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_thatToken",
          "type": "address"
        },
        {
          "internalType": "contract ILiquidityRamp",
          "name": "_liquidityRamp",
          "type": "address"
        },
        {
          "internalType": "contract ISwapManager",
          "name": "_swapManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LPToken__Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LPToken__UnknownToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromDelegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "DelegateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DelegateVotesChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLOCK_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pos",
          "type": "uint32"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint224",
              "name": "votes",
              "type": "uint224"
            }
          ],
          "internalType": "struct ERC20Votes.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clock",
      "outputs": [
        {
          "internalType": "uint48",
          "name": "",
          "type": "uint48"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timepoint",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityRamp",
      "outputs": [
        {
          "internalType": "contract ILiquidityRamp",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "otherToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapManager",
      "outputs": [
        {
          "internalType": "contract ISwapManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thatToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thisToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101e06040523480156200001257600080fd5b5060405162002a3c38038062002a3c833981016040819052620000359162000263565b6040518060400160405280601181526020017029ba30b4b93bb0bc902628102a37b5b2b760791b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601181526020017029ba30b4b93bb0bc902628102a37b5b2b760791b8152506040518060400160405280600681526020016505357592d4c560d41b8152508160039081620000d4919062000370565b506004620000e3828262000370565b50620000f591508390506005620001c5565b6101205262000106816006620001c5565b61014052815160208084019190912060e052815190820120610100524660a0526200019460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506001600160a01b039384166101a0529183166101c0528216610160521661018052620004b1565b6000602083511015620001e557620001dd83620001fe565b9050620001f8565b81620001f2848262000370565b5060ff90505b92915050565b600080829050601f8151111562000235578260405163305a27a960e01b81526004016200022c91906200043c565b60405180910390fd5b805162000242826200048c565b179392505050565b6001600160a01b03811681146200026057600080fd5b50565b600080600080608085870312156200027a57600080fd5b845162000287816200024a565b60208601519094506200029a816200024a565b6040860151909350620002ad816200024a565b6060860151909250620002c0816200024a565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002f657607f821691505b6020821081036200031757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036b57600081815260208120601f850160051c81016020861015620003465750805b601f850160051c820191505b81811015620003675782815560010162000352565b5050505b505050565b81516001600160401b038111156200038c576200038c620002cb565b620003a4816200039d8454620002e1565b846200031d565b602080601f831160018114620003dc5760008415620003c35750858301515b600019600386901b1c1916600185901b17855562000367565b600085815260208120601f198616915b828110156200040d57888601518255948401946001909101908401620003ec565b50858210156200042c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200046b578581018301518582016040015282016200044d565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003175760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516124da62000562600039600081816104b101528181610644015261066a0152600081816103d60152818161060a01526106a401526000818161038601526107ce0152600081816102f801526108000152600061099c01526000610971015260006112e3015260006112bb01526000611216015260006112400152600061126a01526124da6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063709d039d1161010f5780639ab24eb0116100a2578063c451463b11610071578063c451463b146104ac578063d505accf146104d3578063dd62ed3e146104e6578063f1127ed8146104f957600080fd5b80639ab24eb014610460578063a457c2d714610473578063a9059cbb14610486578063c3cda5201461049957600080fd5b806384b0196e116100de57806384b0196e1461040b5780638e539e8c1461042657806391ddadf41461043957806395d89b411461045857600080fd5b8063709d039d1461038157806370a08231146103a857806375f4f18e146103d15780637ecebe00146103f857600080fd5b80633a46b1a8116101875780634dfd324e116101565780634dfd324e146102f3578063587cde1e1461031a5780635c19a95c146103465780636fcfff451461035957600080fd5b80633a46b1a8146102b057806340c10f19146102c357806342966c68146102d85780634bf5d7e9146102eb57600080fd5b8063302bb94d116101c3578063302bb94d1461025b578063313ce567146102865780633644e51514610295578063395093511461029d57600080fd5b806306fdde03146101f5578063095ea7b31461021357806318160ddd1461023657806323b872dd14610248575b600080fd5b6101fd610536565b60405161020a9190612121565b60405180910390f35b610226610221366004612149565b6105c8565b604051901515815260200161020a565b6002545b60405190815260200161020a565b610226610256366004612175565b6105e2565b61026e6102693660046121b6565b610606565b6040516001600160a01b03909116815260200161020a565b6040516012815260200161020a565b61023a61070d565b6102266102ab366004612149565b61071c565b61023a6102be366004612149565b61073e565b6102d66102d1366004612149565b6107c3565b005b6102d66102e63660046121d3565b610874565b6101fd610881565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61026e6103283660046121b6565b6001600160a01b039081166000908152600960205260409020541690565b6102d66103543660046121b6565b610919565b61036c6103673660046121b6565b610923565b60405163ffffffff909116815260200161020a565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6103b63660046121b6565b6001600160a01b031660009081526020819052604090205490565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6104063660046121b6565b610945565b610413610963565b60405161020a97969594939291906121ec565b61023a6104343660046121d3565b6109ec565b610441610a53565b60405165ffffffffffff909116815260200161020a565b6101fd610a5e565b61023a61046e3660046121b6565b610a6d565b610226610481366004612149565b610aef565b610226610494366004612149565b610b6a565b6102d66104a7366004612298565b610b78565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b6102d66104e13660046122f2565b610cae565b61023a6104f4366004612360565b610e12565b61050c610507366004612399565b610e3d565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161020a565b606060038054610545906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610571906123d0565b80156105be5780601f10610593576101008083540402835291602001916105be565b820191906000526020600020905b8154815290600101906020018083116105a157829003601f168201915b5050505050905090565b6000336105d6818585610ec1565b60019150505b92915050565b6000336105f0858285610fe5565b6105fb85858561105f565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03160361066857507f0000000000000000000000000000000000000000000000000000000000000000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036106c857507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405162461bcd60e51b815260206004820152601560248201527426282a37b5b2b72fafaab735b737bbb72a37b5b2b760591b60448201526064015b60405180910390fd5b6000610717611209565b905090565b6000336105d681858561072f8383610e12565b610739919061241a565b610ec1565b6000610748610a53565b65ffffffffffff16821061079a5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6001600160a01b0383166000908152600a602052604090206107bc9083611334565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806108225750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6108665760405162461bcd60e51b81526020600482015260156024820152741314151bdad95b97d7d55b985d5d1a1bdc9a5e9959605a1b6044820152606401610704565b610870828261141d565b5050565b61087e3382611427565b50565b60604361088c610a53565b65ffffffffffff16146108e15760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610704565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61087e3382611431565b6001600160a01b0381166000908152600a60205260408120546105dc906114aa565b6001600160a01b0381166000908152600760205260408120546105dc565b6000606080828080836109977f00000000000000000000000000000000000000000000000000000000000000006005611513565b6109c27f00000000000000000000000000000000000000000000000000000000000000006006611513565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006109f6610a53565b65ffffffffffff168210610a485760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6105dc600b83611334565b6000610717436115be565b606060048054610545906123d0565b6001600160a01b0381166000908152600a60205260408120548015610adc576001600160a01b0383166000908152600a6020526040902080546000198301908110610aba57610aba61242d565b60009182526020909120015464010000000090046001600160e01b0316610adf565b60005b6001600160e01b03169392505050565b60003381610afd8286610e12565b905083811015610b5d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610704565b6105fb8286868403610ec1565b6000336105d681858561105f565b83421115610bc85760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610704565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610c4290610c3a9060a00160405160208183030381529060405280519060200120611625565b858585611652565b9050610c4d8161167a565b8614610c9b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610704565b610ca58188611431565b50505050505050565b83421115610cfe5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610704565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d2d8c61167a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d8882611625565b90506000610d9882878787611652565b9050896001600160a01b0316816001600160a01b031614610dfb5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610704565b610e068a8a8a610ec1565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610e8157610e8161242d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610f235760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610704565b6001600160a01b038216610f845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610704565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ff18484610e12565b90506000198114611059578181101561104c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610704565b6110598484848403610ec1565b50505050565b6001600160a01b0383166110c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610704565b6001600160a01b0382166111255760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610704565b6001600160a01b0383166000908152602081905260409020548181101561119d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610704565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110598484846116a7565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561126257507f000000000000000000000000000000000000000000000000000000000000000046145b1561128c57507f000000000000000000000000000000000000000000000000000000000000000090565b610717604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b81546000908181600581111561138e57600061134f846116b2565b6113599085612443565b600088815260209020909150869082015463ffffffff16111561137e5780915061138c565b61138981600161241a565b92505b505b808210156113db5760006113a2838361179a565b600088815260209020909150869082015463ffffffff1611156113c7578091506113d5565b6113d281600161241a565b92505b5061138e565b8015611407576000868152602090208101600019015464010000000090046001600160e01b031661140a565b60005b6001600160e01b03169695505050505050565b61087082826117b5565b610870828261183f565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611059828483611857565b600063ffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610704565b5090565b606060ff831461152d5761152683611994565b90506105dc565b818054611539906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611565906123d0565b80156115b25780601f10611587576101008083540402835291602001916115b2565b820191906000526020600020905b81548152906001019060200180831161159557829003601f168201915b505050505090506105dc565b600065ffffffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610704565b60006105dc611632611209565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611663878787876119d3565b9150915061167081611a97565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b6116a2838383611be1565b6000816000036116c457506000919050565b600060016116d184611c13565b901c6001901b905060018184816116ea576116ea612456565b048201901c9050600181848161170257611702612456565b048201901c9050600181848161171a5761171a612456565b048201901c9050600181848161173257611732612456565b048201901c9050600181848161174a5761174a612456565b048201901c9050600181848161176257611762612456565b048201901c9050600181848161177a5761177a612456565b048201901c90506107bc8182858161179457611794612456565b04611ca7565b60006117a9600284841861246c565b6107bc9084841661241a565b6117bf8282611cbd565b6002546001600160e01b0310156118315760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610704565b611059600b611d8483611d90565b6118498282611f05565b611059600b61203e83611d90565b816001600160a01b0316836001600160a01b0316141580156118795750600081115b156116a2576001600160a01b03831615611907576001600160a01b0383166000908152600a6020526040812081906118b49061203e85611d90565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516118fc929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156116a2576001600160a01b0382166000908152600a60205260408120819061193d90611d8485611d90565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611985929190918252602082015260400190565b60405180910390a25050505050565b606060006119a18361204a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a0a5750600090506003611a8e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a5e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8757600060019250925050611a8e565b9150600090505b94509492505050565b6000816004811115611aab57611aab61248e565b03611ab35750565b6001816004811115611ac757611ac761248e565b03611b145760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610704565b6002816004811115611b2857611b2861248e565b03611b755760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610704565b6003816004811115611b8957611b8961248e565b0361087e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610704565b6001600160a01b038381166000908152600960205260408082205485841683529120546116a292918216911683611857565b600080608083901c15611c2857608092831c92015b604083901c15611c3a57604092831c92015b602083901c15611c4c57602092831c92015b601083901c15611c5e57601092831c92015b600883901c15611c7057600892831c92015b600483901c15611c8257600492831c92015b600283901c15611c9457600292831c92015b600183901c156105dc5760010192915050565b6000818310611cb657816107bc565b5090919050565b6001600160a01b038216611d135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610704565b8060026000828254611d25919061241a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610870600083836116a7565b60006107bc828461241a565b82546000908190818115611ddd5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611df2565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611e1284868863ffffffff16565b9250600082118015611e3c5750611e27610a53565b65ffffffffffff16816000015163ffffffff16145b15611e8157611e4a83612072565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055611efb565b866040518060400160405280611ea5611e98610a53565b65ffffffffffff166114aa565b63ffffffff168152602001611eb986612072565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b038216611f655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610704565b6001600160a01b03821660009081526020819052604090205481811015611fd95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610704565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36116a2836000846116a7565b60006107bc8284612443565b600060ff8216601f8111156105dc57604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b0382111561150f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610704565b6000815180845260005b81811015612101576020818501810151868301820152016120e5565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107bc60208301846120db565b6001600160a01b038116811461087e57600080fd5b6000806040838503121561215c57600080fd5b823561216781612134565b946020939093013593505050565b60008060006060848603121561218a57600080fd5b833561219581612134565b925060208401356121a581612134565b929592945050506040919091013590565b6000602082840312156121c857600080fd5b81356107bc81612134565b6000602082840312156121e557600080fd5b5035919050565b60ff60f81b881681526000602060e08184015261220c60e084018a6120db565b838103604085015261221e818a6120db565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561227057835183529284019291840191600101612254565b50909c9b505050505050505050505050565b803560ff8116811461229357600080fd5b919050565b60008060008060008060c087890312156122b157600080fd5b86356122bc81612134565b955060208701359450604087013593506122d860608801612282565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561230d57600080fd5b873561231881612134565b9650602088013561232881612134565b9550604088013594506060880135935061234460808901612282565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561237357600080fd5b823561237e81612134565b9150602083013561238e81612134565b809150509250929050565b600080604083850312156123ac57600080fd5b82356123b781612134565b9150602083013563ffffffff8116811461238e57600080fd5b600181811c908216806123e457607f821691505b60208210810361169c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105dc576105dc612404565b634e487b7160e01b600052603260045260246000fd5b818103818111156105dc576105dc612404565b634e487b7160e01b600052601260045260246000fd5b60008261248957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220283ff886fa4750b50b6e5c1f86dfe389dce994c238d881fc6a19616b5756355e64736f6c63430008130033",
    "sourceMap": "443:2953:69:-:0;;;1470:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1817:52:40;;;;;;;;;;;;;-1:-1:-1;;;1817:52:40;;;1856:4;3178:431:55;;;;;;;;;;;;;-1:-1:-1;;;3178:431:55;;;1980:113:38;;;;;;;;;;;;;-1:-1:-1;;;1980:113:38;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:38;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:38;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;3251:45:55;;-1:-1:-1;3251:4:55;;-1:-1:-1;3282:13:55;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;3907:25:93;3948:18;;;3941:34;;;;3991:18;;;3984:34;4106:13:55;4034:18:93;;;4027:34;4129:4:55;4077:19:93;;;4070:61;4018:7:55;;3879:19:93;;4054:81:55;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:55;3575:27;;-1:-1:-1;;;;;;1696:22:69;;::::2;;::::0;1728;;::::2;;::::0;1760:30;::::2;;::::0;1800:26:::2;;::::0;443:2953;;2895:341:51;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:51;;-1:-1:-1;3014:216:51;2895:341;;;;:::o;1689:286::-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:51;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:51:o;14:139:93:-;-1:-1:-1;;;;;97:31:93;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:764::-;333:6;341;349;357;410:3;398:9;389:7;385:23;381:33;378:53;;;427:1;424;417:12;378:53;459:9;453:16;478:39;511:5;478:39;:::i;:::-;586:2;571:18;;565:25;536:5;;-1:-1:-1;599:41:93;565:25;599:41;:::i;:::-;711:2;696:18;;690:25;659:7;;-1:-1:-1;724:41:93;690:25;724:41;:::i;:::-;836:2;821:18;;815:25;784:7;;-1:-1:-1;849:41:93;815:25;849:41;:::i;:::-;158:764;;;;-1:-1:-1;158:764:93;;-1:-1:-1;;158:764:93:o;927:127::-;988:10;983:3;979:20;976:1;969:31;1019:4;1016:1;1009:15;1043:4;1040:1;1033:15;1059:380;1138:1;1134:12;;;;1181;;;1202:61;;1256:4;1248:6;1244:17;1234:27;;1202:61;1309:2;1301:6;1298:14;1278:18;1275:38;1272:161;;1355:10;1350:3;1346:20;1343:1;1336:31;1390:4;1387:1;1380:15;1418:4;1415:1;1408:15;1272:161;;1059:380;;;:::o;1570:545::-;1672:2;1667:3;1664:11;1661:448;;;1708:1;1733:5;1729:2;1722:17;1778:4;1774:2;1764:19;1848:2;1836:10;1832:19;1829:1;1825:27;1819:4;1815:38;1884:4;1872:10;1869:20;1866:47;;;-1:-1:-1;1907:4:93;1866:47;1962:2;1957:3;1953:12;1950:1;1946:20;1940:4;1936:31;1926:41;;2017:82;2035:2;2028:5;2025:13;2017:82;;;2080:17;;;2061:1;2050:13;2017:82;;;2021:3;;;1661:448;1570:545;;;:::o;2291:1352::-;2411:10;;-1:-1:-1;;;;;2433:30:93;;2430:56;;;2466:18;;:::i;:::-;2495:97;2585:6;2545:38;2577:4;2571:11;2545:38;:::i;:::-;2539:4;2495:97;:::i;:::-;2647:4;;2711:2;2700:14;;2728:1;2723:663;;;;3430:1;3447:6;3444:89;;;-1:-1:-1;3499:19:93;;;3493:26;3444:89;-1:-1:-1;;2248:1:93;2244:11;;;2240:24;2236:29;2226:40;2272:1;2268:11;;;2223:57;3546:81;;2693:944;;2723:663;1517:1;1510:14;;;1554:4;1541:18;;-1:-1:-1;;2759:20:93;;;2877:236;2891:7;2888:1;2885:14;2877:236;;;2980:19;;;2974:26;2959:42;;3072:27;;;;3040:1;3028:14;;;;2907:19;;2877:236;;;2881:3;3141:6;3132:7;3129:19;3126:201;;;3202:19;;;3196:26;-1:-1:-1;;3285:1:93;3281:14;;;3297:3;3277:24;3273:37;3269:42;3254:58;3239:74;;3126:201;-1:-1:-1;;;;;3373:1:93;3357:14;;;3353:22;3340:36;;-1:-1:-1;2291:1352:93:o;4142:548::-;4254:4;4283:2;4312;4301:9;4294:21;4344:6;4338:13;4387:6;4382:2;4371:9;4367:18;4360:34;4412:1;4422:140;4436:6;4433:1;4430:13;4422:140;;;4531:14;;;4527:23;;4521:30;4497:17;;;4516:2;4493:26;4486:66;4451:10;;4422:140;;;4426:3;4611:1;4606:2;4597:6;4586:9;4582:22;4578:31;4571:42;4681:2;4674;4670:7;4665:2;4657:6;4653:15;4649:29;4638:9;4634:45;4630:54;4622:62;;;;4142:548;;;;:::o;4695:297::-;4813:12;;4860:4;4849:16;;;4843:23;;4813:12;4878:16;;4875:111;;;-1:-1:-1;;4952:4:93;4948:17;;;;4945:1;4941:25;4937:38;4926:50;;4695:297;-1:-1:-1;4695:297:93:o;:::-;443:2953:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c8063709d039d1161010f5780639ab24eb0116100a2578063c451463b11610071578063c451463b146104ac578063d505accf146104d3578063dd62ed3e146104e6578063f1127ed8146104f957600080fd5b80639ab24eb014610460578063a457c2d714610473578063a9059cbb14610486578063c3cda5201461049957600080fd5b806384b0196e116100de57806384b0196e1461040b5780638e539e8c1461042657806391ddadf41461043957806395d89b411461045857600080fd5b8063709d039d1461038157806370a08231146103a857806375f4f18e146103d15780637ecebe00146103f857600080fd5b80633a46b1a8116101875780634dfd324e116101565780634dfd324e146102f3578063587cde1e1461031a5780635c19a95c146103465780636fcfff451461035957600080fd5b80633a46b1a8146102b057806340c10f19146102c357806342966c68146102d85780634bf5d7e9146102eb57600080fd5b8063302bb94d116101c3578063302bb94d1461025b578063313ce567146102865780633644e51514610295578063395093511461029d57600080fd5b806306fdde03146101f5578063095ea7b31461021357806318160ddd1461023657806323b872dd14610248575b600080fd5b6101fd610536565b60405161020a9190612121565b60405180910390f35b610226610221366004612149565b6105c8565b604051901515815260200161020a565b6002545b60405190815260200161020a565b610226610256366004612175565b6105e2565b61026e6102693660046121b6565b610606565b6040516001600160a01b03909116815260200161020a565b6040516012815260200161020a565b61023a61070d565b6102266102ab366004612149565b61071c565b61023a6102be366004612149565b61073e565b6102d66102d1366004612149565b6107c3565b005b6102d66102e63660046121d3565b610874565b6101fd610881565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61026e6103283660046121b6565b6001600160a01b039081166000908152600960205260409020541690565b6102d66103543660046121b6565b610919565b61036c6103673660046121b6565b610923565b60405163ffffffff909116815260200161020a565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6103b63660046121b6565b6001600160a01b031660009081526020819052604090205490565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b61023a6104063660046121b6565b610945565b610413610963565b60405161020a97969594939291906121ec565b61023a6104343660046121d3565b6109ec565b610441610a53565b60405165ffffffffffff909116815260200161020a565b6101fd610a5e565b61023a61046e3660046121b6565b610a6d565b610226610481366004612149565b610aef565b610226610494366004612149565b610b6a565b6102d66104a7366004612298565b610b78565b61026e7f000000000000000000000000000000000000000000000000000000000000000081565b6102d66104e13660046122f2565b610cae565b61023a6104f4366004612360565b610e12565b61050c610507366004612399565b610e3d565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161020a565b606060038054610545906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610571906123d0565b80156105be5780601f10610593576101008083540402835291602001916105be565b820191906000526020600020905b8154815290600101906020018083116105a157829003601f168201915b5050505050905090565b6000336105d6818585610ec1565b60019150505b92915050565b6000336105f0858285610fe5565b6105fb85858561105f565b506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03160361066857507f0000000000000000000000000000000000000000000000000000000000000000919050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036106c857507f0000000000000000000000000000000000000000000000000000000000000000919050565b60405162461bcd60e51b815260206004820152601560248201527426282a37b5b2b72fafaab735b737bbb72a37b5b2b760591b60448201526064015b60405180910390fd5b6000610717611209565b905090565b6000336105d681858561072f8383610e12565b610739919061241a565b610ec1565b6000610748610a53565b65ffffffffffff16821061079a5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6001600160a01b0383166000908152600a602052604090206107bc9083611334565b9392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806108225750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6108665760405162461bcd60e51b81526020600482015260156024820152741314151bdad95b97d7d55b985d5d1a1bdc9a5e9959605a1b6044820152606401610704565b610870828261141d565b5050565b61087e3382611427565b50565b60604361088c610a53565b65ffffffffffff16146108e15760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610704565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61087e3382611431565b6001600160a01b0381166000908152600a60205260408120546105dc906114aa565b6001600160a01b0381166000908152600760205260408120546105dc565b6000606080828080836109977f00000000000000000000000000000000000000000000000000000000000000006005611513565b6109c27f00000000000000000000000000000000000000000000000000000000000000006006611513565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006109f6610a53565b65ffffffffffff168210610a485760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b6044820152606401610704565b6105dc600b83611334565b6000610717436115be565b606060048054610545906123d0565b6001600160a01b0381166000908152600a60205260408120548015610adc576001600160a01b0383166000908152600a6020526040902080546000198301908110610aba57610aba61242d565b60009182526020909120015464010000000090046001600160e01b0316610adf565b60005b6001600160e01b03169392505050565b60003381610afd8286610e12565b905083811015610b5d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610704565b6105fb8286868403610ec1565b6000336105d681858561105f565b83421115610bc85760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610704565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610c4290610c3a9060a00160405160208183030381529060405280519060200120611625565b858585611652565b9050610c4d8161167a565b8614610c9b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610704565b610ca58188611431565b50505050505050565b83421115610cfe5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610704565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610d2d8c61167a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d8882611625565b90506000610d9882878787611652565b9050896001600160a01b0316816001600160a01b031614610dfb5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610704565b610e068a8a8a610ec1565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610e8157610e8161242d565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610f235760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610704565b6001600160a01b038216610f845760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610704565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ff18484610e12565b90506000198114611059578181101561104c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610704565b6110598484848403610ec1565b50505050565b6001600160a01b0383166110c35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610704565b6001600160a01b0382166111255760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610704565b6001600160a01b0383166000908152602081905260409020548181101561119d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610704565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36110598484846116a7565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561126257507f000000000000000000000000000000000000000000000000000000000000000046145b1561128c57507f000000000000000000000000000000000000000000000000000000000000000090565b610717604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b81546000908181600581111561138e57600061134f846116b2565b6113599085612443565b600088815260209020909150869082015463ffffffff16111561137e5780915061138c565b61138981600161241a565b92505b505b808210156113db5760006113a2838361179a565b600088815260209020909150869082015463ffffffff1611156113c7578091506113d5565b6113d281600161241a565b92505b5061138e565b8015611407576000868152602090208101600019015464010000000090046001600160e01b031661140a565b60005b6001600160e01b03169695505050505050565b61087082826117b5565b610870828261183f565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4611059828483611857565b600063ffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610704565b5090565b606060ff831461152d5761152683611994565b90506105dc565b818054611539906123d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611565906123d0565b80156115b25780601f10611587576101008083540402835291602001916115b2565b820191906000526020600020905b81548152906001019060200180831161159557829003601f168201915b505050505090506105dc565b600065ffffffffffff82111561150f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610704565b60006105dc611632611209565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000611663878787876119d3565b9150915061167081611a97565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b6116a2838383611be1565b6000816000036116c457506000919050565b600060016116d184611c13565b901c6001901b905060018184816116ea576116ea612456565b048201901c9050600181848161170257611702612456565b048201901c9050600181848161171a5761171a612456565b048201901c9050600181848161173257611732612456565b048201901c9050600181848161174a5761174a612456565b048201901c9050600181848161176257611762612456565b048201901c9050600181848161177a5761177a612456565b048201901c90506107bc8182858161179457611794612456565b04611ca7565b60006117a9600284841861246c565b6107bc9084841661241a565b6117bf8282611cbd565b6002546001600160e01b0310156118315760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610704565b611059600b611d8483611d90565b6118498282611f05565b611059600b61203e83611d90565b816001600160a01b0316836001600160a01b0316141580156118795750600081115b156116a2576001600160a01b03831615611907576001600160a01b0383166000908152600a6020526040812081906118b49061203e85611d90565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516118fc929190918252602082015260400190565b60405180910390a250505b6001600160a01b038216156116a2576001600160a01b0382166000908152600a60205260408120819061193d90611d8485611d90565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611985929190918252602082015260400190565b60405180910390a25050505050565b606060006119a18361204a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a0a5750600090506003611a8e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a5e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8757600060019250925050611a8e565b9150600090505b94509492505050565b6000816004811115611aab57611aab61248e565b03611ab35750565b6001816004811115611ac757611ac761248e565b03611b145760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610704565b6002816004811115611b2857611b2861248e565b03611b755760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610704565b6003816004811115611b8957611b8961248e565b0361087e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610704565b6001600160a01b038381166000908152600960205260408082205485841683529120546116a292918216911683611857565b600080608083901c15611c2857608092831c92015b604083901c15611c3a57604092831c92015b602083901c15611c4c57602092831c92015b601083901c15611c5e57601092831c92015b600883901c15611c7057600892831c92015b600483901c15611c8257600492831c92015b600283901c15611c9457600292831c92015b600183901c156105dc5760010192915050565b6000818310611cb657816107bc565b5090919050565b6001600160a01b038216611d135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610704565b8060026000828254611d25919061241a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610870600083836116a7565b60006107bc828461241a565b82546000908190818115611ddd5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611df2565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611e1284868863ffffffff16565b9250600082118015611e3c5750611e27610a53565b65ffffffffffff16816000015163ffffffff16145b15611e8157611e4a83612072565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055611efb565b866040518060400160405280611ea5611e98610a53565b65ffffffffffff166114aa565b63ffffffff168152602001611eb986612072565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b6001600160a01b038216611f655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610704565b6001600160a01b03821660009081526020819052604090205481811015611fd95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610704565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36116a2836000846116a7565b60006107bc8284612443565b600060ff8216601f8111156105dc57604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b0382111561150f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610704565b6000815180845260005b81811015612101576020818501810151868301820152016120e5565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107bc60208301846120db565b6001600160a01b038116811461087e57600080fd5b6000806040838503121561215c57600080fd5b823561216781612134565b946020939093013593505050565b60008060006060848603121561218a57600080fd5b833561219581612134565b925060208401356121a581612134565b929592945050506040919091013590565b6000602082840312156121c857600080fd5b81356107bc81612134565b6000602082840312156121e557600080fd5b5035919050565b60ff60f81b881681526000602060e08184015261220c60e084018a6120db565b838103604085015261221e818a6120db565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561227057835183529284019291840191600101612254565b50909c9b505050505050505050505050565b803560ff8116811461229357600080fd5b919050565b60008060008060008060c087890312156122b157600080fd5b86356122bc81612134565b955060208701359450604087013593506122d860608801612282565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561230d57600080fd5b873561231881612134565b9650602088013561232881612134565b9550604088013594506060880135935061234460808901612282565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561237357600080fd5b823561237e81612134565b9150602083013561238e81612134565b809150509250929050565b600080604083850312156123ac57600080fd5b82356123b781612134565b9150602083013563ffffffff8116811461238e57600080fd5b600181811c908216806123e457607f821691505b60208210810361169c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156105dc576105dc612404565b634e487b7160e01b600052603260045260246000fd5b818103818111156105dc576105dc612404565b634e487b7160e01b600052601260045260246000fd5b60008261248957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220283ff886fa4750b50b6e5c1f86dfe389dce994c238d881fc6a19616b5756355e64736f6c63430008130033",
    "sourceMap": "443:2953:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1288:14:93;;1281:22;1263:41;;1251:2;1236:18;4444:197:38;1123:187:93;3255:106:38;3342:12;;3255:106;;;1461:25:93;;;1449:2;1434:18;3255:106:38;1315:177:93;5203:256:38;;;;;;:::i;:::-;;:::i;2114:211:69:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2406:32:93;;;2388:51;;2376:2;2361:18;2114:211:69;2226:219:93;3104:91:38;;;3186:2;2592:36:93;;2580:2;2565:18;3104:91:38;2450:184:93;2867:113:40;;;:::i;5854:234:38:-;;;;;;:::i;:::-;;:::i;3466:248:41:-;;;;;;:::i;:::-;;:::i;2596:97:69:-;;;;;;:::i;:::-;;:::i;:::-;;2827:79;;;;;;:::i;:::-;;:::i;2047:254:41:-;;;:::i;526:45:69:-;;;;;2838:126:41;;;;;;:::i;:::-;-1:-1:-1;;;;;2938:19:41;;;2912:7;2938:19;;;:10;:19;;;;;;;;2838:126;6275:112;;;;;;:::i;:::-;;:::i;2601:149::-;;;;;;:::i;:::-;;:::i;:::-;;;3872:10:93;3860:23;;;3842:42;;3830:2;3815:18;2601:149:41;3698:192:93;627:41:69;;;;;3419:125:38;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:38;3493:7;3519:18;;;;;;;;;;;;3419:125;723:33:69;;;;;2617:126:40;;;;;;:::i;:::-;;:::i;5021:633:55:-;;;:::i;:::-;;;;;;;;;;;;;:::i;3976:239:41:-;;;;;;:::i;:::-;;:::i;1817:118::-;;;:::i;:::-;;;5563:14:93;5551:27;;;5533:46;;5521:2;5506:18;1817:118:41;5389:196:93;2369:102:38;;;:::i;3043:243:41:-;;;;;;:::i;:::-;;:::i;6575:427:38:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;6464:574:41:-;;;;;;:::i;:::-;;:::i;805:33:69:-;;;;;1930:626:40;;;;;;:::i;:::-;;:::i;3987:149:38:-;;;;;;:::i;:::-;;:::i;2378:148:41:-;;;;;;:::i;:::-;;:::i;:::-;;;;8130:13:93;;8145:10;8126:30;8108:49;;8217:4;8205:17;;;8199:24;-1:-1:-1;;;;;8195:50:93;8173:20;;;8166:80;;;;8081:18;2378:148:41;7904:348:93;2158:98:38;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:49;4581:32:38;719:10:49;4597:7:38;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:49;5356:38:38;5372:4;719:10:49;5387:6:38;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:38;;5203:256;-1:-1:-1;;;;5203:256:38:o;2114:211:69:-;2169:6;2200:9;-1:-1:-1;;;;;2191:18:69;:5;-1:-1:-1;;;;;2191:18:69;;2187:40;;-1:-1:-1;2218:9:69;;2114:211;-1:-1:-1;2114:211:69:o;2187:40::-;2250:9;-1:-1:-1;;;;;2241:18:69;:5;-1:-1:-1;;;;;2241:18:69;;2237:40;;-1:-1:-1;2268:9:69;;2114:211;-1:-1:-1;2114:211:69:o;2237:40::-;2287:31;;-1:-1:-1;;;2287:31:69;;8844:2:93;2287:31:69;;;8826:21:93;8883:2;8863:18;;;8856:30;-1:-1:-1;;;8902:18:93;;;8895:51;8963:18;;2287:31:69;;;;;;;;2867:113:40;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;5854:234:38:-;5942:4;719:10:49;5996:64:38;719:10:49;6012:7:38;6049:10;6021:25;719:10:49;6012:7:38;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3466:248:41:-;3562:7;3601;:5;:7::i;:::-;3589:19;;:9;:19;3581:57;;;;-1:-1:-1;;;3581:57:41;;9456:2:93;3581:57:41;;;9438:21:93;9495:2;9475:18;;;9468:30;-1:-1:-1;;;9514:18:93;;;9507:55;9579:18;;3581:57:41;9254:349:93;3581:57:41;-1:-1:-1;;;;;3674:21:41;;;;;;:12;:21;;;;;3655:52;;3697:9;3655:18;:52::i;:::-;3648:59;3466:248;-1:-1:-1;;;3466:248:41:o;2596:97:69:-;957:10;-1:-1:-1;;;;;979:11:69;957:34;;;:90;;-1:-1:-1;1011:10:69;-1:-1:-1;;;;;1033:13:69;1011:36;;957:90;936:158;;;;-1:-1:-1;;;936:158:69;;9810:2:93;936:158:69;;;9792:21:93;9849:2;9829:18;;;9822:30;-1:-1:-1;;;9868:18:93;;;9861:51;9929:18;;936:158:69;9608:345:93;936:158:69;2669:17:::1;2675:2;2679:6;2669:5;:17::i;:::-;2596:97:::0;;:::o;2827:79::-;2874:25;2880:10;2892:6;2874:5;:25::i;:::-;2827:79;:::o;2047:254:41:-;2107:13;2200:12;2189:7;:5;:7::i;:::-;:23;;;2181:65;;;;-1:-1:-1;;;2181:65:41;;10160:2:93;2181:65:41;;;10142:21:93;10199:2;10179:18;;;10172:30;10238:31;10218:18;;;10211:59;10287:18;;2181:65:41;9958:353:93;2181:65:41;-1:-1:-1;2256:38:41;;;;;;;;;;;;;;;;;;2047:254::o;6275:112::-;6346:34;719:10:49;6370:9:41;6346;:34::i;2601:149::-;-1:-1:-1;;;;;2714:21:41;;2671:6;2714:21;;;:12;:21;;;;;:28;2696:47;;:17;:47::i;2617:126:40:-;-1:-1:-1;;;;;2712:14:40;;2686:7;2712:14;;;:7;:14;;;;;918::50;2712:24:40;827:112:50;5021:633:55;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5454:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:55;;;-1:-1:-1;5376:271:55;;-1:-1:-1;5543:13:55;;-1:-1:-1;5578:4:55;;-1:-1:-1;5605:1:55;-1:-1:-1;5621:16:55;-1:-1:-1;5376:271:55;-1:-1:-1;5021:633:55:o;3976:239:41:-;4061:7;4100;:5;:7::i;:::-;4088:19;;:9;:19;4080:57;;;;-1:-1:-1;;;4080:57:41;;9456:2:93;4080:57:41;;;9438:21:93;9495:2;9475:18;;;9468:30;-1:-1:-1;;;9514:18:93;;;9507:55;9579:18;;4080:57:41;9254:349:93;4080:57:41;4154:54;4173:23;4198:9;4154:18;:54::i;1817:118::-;1872:6;1897:31;1915:12;1897:17;:31::i;2369:102:38:-;2425:13;2457:7;2450:14;;;;;:::i;3043:243:41:-;-1:-1:-1;;;;;3149:21:41;;3116:7;3149:21;;;:12;:21;;;;;:28;3218:8;;:51;;-1:-1:-1;;;;;3233:21:41;;;;;;:12;:21;;;;;:30;;-1:-1:-1;;3255:7:41;;;3233:30;;;;;;:::i;:::-;;;;;;;;;;:36;;;;-1:-1:-1;;;;;3233:36:41;3218:51;;;3229:1;3218:51;-1:-1:-1;;;;;3211:58:41;;3043:243;-1:-1:-1;;;3043:243:41:o;6575:427:38:-;6668:4;719:10:49;6668:4:38;6749:25;719:10:49;6766:7:38;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:38;;10782:2:93;6784:85:38;;;10764:21:93;10821:2;10801:18;;;10794:30;10860:34;10840:18;;;10833:62;-1:-1:-1;;;10911:18:93;;;10904:35;10956:19;;6784:85:38;10580:401:93;6784:85:38;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:49;3873:28:38;719:10:49;3890:2:38;3894:6;3873:9;:28::i;6464:574:41:-;6683:6;6664:15;:25;;6656:67;;;;-1:-1:-1;;;6656:67:41;;11188:2:93;6656:67:41;;;11170:21:93;11227:2;11207:18;;;11200:30;11266:31;11246:18;;;11239:59;11315:18;;6656:67:41;10986:353:93;6656:67:41;6804:58;;;1439:71;6804:58;;;11575:25:93;-1:-1:-1;;;;;11636:32:93;;11616:18;;;11609:60;;;;11685:18;;;11678:34;;;11728:18;;;11721:34;;;6733:14:41;;6750:169;;6777:87;;11547:19:93;;6804:58:41;;;;;;;;;;;;6794:69;;;;;;6777:16;:87::i;:::-;6878:1;6893;6908;6750:13;:169::i;:::-;6733:186;;6946:17;6956:6;6946:9;:17::i;:::-;6937:5;:26;6929:64;;;;-1:-1:-1;;;6929:64:41;;11968:2:93;6929:64:41;;;11950:21:93;12007:2;11987:18;;;11980:30;12046:27;12026:18;;;12019:55;12091:18;;6929:64:41;11766:349:93;6929:64:41;7003:28;7013:6;7021:9;7003;:28::i;:::-;6646:392;6464:574;;;;;;:::o;1930:626:40:-;2165:8;2146:15;:27;;2138:69;;;;-1:-1:-1;;;2138:69:40;;12322:2:93;2138:69:40;;;12304:21:93;12361:2;12341:18;;;12334:30;12400:31;12380:18;;;12373:59;12449:18;;2138:69:40;12120:353:93;2138:69:40;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2249:79;;;;;;12765:25:93;;;;-1:-1:-1;;;;;12864:15:93;;;12844:18;;;12837:43;12916:15;;;;12896:18;;;12889:43;12948:18;;;12941:34;12991:19;;;12984:35;13035:19;;;13028:35;;;12737:19;;2249:79:40;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;-1:-1:-1;;;;;2457:15:40;:6;-1:-1:-1;;;;;2457:15:40;;2449:58;;;;-1:-1:-1;;;2449:58:40;;13276:2:93;2449:58:40;;;13258:21:93;13315:2;13295:18;;;13288:30;13354:32;13334:18;;;13327:60;13404:18;;2449:58:40;13074:354:93;2449:58:40;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;3987:149:38:-;-1:-1:-1;;;;;4102:18:38;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2378:148:41:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2493:21:41;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2486:33;;;;;;;;;2493:26;;2486:33;;;;;;;;;-1:-1:-1;;;;;2486:33:41;;;;;;;;;2378:148;-1:-1:-1;;;2378:148:41:o;10457:340:38:-;-1:-1:-1;;;;;10558:19:38;;10550:68;;;;-1:-1:-1;;;10550:68:38;;13635:2:93;10550:68:38;;;13617:21:93;13674:2;13654:18;;;13647:30;13713:34;13693:18;;;13686:62;-1:-1:-1;;;13764:18:93;;;13757:34;13808:19;;10550:68:38;13433:400:93;10550:68:38;-1:-1:-1;;;;;10636:21:38;;10628:68;;;;-1:-1:-1;;;10628:68:38;;14040:2:93;10628:68:38;;;14022:21:93;14079:2;14059:18;;;14052:30;14118:34;14098:18;;;14091:62;-1:-1:-1;;;14169:18:93;;;14162:32;14211:19;;10628:68:38;13838:398:93;10628:68:38;-1:-1:-1;;;;;10707:18:38;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1461:25:93;;;10758:32:38;;1434:18:93;10758:32:38;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:38;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:38;;14443:2:93;11297:68:38;;;14425:21:93;14482:2;14462:18;;;14455:30;14521:31;14501:18;;;14494:59;14570:18;;11297:68:38;14241:353:93;11297:68:38;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:38;;7544:68;;;;-1:-1:-1;;;7544:68:38;;14801:2:93;7544:68:38;;;14783:21:93;14840:2;14820:18;;;14813:30;14879:34;14859:18;;;14852:62;-1:-1:-1;;;14930:18:93;;;14923:35;14975:19;;7544:68:38;14599:401:93;7544:68:38;-1:-1:-1;;;;;7630:16:38;;7622:64;;;;-1:-1:-1;;;7622:64:38;;15207:2:93;7622:64:38;;;15189:21:93;15246:2;15226:18;;;15219:30;15285:34;15265:18;;;15258:62;-1:-1:-1;;;15336:18:93;;;15329:33;15379:19;;7622:64:38;15005:399:93;7622:64:38;-1:-1:-1;;;;;7768:15:38;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:38;;15611:2:93;7793:72:38;;;15593:21:93;15650:2;15630:18;;;15623:30;15689:34;15669:18;;;15662:62;-1:-1:-1;;;15740:18:93;;;15733:36;15786:19;;7793:72:38;15409:402:93;7793:72:38;-1:-1:-1;;;;;7899:15:38;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1461:25:93;;;8114:13:38;;8163:26;;1434:18:93;8163:26:38;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;3695:262:55:-;3748:7;3779:4;-1:-1:-1;;;;;3788:11:55;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:55;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;17022:25:93;4077:11:55;17063:18:93;;;17056:34;;;;4090:14:55;17106:18:93;;;17099:34;4106:13:55;17149:18:93;;;17142:34;4129:4:55;17192:19:93;;;17185:61;4018:7:55;;16994:19:93;;4054:81:55;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;4299:1895:41;5510:12;;4396:7;;;5510:12;5603:1;5594:10;;5590:242;;;5620:11;5643:17;5653:6;5643:9;:17::i;:::-;5634:26;;:6;:26;:::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;5620:40;;-1:-1:-1;5716:9:41;;10735:28;;5678:35;;;:47;5674:148;;;5752:3;5745:10;;5674:148;;;5800:7;:3;5806:1;5800:7;:::i;:::-;5794:13;;5674:148;5606:226;5590:242;5855:4;5849:3;:10;5842:242;;;5875:11;5889:23;5902:3;5907:4;5889:12;:23::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;5875:37;;-1:-1:-1;5968:9:41;;10735:28;;5930:35;;;:47;5926:148;;;6004:3;5997:10;;5926:148;;;6052:7;:3;6058:1;6052:7;:::i;:::-;6046:13;;5926:148;5861:223;5842:242;;;6125:9;;:52;;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;-1:-1:-1;;10735:28:41;6141:36;;;;-1:-1:-1;;;;;6141:36:41;6125:52;;;6137:1;6125:52;-1:-1:-1;;;;;6118:59:41;;4299:1895;-1:-1:-1;;;;;;4299:1895:41:o;3176:101:69:-;3247:23;3259:2;3263:6;3247:11;:23::i;3283:111::-;3359:28;3371:7;3380:6;3359:11;:28::i;8431:380:41:-;-1:-1:-1;;;;;2938:19:41;;;8515:23;2938:19;;;:10;:19;;;;;;;;;;3519:18:38;;;;;;;8628:21:41;;;;:33;;;-1:-1:-1;;;;;;8628:33:41;;;;;;;8677:54;;2938:19;;;;;3519:18:38;;8628:33:41;;2938:19;;;8677:54;;8515:23;8677:54;8742:62;8759:15;8776:9;8787:16;8742;:62::i;15264:187:59:-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:59;;16151:2:93;15338:76:59;;;16133:21:93;16190:2;16170:18;;;16163:30;16229:34;16209:18;;;16202:62;-1:-1:-1;;;16280:18:93;;;16273:36;16326:19;;15338:76:59;15949:402:93;15338:76:59;-1:-1:-1;15438:5:59;15264:187::o;3367:268:51:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14240:187:59;14296:6;14331:16;14322:25;;;14314:76;;;;-1:-1:-1;;;14314:76:59;;16558:2:93;14314:76:59;;;16540:21:93;16597:2;16577:18;;;16570:30;16636:34;16616:18;;;16609:62;-1:-1:-1;;;16687:18:93;;;16680:36;16733:19;;14314:76:59;16356:402:93;4768:165:55;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:54;8530:11;-1:-1:-1;;;8554:23:54;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;6598:232;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;-1:-1:-1;6814:9:54;6598:232;-1:-1:-1;;;;;6598:232:54:o;3111:203:40:-;-1:-1:-1;;;;;3231:14:40;;3171:15;3231:14;;;:7;:14;;;;;918::50;;1050:1;1032:19;;;;918:14;3290:17:40;3188:126;3111:203;;;:::o;12073:91:38:-;;;;:::o;2991:179:69:-;3120:43;3146:4;3152:2;3156:6;3120:25;:43::i;6530:1642:58:-;6578:7;6601:1;6606;6601:6;6597:45;;-1:-1:-1;6630:1:58;;6530:1642;-1:-1:-1;6530:1642:58:o;6597:45::-;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;8132:3;:23::i;805:153::-;867:7;940:11;950:1;941:5;;;940:11;:::i;:::-;930:21;;931:5;;;930:21;:::i;7332:285:41:-;7416:28;7428:7;7437:6;7416:11;:28::i;:::-;3342:12:38;;-1:-1:-1;;;;;;7462:29:41;7454:90;;;;-1:-1:-1;;;7454:90:41;;17813:2:93;7454:90:41;;;17795:21:93;17852:2;17832:18;;;17825:30;17891:34;17871:18;;;17864:62;-1:-1:-1;;;17942:18:93;;;17935:46;17998:19;;7454:90:41;17611:412:93;7454:90:41;7555:55;7572:23;7597:4;7603:6;7555:16;:55::i;7706:190::-;7790:28;7802:7;7811:6;7790:11;:28::i;:::-;7829:60;7846:23;7871:9;7882:6;7829:16;:60::i;8817:597::-;8914:3;-1:-1:-1;;;;;8907:10:41;:3;-1:-1:-1;;;;;8907:10:41;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;-1:-1:-1;;;;;8951:17:41;;;8947:221;;-1:-1:-1;;;;;9046:17:41;;8989;9046;;;:12;:17;;;;;8989;;9029:54;;9065:9;9076:6;9029:16;:54::i;:::-;8988:95;;;;9127:3;-1:-1:-1;;;;;9106:47:41;;9132:9;9143;9106:47;;;;;;18202:25:93;;;18258:2;18243:18;;18236:34;18190:2;18175:18;;18028:248;9106:47:41;;;;;;;;8970:198;;8947:221;-1:-1:-1;;;;;9186:17:41;;;9182:216;;-1:-1:-1;;;;;9281:17:41;;9224;9281;;;:12;:17;;;;;9224;;9264:49;;9300:4;9306:6;9264:16;:49::i;:::-;9223:90;;;;9357:3;-1:-1:-1;;;;;9336:47:41;;9362:9;9373;9336:47;;;;;;18202:25:93;;;18258:2;18243:18;;18236:34;18190:2;18175:18;;18028:248;9336:47:41;;;;;;;;9205:193;;8817:597;;;:::o;2059:405:51:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:51;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:51;;;-1:-1:-1;2416:4:51;2407:14;;2400:28;;;;-1:-1:-1;2371:16:51;2059:405::o;5009:1456:54:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:54;;-1:-1:-1;6123:30:54;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;18508:25:93;;;18581:4;18569:17;;18549:18;;;18542:45;;;;18603:18;;;18596:34;;;18646:18;;;18639:34;;;6276:24:54;;18480:19:93;;6276:24:54;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:54;;-1:-1:-1;;6276:24:54;;;-1:-1:-1;;;;;;;6314:20:54;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:54;;-1:-1:-1;5009:1456:54;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:54;;19018:2:93;788:34:54;;;19000:21:93;19057:2;19037:18;;;19030:30;19096:26;19076:18;;;19069:54;19140:18;;788:34:54;18816:348:93;730:345:54;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:54;;19371:2:93;903:41:54;;;19353:21:93;19410:2;19390:18;;;19383:30;19449:33;19429:18;;;19422:61;19500:18;;903:41:54;19169:355:93;839:236:54;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:54;;19731:2:93;1020:44:54;;;19713:21:93;19770:2;19750:18;;;19743:30;19809:34;19789:18;;;19782:62;-1:-1:-1;;;19860:18:93;;;19853:32;19902:19;;1020:44:54;19529:398:93;8036:224:41;-1:-1:-1;;;;;2938:19:41;;;2912:7;2938:19;;;:10;:19;;;;;;;;;;;;;;;8197:56;;2938:19;;;;;8246:6;8197:16;:56::i;8633:983:58:-;8685:7;;8769:3;8760:12;;;:16;8756:99;;8806:3;8796:13;;;;8827;8756:99;8881:2;8872:11;;;:15;8868:96;;8917:2;8907:12;;;;8937;8868:96;8990:2;8981:11;;;:15;8977:96;;9026:2;9016:12;;;;9046;8977:96;9099:2;9090:11;;;:15;9086:96;;9135:2;9125:12;;;;9155;9086:96;9208:1;9199:10;;;:14;9195:93;;9243:1;9233:11;;;;9262;9195:93;9314:1;9305:10;;;:14;9301:93;;9349:1;9339:11;;;;9368;9301:93;9420:1;9411:10;;;:14;9407:93;;9455:1;9445:11;;;;9474;9407:93;9526:1;9517:10;;;:14;9513:64;;9561:1;9551:11;9603:6;8633:983;-1:-1:-1;;8633:983:58:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:58;;588:104;-1:-1:-1;588:104:58:o;8520:535:38:-;-1:-1:-1;;;;;8603:21:38;;8595:65;;;;-1:-1:-1;;;8595:65:38;;20134:2:93;8595:65:38;;;20116:21:93;20173:2;20153:18;;;20146:30;20212:33;20192:18;;;20185:61;20263:18;;8595:65:38;19932:355:93;8595:65:38;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:38;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1461:25:93;;;8952:37:38;;1434:18:93;8952:37:38;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;10194:96:41:-;10252:7;10278:5;10282:1;10278;:5;:::i;9420:768::-;9652:12;;9590:17;;;;;9727:8;;:59;;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;-1:-1:-1;;10735:28:41;9727:59;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9727:59:41;;;;;;;;9738:16;;;;;;;;;-1:-1:-1;9738:16:41;;;;;;;9727:59;9699:87;;9813:7;:13;;;-1:-1:-1;;;;;9801:25:41;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;:7::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;:29::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;-1:-1:-1;;10735:28:41;9950:67;;-1:-1:-1;;;;;9950:67:41;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;:7::i;:::-;10090:26;;:17;:26::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;:29::i;:::-;-1:-1:-1;;;;;10067:89:41;;;;;;10056:101;;;;;;;-1:-1:-1;10056:101:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;9375:659:38:-;-1:-1:-1;;;;;9458:21:38;;9450:67;;;;-1:-1:-1;;;9450:67:38;;20494:2:93;9450:67:38;;;20476:21:93;20533:2;20513:18;;;20506:30;20572:34;20552:18;;;20545:62;-1:-1:-1;;;20623:18:93;;;20616:31;20664:19;;9450:67:38;20292:397:93;9450:67:38;-1:-1:-1;;;;;9613:18:38;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:38;;20896:2:93;9641:71:38;;;20878:21:93;20935:2;20915:18;;;20908:30;20974:34;20954:18;;;20947:62;-1:-1:-1;;;21025:18:93;;;21018:32;21067:19;;9641:71:38;20694:398:93;9641:71:38;-1:-1:-1;;;;;9746:18:38;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1461:25:93;;;9746:9:38;;:18;9931:37;;1434:18:93;9931:37:38;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;10296:101:41:-;10359:7;10385:5;10389:1;10385;:5;:::i;2536:245:51:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:51;;;;;;;;;;;2836:192:59;2893:7;-1:-1:-1;;;;;2920:26:59;;;2912:78;;;;-1:-1:-1;;;2912:78:59;;21299:2:93;2912:78:59;;;21281:21:93;21338:2;21318:18;;;21311:30;21377:34;21357:18;;;21350:62;-1:-1:-1;;;21428:18:93;;;21421:37;21475:19;;2912:78:59;21097:403:93;14:423;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:131::-;-1:-1:-1;;;;;742:31:93;;732:42;;722:70;;788:1;785;778:12;803:315;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;987:9;974:23;1006:31;1031:5;1006:31;:::i;:::-;1056:5;1108:2;1093:18;;;;1080:32;;-1:-1:-1;;;803:315:93:o;1497:456::-;1574:6;1582;1590;1643:2;1631:9;1622:7;1618:23;1614:32;1611:52;;;1659:1;1656;1649:12;1611:52;1698:9;1685:23;1717:31;1742:5;1717:31;:::i;:::-;1767:5;-1:-1:-1;1824:2:93;1809:18;;1796:32;1837:33;1796:32;1837:33;:::i;:::-;1497:456;;1889:7;;-1:-1:-1;;;1943:2:93;1928:18;;;;1915:32;;1497:456::o;1958:263::-;2033:6;2086:2;2074:9;2065:7;2061:23;2057:32;2054:52;;;2102:1;2099;2092:12;2054:52;2141:9;2128:23;2160:31;2185:5;2160:31;:::i;2821:180::-;2880:6;2933:2;2921:9;2912:7;2908:23;2904:32;2901:52;;;2949:1;2946;2939:12;2901:52;-1:-1:-1;2972:23:93;;2821:180;-1:-1:-1;2821:180:93:o;4125:1259::-;4531:3;4526;4522:13;4514:6;4510:26;4499:9;4492:45;4473:4;4556:2;4594:3;4589:2;4578:9;4574:18;4567:31;4621:46;4662:3;4651:9;4647:19;4639:6;4621:46;:::i;:::-;4715:9;4707:6;4703:22;4698:2;4687:9;4683:18;4676:50;4749:33;4775:6;4767;4749:33;:::i;:::-;4813:2;4798:18;;4791:34;;;-1:-1:-1;;;;;4862:32:93;;4856:3;4841:19;;4834:61;4882:3;4911:19;;4904:35;;;4976:22;;;4970:3;4955:19;;4948:51;5048:13;;5070:22;;;5146:15;;;;-1:-1:-1;5108:15:93;;;;-1:-1:-1;5189:169:93;5203:6;5200:1;5197:13;5189:169;;;5264:13;;5252:26;;5333:15;;;;5298:12;;;;5225:1;5218:9;5189:169;;;-1:-1:-1;5375:3:93;;4125:1259;-1:-1:-1;;;;;;;;;;;;4125:1259:93:o;5590:156::-;5656:20;;5716:4;5705:16;;5695:27;;5685:55;;5736:1;5733;5726:12;5685:55;5590:156;;;:::o;5751:592::-;5853:6;5861;5869;5877;5885;5893;5946:3;5934:9;5925:7;5921:23;5917:33;5914:53;;;5963:1;5960;5953:12;5914:53;6002:9;5989:23;6021:31;6046:5;6021:31;:::i;:::-;6071:5;-1:-1:-1;6123:2:93;6108:18;;6095:32;;-1:-1:-1;6174:2:93;6159:18;;6146:32;;-1:-1:-1;6197:36:93;6229:2;6214:18;;6197:36;:::i;:::-;6187:46;;6280:3;6269:9;6265:19;6252:33;6242:43;;6332:3;6321:9;6317:19;6304:33;6294:43;;5751:592;;;;;;;;:::o;6348:734::-;6459:6;6467;6475;6483;6491;6499;6507;6560:3;6548:9;6539:7;6535:23;6531:33;6528:53;;;6577:1;6574;6567:12;6528:53;6616:9;6603:23;6635:31;6660:5;6635:31;:::i;:::-;6685:5;-1:-1:-1;6742:2:93;6727:18;;6714:32;6755:33;6714:32;6755:33;:::i;:::-;6807:7;-1:-1:-1;6861:2:93;6846:18;;6833:32;;-1:-1:-1;6912:2:93;6897:18;;6884:32;;-1:-1:-1;6935:37:93;6967:3;6952:19;;6935:37;:::i;:::-;6925:47;;7019:3;7008:9;7004:19;6991:33;6981:43;;7071:3;7060:9;7056:19;7043:33;7033:43;;6348:734;;;;;;;;;;:::o;7087:388::-;7155:6;7163;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;7271:9;7258:23;7290:31;7315:5;7290:31;:::i;:::-;7340:5;-1:-1:-1;7397:2:93;7382:18;;7369:32;7410:33;7369:32;7410:33;:::i;:::-;7462:7;7452:17;;;7087:388;;;;;:::o;7480:419::-;7547:6;7555;7608:2;7596:9;7587:7;7583:23;7579:32;7576:52;;;7624:1;7621;7614:12;7576:52;7663:9;7650:23;7682:31;7707:5;7682:31;:::i;:::-;7732:5;-1:-1:-1;7789:2:93;7774:18;;7761:32;7837:10;7824:24;;7812:37;;7802:65;;7863:1;7860;7853:12;8257:380;8336:1;8332:12;;;;8379;;;8400:61;;8454:4;8446:6;8442:17;8432:27;;8400:61;8507:2;8499:6;8496:14;8476:18;8473:38;8470:161;;8553:10;8548:3;8544:20;8541:1;8534:31;8588:4;8585:1;8578:15;8616:4;8613:1;8606:15;8992:127;9053:10;9048:3;9044:20;9041:1;9034:31;9084:4;9081:1;9074:15;9108:4;9105:1;9098:15;9124:125;9189:9;;;9210:10;;;9207:36;;;9223:18;;:::i;10448:127::-;10509:10;10504:3;10500:20;10497:1;10490:31;10540:4;10537:1;10530:15;10564:4;10561:1;10554:15;15816:128;15883:9;;;15904:11;;;15901:37;;;15918:18;;:::i;17257:127::-;17318:10;17313:3;17309:20;17306:1;17299:31;17349:4;17346:1;17339:15;17373:4;17370:1;17363:15;17389:217;17429:1;17455;17445:132;;17499:10;17494:3;17490:20;17487:1;17480:31;17534:4;17531:1;17524:15;17562:4;17559:1;17552:15;17445:132;-1:-1:-1;17591:9:93;;17389:217::o;18684:127::-;18745:10;18740:3;18736:20;18733:1;18726:31;18776:4;18773:1;18766:15;18800:4;18797:1;18790:15",
    "linkReferences": {},
    "immutableReferences": {
      "52564": [
        {
          "start": 4714,
          "length": 32
        }
      ],
      "52566": [
        {
          "start": 4672,
          "length": 32
        }
      ],
      "52568": [
        {
          "start": 4630,
          "length": 32
        }
      ],
      "52570": [
        {
          "start": 4795,
          "length": 32
        }
      ],
      "52572": [
        {
          "start": 4835,
          "length": 32
        }
      ],
      "52575": [
        {
          "start": 2417,
          "length": 32
        }
      ],
      "52578": [
        {
          "start": 2460,
          "length": 32
        }
      ],
      "59062": [
        {
          "start": 760,
          "length": 32
        },
        {
          "start": 2048,
          "length": 32
        }
      ],
      "59065": [
        {
          "start": 902,
          "length": 32
        },
        {
          "start": 1998,
          "length": 32
        }
      ],
      "59068": [
        {
          "start": 982,
          "length": 32
        },
        {
          "start": 1546,
          "length": 32
        },
        {
          "start": 1700,
          "length": 32
        }
      ],
      "59071": [
        {
          "start": 1201,
          "length": 32
        },
        {
          "start": 1604,
          "length": 32
        },
        {
          "start": 1642,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CLOCK_MODE()": "4bf5d7e9",
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "checkpoints(address,uint32)": "f1127ed8",
    "clock()": "91ddadf4",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "delegate(address)": "5c19a95c",
    "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": "c3cda520",
    "delegates(address)": "587cde1e",
    "eip712Domain()": "84b0196e",
    "getPastTotalSupply(uint256)": "8e539e8c",
    "getPastVotes(address,uint256)": "3a46b1a8",
    "getVotes(address)": "9ab24eb0",
    "increaseAllowance(address,uint256)": "39509351",
    "liquidityRamp()": "4dfd324e",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "numCheckpoints(address)": "6fcfff45",
    "otherToken(address)": "302bb94d",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "swapManager()": "709d039d",
    "symbol()": "95d89b41",
    "thatToken()": "c451463b",
    "thisToken()": "75f4f18e",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_thisToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_thatToken\",\"type\":\"address\"},{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"_liquidityRamp\",\"type\":\"address\"},{\"internalType\":\"contract ISwapManager\",\"name\":\"_swapManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LPToken__Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LPToken__UnknownToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityRamp\",\"outputs\":[{\"internalType\":\"contract ILiquidityRamp\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"otherToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapManager\",\"outputs\":[{\"internalType\":\"contract ISwapManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thatToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thisToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It inherits from ERC20Votes to enable governance features.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"params\":{\"amount\":\"The amount of LP tokens to burn.\"}},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"constructor\":{\"params\":{\"_liquidityRamp\":\"The liquidity ramp contract governing the pool.\",\"_swapManager\":\"The swap manager contract for asset exchanges.\",\"_thatToken\":\"The second token in the liquidity pair.\",\"_thisToken\":\"The first token in the liquidity pair.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Can only be called by addresses authorized to mint (i.e., swapManager or liquidityRamp).\",\"params\":{\"amount\":\"The amount of LP tokens to mint.\",\"to\":\"The address receiving the minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"otherToken(address)\":{\"details\":\"Reverts if the provided token is not part of the liquidity pair.\",\"params\":{\"token\":\"The token for which to find the complement.\"},\"returns\":{\"_0\":\"The complementary token.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"thatToken\":{\"return\":\"The IERC20 token address of `thatToken`.\",\"returns\":{\"_0\":\"The IERC20 token address of `thatToken`.\"}},\"thisToken\":{\"return\":\"The IERC20 token address of `thisToken`.\",\"returns\":{\"_0\":\"The IERC20 token address of `thisToken`.\"}}},\"title\":\"LPToken\",\"version\":1},\"userdoc\":{\"errors\":{\"LPToken__UnknownToken()\":[{\"notice\":\"Custom Errors\"}]},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns LP tokens from the caller's address.\"},\"constructor\":{\"notice\":\"Constructor for creating a new LP Token.\"},\"mint(address,uint256)\":{\"notice\":\"Mints new LP tokens.\"},\"otherToken(address)\":{\"notice\":\"Returns the complementary token for a given token in the pair.\"},\"thatToken()\":{\"notice\":\"Fetches the address of `thatToken` in the liquidity pair.\"},\"thisToken()\":{\"notice\":\"Fetches the address of `thisToken` in the liquidity pair.\"}},\"notice\":\"This contract represents a liquidity pool token (LP token) in the Stairway ecosystem.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/governance/IGovernor.sol\":{\"keccak256\":\"0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d\",\"dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g\"]},\"lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/core/LPToken.sol\":{\"keccak256\":\"0xe202a62d09156f4524d0a8a1478ea31acb38fb854da8c39ed3a79d67f43695ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7aeaefe12bd26c6e32a3cf6cbdf46115ca32bfe84b50c8d640ec719169d3caf\",\"dweb:/ipfs/QmWvJyGHQwifdABtCzZFJ11mdAtAMpqWuyMUpDrJXopRvp\"]},\"src/interfaces/ICluster.sol\":{\"keccak256\":\"0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c\",\"dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU\"]},\"src/interfaces/IClusterRegistry.sol\":{\"keccak256\":\"0x757b3d4e8f07444ab9cdd82b560eb4d06e92e50c668ef0fb2eb550442f54c295\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://8181ee22ce05ac0d6295f431c2974ffc97c33cff6768aeb1c8e79ce1c1270471\",\"dweb:/ipfs/QmWW4MY4j3aSTkqNuezvKYSR2mJ84mm2WzGtMJP1dGSoGk\"]},\"src/interfaces/ILPToken.sol\":{\"keccak256\":\"0xdd269676f741bb101ae0224e83b7c1d85e0785694eb60383d914cfbe163abafa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4c07852bf5526250ead721482352e98bea9d2a61272926b11b5d94432b1c5cb\",\"dweb:/ipfs/QmP3RjTdf71xFJdgbCUc7YUDHxXgv17CLAXpvuLZmCQxiR\"]},\"src/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0xb4223304961c3c8af8032bcc75f25812840e93df586bc4dfac79d2137473a794\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://0c988c89e36868504064b21a6e0977a1d0141cb7115cbd8d4c06e3061829079b\",\"dweb:/ipfs/QmR5i3XrjnbHu94Mft1wAatPDWd6DDh72EXJMMGzy6tpjD\"]},\"src/interfaces/ILiquidityRamp.sol\":{\"keccak256\":\"0x68af625f740b481c65f9d98e0100c91bb76b777064995c29e7f30f1069b3520b\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://acc6241fe72ec17057ba5c176c7a44260926ab29564e0719d208875714353089\",\"dweb:/ipfs/QmXFvyseX7Nh7PofX8iLS134zKw5RSS53PgDuejrEFEBq8\"]},\"src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x0a1cb5ff0327d32e28e0f82808d74d494bb103c1ddcbe611f8f17ff5991d01d0\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://0654168f8a1a9388fef765dd41d263803ef7eb537175e3bb51b24f0c8b452eed\",\"dweb:/ipfs/QmQMGpMuHyAnYsfcJkQk5Q1tKinCJbchaJzBWX5mCmkz6C\"]},\"src/interfaces/ISwapManager.sol\":{\"keccak256\":\"0x47f671f5d2c9b1f51b3857b12c5528f76c4161367d11e5f67861cec6a0c67d24\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://34f309ab690eb906c3a59f8ef90567d3600f5b793f95d8e006a845b78b00a4bb\",\"dweb:/ipfs/Qmc3TVsT6XmaHaVzzUtg7Ln9EaUxJPv9yNPtoudJQrPuAU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_thisToken",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_thatToken",
              "type": "address"
            },
            {
              "internalType": "contract ILiquidityRamp",
              "name": "_liquidityRamp",
              "type": "address"
            },
            {
              "internalType": "contract ISwapManager",
              "name": "_swapManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LPToken__Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LPToken__UnknownToken"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "fromDelegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toDelegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "previousBalance",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateVotesChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLOCK_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "pos",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpoints",
          "outputs": [
            {
              "internalType": "struct ERC20Votes.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint224",
                  "name": "votes",
                  "type": "uint224"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "clock",
          "outputs": [
            {
              "internalType": "uint48",
              "name": "",
              "type": "uint48"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timepoint",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPastVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityRamp",
          "outputs": [
            {
              "internalType": "contract ILiquidityRamp",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "otherToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapManager",
          "outputs": [
            {
              "internalType": "contract ISwapManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "thatToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "thisToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "CLOCK_MODE()": {
            "details": "Description of the clock"
          },
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "params": {
              "amount": "The amount of LP tokens to burn."
            }
          },
          "checkpoints(address,uint32)": {
            "details": "Get the `pos`-th checkpoint for `account`."
          },
          "clock()": {
            "details": "Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."
          },
          "constructor": {
            "params": {
              "_liquidityRamp": "The liquidity ramp contract governing the pool.",
              "_swapManager": "The swap manager contract for asset exchanges.",
              "_thatToken": "The second token in the liquidity pair.",
              "_thisToken": "The first token in the liquidity pair."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "delegate(address)": {
            "details": "Delegate votes from the sender to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Delegates votes from signer to `delegatee`"
          },
          "delegates(address)": {
            "details": "Get the address `account` is currently delegating to."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          },
          "getPastTotalSupply(uint256)": {
            "details": "Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past"
          },
          "getPastVotes(address,uint256)": {
            "details": "Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past"
          },
          "getVotes(address)": {
            "details": "Gets the current votes balance for `account`"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Can only be called by addresses authorized to mint (i.e., swapManager or liquidityRamp).",
            "params": {
              "amount": "The amount of LP tokens to mint.",
              "to": "The address receiving the minted tokens."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "numCheckpoints(address)": {
            "details": "Get number of checkpoints for `account`."
          },
          "otherToken(address)": {
            "details": "Reverts if the provided token is not part of the liquidity pair.",
            "params": {
              "token": "The token for which to find the complement."
            },
            "returns": {
              "_0": "The complementary token."
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(uint256)": {
            "notice": "Burns LP tokens from the caller's address."
          },
          "constructor": {
            "notice": "Constructor for creating a new LP Token."
          },
          "mint(address,uint256)": {
            "notice": "Mints new LP tokens."
          },
          "otherToken(address)": {
            "notice": "Returns the complementary token for a given token in the pair."
          },
          "thatToken()": {
            "notice": "Fetches the address of `thatToken` in the liquidity pair."
          },
          "thisToken()": {
            "notice": "Fetches the address of `thisToken` in the liquidity pair."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/core/LPToken.sol": "LPToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
        "keccak256": "0x2bca164e61152f22bd4be7f444d40a46f7b13aa3b7b7fd6b45aa2d869e72f6d7",
        "urls": [
          "bzz-raw://5ed8cf61b5ec618f839ca35fd2d614aa83f252930dcc1c9fdf6259d6e381644d",
          "dweb:/ipfs/QmSjHjCsr9aSudtFJWZ1Pj76FVzUEEpwmFBGnxoRftVN7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
        "keccak256": "0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb",
        "urls": [
          "bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96",
          "dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a",
        "urls": [
          "bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb",
          "dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5805.sol": {
        "keccak256": "0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80",
        "urls": [
          "bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e",
          "dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol": {
        "keccak256": "0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9",
        "urls": [
          "bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6",
          "dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
        "keccak256": "0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295",
        "urls": [
          "bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a",
          "dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
        "keccak256": "0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa",
        "urls": [
          "bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd",
          "dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/core/LPToken.sol": {
        "keccak256": "0xe202a62d09156f4524d0a8a1478ea31acb38fb854da8c39ed3a79d67f43695ae",
        "urls": [
          "bzz-raw://d7aeaefe12bd26c6e32a3cf6cbdf46115ca32bfe84b50c8d640ec719169d3caf",
          "dweb:/ipfs/QmWvJyGHQwifdABtCzZFJ11mdAtAMpqWuyMUpDrJXopRvp"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICluster.sol": {
        "keccak256": "0x219ba33744f5d53803dc00bd506578550fb96c0207e11f735fd3e706312c34cc",
        "urls": [
          "bzz-raw://5423507eddfb5f0147b951f7589916b0fc1dd62a4ba5fc36415dc34a9b053b5c",
          "dweb:/ipfs/Qmc6QvrLffWicKYucBXS5E4frfqQWWZXAiaVTfUNuiRgTU"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IClusterRegistry.sol": {
        "keccak256": "0x757b3d4e8f07444ab9cdd82b560eb4d06e92e50c668ef0fb2eb550442f54c295",
        "urls": [
          "bzz-raw://8181ee22ce05ac0d6295f431c2974ffc97c33cff6768aeb1c8e79ce1c1270471",
          "dweb:/ipfs/QmWW4MY4j3aSTkqNuezvKYSR2mJ84mm2WzGtMJP1dGSoGk"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILPToken.sol": {
        "keccak256": "0xdd269676f741bb101ae0224e83b7c1d85e0785694eb60383d914cfbe163abafa",
        "urls": [
          "bzz-raw://f4c07852bf5526250ead721482352e98bea9d2a61272926b11b5d94432b1c5cb",
          "dweb:/ipfs/QmP3RjTdf71xFJdgbCUc7YUDHxXgv17CLAXpvuLZmCQxiR"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILiquidityManager.sol": {
        "keccak256": "0xb4223304961c3c8af8032bcc75f25812840e93df586bc4dfac79d2137473a794",
        "urls": [
          "bzz-raw://0c988c89e36868504064b21a6e0977a1d0141cb7115cbd8d4c06e3061829079b",
          "dweb:/ipfs/QmR5i3XrjnbHu94Mft1wAatPDWd6DDh72EXJMMGzy6tpjD"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ILiquidityRamp.sol": {
        "keccak256": "0x68af625f740b481c65f9d98e0100c91bb76b777064995c29e7f30f1069b3520b",
        "urls": [
          "bzz-raw://acc6241fe72ec17057ba5c176c7a44260926ab29564e0719d208875714353089",
          "dweb:/ipfs/QmXFvyseX7Nh7PofX8iLS134zKw5RSS53PgDuejrEFEBq8"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/IPoolManager.sol": {
        "keccak256": "0x0a1cb5ff0327d32e28e0f82808d74d494bb103c1ddcbe611f8f17ff5991d01d0",
        "urls": [
          "bzz-raw://0654168f8a1a9388fef765dd41d263803ef7eb537175e3bb51b24f0c8b452eed",
          "dweb:/ipfs/QmQMGpMuHyAnYsfcJkQk5Q1tKinCJbchaJzBWX5mCmkz6C"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/ISwapManager.sol": {
        "keccak256": "0x47f671f5d2c9b1f51b3857b12c5528f76c4161367d11e5f67861cec6a0c67d24",
        "urls": [
          "bzz-raw://34f309ab690eb906c3a59f8ef90567d3600f5b793f95d8e006a845b78b00a4bb",
          "dweb:/ipfs/Qmc3TVsT6XmaHaVzzUtg7Ln9EaUxJPv9yNPtoudJQrPuAU"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/core/LPToken.sol",
    "id": 59243,
    "exportedSymbols": {
      "Context": [
        51552
      ],
      "Counters": [
        51626
      ],
      "ECDSA": [
        52547
      ],
      "EIP712": [
        52751
      ],
      "ERC20": [
        48217
      ],
      "ERC20Permit": [
        48467
      ],
      "ERC20Votes": [
        49201
      ],
      "ICluster": [
        61999
      ],
      "IClusterRegistry": [
        62023
      ],
      "IERC165": [
        52787
      ],
      "IERC20": [
        48295
      ],
      "IERC20Metadata": [
        49226
      ],
      "IERC20Permit": [
        49262
      ],
      "IERC5267": [
        47500
      ],
      "IERC5805": [
        47509
      ],
      "IERC6372": [
        47524
      ],
      "IGovernor": [
        45314
      ],
      "ILPToken": [
        62484
      ],
      "ILiquidityManager": [
        62605
      ],
      "ILiquidityRamp": [
        62721
      ],
      "IPoolManager": [
        62791
      ],
      "ISwapManager": [
        62911
      ],
      "IVotes": [
        47472
      ],
      "LPToken": [
        59242
      ],
      "Math": [
        53653
      ],
      "SafeCast": [
        55194
      ],
      "ShortString": [
        51631
      ],
      "ShortStrings": [
        51842
      ],
      "SignedMath": [
        55299
      ],
      "StorageSlot": [
        51952
      ],
      "Strings": [
        52181
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3365:69",
    "nodes": [
      {
        "id": 59050,
        "nodeType": "PragmaDirective",
        "src": "32:24:69",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 59051,
        "nodeType": "ImportDirective",
        "src": "58:36:69",
        "nodes": [],
        "absolutePath": "src/interfaces/ILPToken.sol",
        "file": "../interfaces/ILPToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 62485,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59052,
        "nodeType": "ImportDirective",
        "src": "95:42:69",
        "nodes": [],
        "absolutePath": "src/interfaces/ILiquidityRamp.sol",
        "file": "../interfaces/ILiquidityRamp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 62722,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59053,
        "nodeType": "ImportDirective",
        "src": "138:40:69",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapManager.sol",
        "file": "../interfaces/ISwapManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 62912,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59054,
        "nodeType": "ImportDirective",
        "src": "180:71:69",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59243,
        "sourceUnit": 49202,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 59242,
        "nodeType": "ContractDefinition",
        "src": "443:2953:69",
        "nodes": [
          {
            "id": 59062,
            "nodeType": "VariableDeclaration",
            "src": "526:45:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "4dfd324e",
            "mutability": "immutable",
            "name": "liquidityRamp",
            "nameLocation": "558:13:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
              "typeString": "contract ILiquidityRamp"
            },
            "typeName": {
              "id": 59061,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59060,
                "name": "ILiquidityRamp",
                "nameLocations": [
                  "526:14:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62721,
                "src": "526:14:69"
              },
              "referencedDeclaration": 62721,
              "src": "526:14:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                "typeString": "contract ILiquidityRamp"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59065,
            "nodeType": "VariableDeclaration",
            "src": "627:41:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "709d039d",
            "mutability": "immutable",
            "name": "swapManager",
            "nameLocation": "657:11:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapManager_$62911",
              "typeString": "contract ISwapManager"
            },
            "typeName": {
              "id": 59064,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59063,
                "name": "ISwapManager",
                "nameLocations": [
                  "627:12:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62911,
                "src": "627:12:69"
              },
              "referencedDeclaration": 62911,
              "src": "627:12:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapManager_$62911",
                "typeString": "contract ISwapManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59068,
            "nodeType": "VariableDeclaration",
            "src": "723:33:69",
            "nodes": [],
            "baseFunctions": [
              62452
            ],
            "constant": false,
            "functionSelector": "75f4f18e",
            "mutability": "immutable",
            "name": "thisToken",
            "nameLocation": "747:9:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$48295",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 59067,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59066,
                "name": "IERC20",
                "nameLocations": [
                  "723:6:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48295,
                "src": "723:6:69"
              },
              "referencedDeclaration": 48295,
              "src": "723:6:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$48295",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59071,
            "nodeType": "VariableDeclaration",
            "src": "805:33:69",
            "nodes": [],
            "baseFunctions": [
              62459
            ],
            "constant": false,
            "functionSelector": "c451463b",
            "mutability": "immutable",
            "name": "thatToken",
            "nameLocation": "829:9:69",
            "scope": 59242,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$48295",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 59070,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59069,
                "name": "IERC20",
                "nameLocations": [
                  "805:6:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48295,
                "src": "805:6:69"
              },
              "referencedDeclaration": 48295,
              "src": "805:6:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$48295",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59094,
            "nodeType": "ModifierDefinition",
            "src": "903:209:69",
            "nodes": [],
            "body": {
              "id": 59093,
              "nodeType": "Block",
              "src": "926:186:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 59088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59074,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "957:3:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 59075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "961:6:69",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "957:10:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 59078,
                                "name": "swapManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59065,
                                "src": "979:11:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISwapManager_$62911",
                                  "typeString": "contract ISwapManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISwapManager_$62911",
                                  "typeString": "contract ISwapManager"
                                }
                              ],
                              "id": 59077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "971:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59076,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "971:7:69",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "971:20:69",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "957:34:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 59087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59081,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1011:3:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 59082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1015:6:69",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1011:10:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 59085,
                                "name": "liquidityRamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59062,
                                "src": "1033:13:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                                  "typeString": "contract ILiquidityRamp"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                                  "typeString": "contract ILiquidityRamp"
                                }
                              ],
                              "id": 59084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1025:7:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 59083,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1025:7:69",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 59086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1025:22:69",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1011:36:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "957:90:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c50546f6b656e5f5f556e617574686f72697a6564",
                        "id": 59089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1061:23:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e19971eb99f945a3bc13753572bb594da9c22b365fdadcdc23aa35c706ae645",
                          "typeString": "literal_string \"LPToken__Unauthorized\""
                        },
                        "value": "LPToken__Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e19971eb99f945a3bc13753572bb594da9c22b365fdadcdc23aa35c706ae645",
                          "typeString": "literal_string \"LPToken__Unauthorized\""
                        }
                      ],
                      "id": 59073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "936:7:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:158:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59091,
                  "nodeType": "ExpressionStatement",
                  "src": "936:158:69"
                },
                {
                  "id": 59092,
                  "nodeType": "PlaceholderStatement",
                  "src": "1104:1:69"
                }
              ]
            },
            "name": "onlyMinters",
            "nameLocation": "912:11:69",
            "parameters": {
              "id": 59072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:69"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59134,
            "nodeType": "FunctionDefinition",
            "src": "1470:363:69",
            "nodes": [],
            "body": {
              "id": 59133,
              "nodeType": "Block",
              "src": "1686:147:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59117,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59068,
                      "src": "1696:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59118,
                      "name": "_thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59098,
                      "src": "1708:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1696:22:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 59120,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:22:69"
                },
                {
                  "expression": {
                    "id": 59123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59121,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59071,
                      "src": "1728:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59122,
                      "name": "_thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59101,
                      "src": "1740:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1728:22:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 59124,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:22:69"
                },
                {
                  "expression": {
                    "id": 59127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59125,
                      "name": "liquidityRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59062,
                      "src": "1760:13:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                        "typeString": "contract ILiquidityRamp"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59126,
                      "name": "_liquidityRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59104,
                      "src": "1776:14:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                        "typeString": "contract ILiquidityRamp"
                      }
                    },
                    "src": "1760:30:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "id": 59128,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:30:69"
                },
                {
                  "expression": {
                    "id": 59131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59129,
                      "name": "swapManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59065,
                      "src": "1800:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapManager_$62911",
                        "typeString": "contract ISwapManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59130,
                      "name": "_swapManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59107,
                      "src": "1814:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISwapManager_$62911",
                        "typeString": "contract ISwapManager"
                      }
                    },
                    "src": "1800:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapManager_$62911",
                      "typeString": "contract ISwapManager"
                    }
                  },
                  "id": 59132,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:26:69"
                }
              ]
            },
            "documentation": {
              "id": 59095,
              "nodeType": "StructuredDocumentation",
              "src": "1118:347:69",
              "text": " @notice Constructor for creating a new LP Token.\n @param _thisToken The first token in the liquidity pair.\n @param _thatToken The second token in the liquidity pair.\n @param _liquidityRamp The liquidity ramp contract governing the pool.\n @param _swapManager The swap manager contract for asset exchanges."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5374616972776179204c5020546f6b656e",
                    "id": 59110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1622:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_327df05c383c93f9a81353fa756bcd6bdc556cb0fd9595587fc1f20fef7de34c",
                      "typeString": "literal_string \"Stairway LP Token\""
                    },
                    "value": "Stairway LP Token"
                  },
                  {
                    "hexValue": "5357592d4c50",
                    "id": 59111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1643:8:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0febf03c6b8ffe97606e967f5336c32e21cc13f69361d9873cd671ac5ec4dfcf",
                      "typeString": "literal_string \"SWY-LP\""
                    },
                    "value": "SWY-LP"
                  }
                ],
                "id": 59112,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59109,
                  "name": "ERC20",
                  "nameLocations": [
                    "1616:5:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48217,
                  "src": "1616:5:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "1616:36:69"
              },
              {
                "arguments": [
                  {
                    "hexValue": "5374616972776179204c5020546f6b656e",
                    "id": 59114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1665:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_327df05c383c93f9a81353fa756bcd6bdc556cb0fd9595587fc1f20fef7de34c",
                      "typeString": "literal_string \"Stairway LP Token\""
                    },
                    "value": "Stairway LP Token"
                  }
                ],
                "id": 59115,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59113,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "1653:11:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48467,
                  "src": "1653:11:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "1653:32:69"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59098,
                  "mutability": "mutable",
                  "name": "_thisToken",
                  "nameLocation": "1498:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1491:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59096,
                      "name": "IERC20",
                      "nameLocations": [
                        "1491:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1491:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1491:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59101,
                  "mutability": "mutable",
                  "name": "_thatToken",
                  "nameLocation": "1525:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1518:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59099,
                      "name": "IERC20",
                      "nameLocations": [
                        "1518:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "1518:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "1518:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59104,
                  "mutability": "mutable",
                  "name": "_liquidityRamp",
                  "nameLocation": "1560:14:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1545:29:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                    "typeString": "contract ILiquidityRamp"
                  },
                  "typeName": {
                    "id": 59103,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59102,
                      "name": "ILiquidityRamp",
                      "nameLocations": [
                        "1545:14:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62721,
                      "src": "1545:14:69"
                    },
                    "referencedDeclaration": 62721,
                    "src": "1545:14:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityRamp_$62721",
                      "typeString": "contract ILiquidityRamp"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59107,
                  "mutability": "mutable",
                  "name": "_swapManager",
                  "nameLocation": "1597:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59134,
                  "src": "1584:25:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISwapManager_$62911",
                    "typeString": "contract ISwapManager"
                  },
                  "typeName": {
                    "id": 59106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59105,
                      "name": "ISwapManager",
                      "nameLocations": [
                        "1584:12:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62911,
                      "src": "1584:12:69"
                    },
                    "referencedDeclaration": 62911,
                    "src": "1584:12:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISwapManager_$62911",
                      "typeString": "contract ISwapManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1481:134:69"
            },
            "returnParameters": {
              "id": 59116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1686:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59161,
            "nodeType": "FunctionDefinition",
            "src": "2114:211:69",
            "nodes": [],
            "body": {
              "id": 59160,
              "nodeType": "Block",
              "src": "2177:148:69",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    },
                    "id": 59146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59144,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59138,
                      "src": "2191:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 59145,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59068,
                      "src": "2200:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2191:18:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59149,
                  "nodeType": "IfStatement",
                  "src": "2187:40:69",
                  "trueBody": {
                    "expression": {
                      "id": 59147,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59071,
                      "src": "2218:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "functionReturnParameters": 59143,
                    "id": 59148,
                    "nodeType": "Return",
                    "src": "2211:16:69"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    },
                    "id": 59152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59150,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59138,
                      "src": "2241:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 59151,
                      "name": "thatToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59071,
                      "src": "2250:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2241:18:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59155,
                  "nodeType": "IfStatement",
                  "src": "2237:40:69",
                  "trueBody": {
                    "expression": {
                      "id": 59153,
                      "name": "thisToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59068,
                      "src": "2268:9:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$48295",
                        "typeString": "contract IERC20"
                      }
                    },
                    "functionReturnParameters": 59143,
                    "id": 59154,
                    "nodeType": "Return",
                    "src": "2261:16:69"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c50546f6b656e5f5f556e6b6e6f776e546f6b656e",
                        "id": 59157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2294:23:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9bb63a7f0c8868e2b6aa4c39e2b1014791ef481032499ac60d2b3d2d3d1a896",
                          "typeString": "literal_string \"LPToken__UnknownToken\""
                        },
                        "value": "LPToken__UnknownToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d9bb63a7f0c8868e2b6aa4c39e2b1014791ef481032499ac60d2b3d2d3d1a896",
                          "typeString": "literal_string \"LPToken__UnknownToken\""
                        }
                      ],
                      "id": 59156,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2287:6:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 59158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:31:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59159,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:31:69"
                }
              ]
            },
            "baseFunctions": [
              62469
            ],
            "documentation": {
              "id": 59135,
              "nodeType": "StructuredDocumentation",
              "src": "1839:270:69",
              "text": " @notice Returns the complementary token for a given token in the pair.\n @param token The token for which to find the complement.\n @return The complementary token.\n @dev Reverts if the provided token is not part of the liquidity pair."
            },
            "functionSelector": "302bb94d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "otherToken",
            "nameLocation": "2123:10:69",
            "parameters": {
              "id": 59139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59138,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2141:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59161,
                  "src": "2134:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59136,
                      "name": "IERC20",
                      "nameLocations": [
                        "2134:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2134:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2134:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:14:69"
            },
            "returnParameters": {
              "id": 59143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59161,
                  "src": "2169:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$48295",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 59141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59140,
                      "name": "IERC20",
                      "nameLocations": [
                        "2169:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48295,
                      "src": "2169:6:69"
                    },
                    "referencedDeclaration": 48295,
                    "src": "2169:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$48295",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2168:8:69"
            },
            "scope": 59242,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59177,
            "nodeType": "FunctionDefinition",
            "src": "2596:97:69",
            "nodes": [],
            "body": {
              "id": 59176,
              "nodeType": "Block",
              "src": "2659:34:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59164,
                        "src": "2675:2:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59173,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59166,
                        "src": "2679:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59171,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59225
                      ],
                      "referencedDeclaration": 59225,
                      "src": "2669:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:17:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59175,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:17:69"
                }
              ]
            },
            "baseFunctions": [
              62477
            ],
            "documentation": {
              "id": 59162,
              "nodeType": "StructuredDocumentation",
              "src": "2331:260:69",
              "text": " @notice Mints new LP tokens.\n @param to The address receiving the minted tokens.\n @param amount The amount of LP tokens to mint.\n @dev Can only be called by addresses authorized to mint (i.e., swapManager or liquidityRamp)."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59168,
                  "name": "onlyMinters",
                  "nameLocations": [
                    "2647:11:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59094,
                  "src": "2647:11:69"
                },
                "nodeType": "ModifierInvocation",
                "src": "2647:11:69"
              }
            ],
            "name": "mint",
            "nameLocation": "2605:4:69",
            "parameters": {
              "id": 59167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59164,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2618:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59177,
                  "src": "2610:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59166,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2630:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59177,
                  "src": "2622:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2622:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2609:28:69"
            },
            "returnParameters": {
              "id": 59170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2659:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59190,
            "nodeType": "FunctionDefinition",
            "src": "2827:79:69",
            "nodes": [],
            "body": {
              "id": 59189,
              "nodeType": "Block",
              "src": "2864:42:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2880:3:69",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2884:6:69",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2880:10:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59186,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59180,
                        "src": "2892:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59183,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59241
                      ],
                      "referencedDeclaration": 59241,
                      "src": "2874:5:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:25:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59188,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:25:69"
                }
              ]
            },
            "baseFunctions": [
              62483
            ],
            "documentation": {
              "id": 59178,
              "nodeType": "StructuredDocumentation",
              "src": "2699:123:69",
              "text": " @notice Burns LP tokens from the caller's address.\n @param amount The amount of LP tokens to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2836:4:69",
            "parameters": {
              "id": 59181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59180,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2849:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59190,
                  "src": "2841:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2841:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2840:16:69"
            },
            "returnParameters": {
              "id": 59182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2864:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59209,
            "nodeType": "FunctionDefinition",
            "src": "2991:179:69",
            "nodes": [],
            "body": {
              "id": 59208,
              "nodeType": "Block",
              "src": "3110:60:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59203,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59192,
                        "src": "3146:4:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59204,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59194,
                        "src": "3152:2:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59205,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59196,
                        "src": "3156:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59200,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3120:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LPToken_$59242_$",
                          "typeString": "type(contract super LPToken)"
                        }
                      },
                      "id": 59202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3126:19:69",
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48946,
                      "src": "3120:25:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 59206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:43:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59207,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:43:69"
                }
              ]
            },
            "baseFunctions": [
              48946
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "3000:19:69",
            "overrides": {
              "id": 59198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3101:8:69"
            },
            "parameters": {
              "id": 59197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59192,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3037:4:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59209,
                  "src": "3029:12:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59194,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3059:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59209,
                  "src": "3051:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59196,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3079:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59209,
                  "src": "3071:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3019:72:69"
            },
            "returnParameters": {
              "id": 59199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59225,
            "nodeType": "FunctionDefinition",
            "src": "3176:101:69",
            "nodes": [],
            "body": {
              "id": 59224,
              "nodeType": "Block",
              "src": "3237:40:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59220,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59211,
                        "src": "3259:2:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59221,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59213,
                        "src": "3263:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3247:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LPToken_$59242_$",
                          "typeString": "type(contract super LPToken)"
                        }
                      },
                      "id": 59219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3253:5:69",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48893,
                      "src": "3247:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:23:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59223,
                  "nodeType": "ExpressionStatement",
                  "src": "3247:23:69"
                }
              ]
            },
            "baseFunctions": [
              48893
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "3185:5:69",
            "overrides": {
              "id": 59215,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3228:8:69"
            },
            "parameters": {
              "id": 59214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59211,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3199:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59225,
                  "src": "3191:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3191:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59213,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3211:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59225,
                  "src": "3203:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3203:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3190:28:69"
            },
            "returnParameters": {
              "id": 59216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3237:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59241,
            "nodeType": "FunctionDefinition",
            "src": "3283:111:69",
            "nodes": [],
            "body": {
              "id": 59240,
              "nodeType": "Block",
              "src": "3349:45:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59236,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59227,
                        "src": "3371:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59237,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59229,
                        "src": "3380:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 59233,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3359:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LPToken_$59242_$",
                          "typeString": "type(contract super LPToken)"
                        }
                      },
                      "id": 59235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3365:5:69",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48916,
                      "src": "3359:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:28:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59239,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:28:69"
                }
              ]
            },
            "baseFunctions": [
              48916
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3292:5:69",
            "overrides": {
              "id": 59231,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3340:8:69"
            },
            "parameters": {
              "id": 59230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59227,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3306:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59241,
                  "src": "3298:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3298:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59229,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3323:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 59241,
                  "src": "3315:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3297:33:69"
            },
            "returnParameters": {
              "id": 59232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3349:0:69"
            },
            "scope": 59242,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59056,
              "name": "ERC20Votes",
              "nameLocations": [
                "463:10:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49201,
              "src": "463:10:69"
            },
            "id": 59057,
            "nodeType": "InheritanceSpecifier",
            "src": "463:10:69"
          },
          {
            "baseName": {
              "id": 59058,
              "name": "ILPToken",
              "nameLocations": [
                "475:8:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62484,
              "src": "475:8:69"
            },
            "id": 59059,
            "nodeType": "InheritanceSpecifier",
            "src": "475:8:69"
          }
        ],
        "canonicalName": "LPToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59055,
          "nodeType": "StructuredDocumentation",
          "src": "253:189:69",
          "text": " @title LPToken\n @notice This contract represents a liquidity pool token (LP token) in the Stairway ecosystem.\n @dev It inherits from ERC20Votes to enable governance features."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59242,
          62484,
          49201,
          47509,
          47472,
          47524,
          48467,
          52751,
          47500,
          49262,
          48217,
          49226,
          48295,
          51552
        ],
        "name": "LPToken",
        "nameLocation": "452:7:69",
        "scope": 59243,
        "usedErrors": [
          51639,
          51641,
          62443,
          62445
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 69
}